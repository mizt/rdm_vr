var THREE={REVISION:"68"};"object"==typeof module&&(module.exports=THREE),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(t){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(t,e,r){if(0===e)this.r=this.g=this.b=r;else{var i=function(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t},n=r<=.5?r*(1+e):r+e-r*e,o=2*r-n;this.r=i(o,n,t+1/3),this.g=i(o,n,t),this.b=i(o,n,t-1/3)}return this},setStyle:function(t){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)){var e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t);return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)){var e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t);return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(t)){var e=/^\#([0-9a-f]{6})$/i.exec(t);return this.setHex(parseInt(e[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)){var e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t);return this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this}if(/^(\w+)$/i.test(t))return this.setHex(THREE.ColorKeywords[t]),this},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t){return this.r=t.r*t.r,this.g=t.g*t.g,this.b=t.b*t.b,this},copyLinearToGamma:function(t){return this.r=Math.sqrt(t.r),this.g=Math.sqrt(t.g),this.b=Math.sqrt(t.b),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,r,i=t||{h:0,s:0,l:0},n=this.r,o=this.g,a=this.b,s=Math.max(n,o,a),h=Math.min(n,o,a),l=(h+s)/2;if(h===s)e=0,r=0;else{var c=s-h;switch(r=l<=.5?c/(s+h):c/(2-s-h),s){case n:e=(o-a)/c+(o<a?6:0);break;case o:e=(a-n)/c+2;break;case a:e=(n-o)/c+4}e/=6}return i.h=e,i.s=r,i.l=l,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t){return this.r=t[0],this.g=t[1],this.b=t[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2);return"XYZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===t.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],h=r[9],l=r[2],c=r[6],u=r[10],f=i+s+u;return f>0?(e=.5/Math.sqrt(f+1),this._w=.25/e,this._x=(c-h)*e,this._y=(o-l)*e,this._z=(a-n)*e):i>s&&i>u?(e=2*Math.sqrt(1+i-s-u),this._w=(c-h)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(o+l)/e):s>u?(e=2*Math.sqrt(1+s-i-u),this._w=(o-l)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(h+c)/e):(e=2*Math.sqrt(1+u-i-s),this._w=(a-n)/e,this._x=(o+l)/e,this._y=(h+c)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3),e=r.dot(i)+1,e<1e-6?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,i),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,h=e._z,l=e._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);if(Math.abs(h)<.001)return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;var l=Math.sin((1-e)*s)/h,c=Math.sin(e*s)/h;return this._w=o*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=n*l+this._z*c,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],this._w=t[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(t,e,r,i){return r.copy(t).slerp(e,i)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScalar:function(t){return this.x+=t,this.y+=t,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e}else this.x=0,this.y=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector2,e=new THREE.Vector2),t.set(r,r),e.set(i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t){return this.x=t[0],this.y=t[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t;return function(e){return e instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(e)),this}}(),applyAxisAngle:function(){var t;return function(e,r){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,r)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i+n[12],this.y=n[1]*e+n[5]*r+n[9]*i+n[13],this.z=n[2]*e+n[6]*r+n[10]*i+n[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,o=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*o,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*o,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*o,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z,s=t.w,h=s*e+o*i-a*r,l=s*r+a*e-n*i,c=s*i+n*r-o*e,u=-n*e-o*r-a*i;return this.x=h*s+u*-n+l*-a-c*-o,this.y=l*s+u*-o+c*-n-h*-a,this.z=c*s+u*-a+h*-o-l*-n,this},transformDirection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3),t.set(r,r,r),e.set(i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var r=this.x,i=this.y,n=this.z;return this.x=i*t.z-n*t.y,this.y=n*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var t,e;return function(r){return void 0===t&&(t=new THREE.Vector3),t.copy(r).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i},setEulerFromRotationMatrix:function(t,e){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(t,e){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),r=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),i=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=r,this.z=i,this},setFromMatrixColumn:function(t,e){var r=4*t,i=e.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*e+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*e+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*e+o[7]*r+o[11]*i+o[15]*n,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e,this.w*=e}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n,o=t.elements,a=o[0],s=o[4],h=o[8],l=o[1],c=o[5],u=o[9],f=o[2],E=o[6],p=o[10];if(Math.abs(s-l)<.01&&Math.abs(h-f)<.01&&Math.abs(u-E)<.01){if(Math.abs(s+l)<.1&&Math.abs(h+f)<.1&&Math.abs(u+E)<.1&&Math.abs(a+c+p-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var d=(a+1)/2,m=(c+1)/2,g=(p+1)/2,v=(s+l)/4,T=(h+f)/4,y=(u+E)/4;return d>m&&d>g?d<.01?(r=0,i=.707106781,n=.707106781):(r=Math.sqrt(d),i=v/r,n=T/r):m>g?m<.01?(r=.707106781,i=0,n=.707106781):(i=Math.sqrt(m),r=v/i,n=y/i):g<.01?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(g),r=T/n,i=y/n),this.set(r,i,n,e),this}var R=Math.sqrt((E-u)*(E-u)+(h-f)*(h-f)+(l-s)*(l-s));return Math.abs(R)<.001&&(R=1),this.x=(E-u)/R,this.y=(h-f)/R,this.z=(l-s)/R,this.w=Math.acos((a+c+p-1)/2),this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this.w>t.w&&(this.w=t.w),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this.w<t.w&&(this.w=t.w),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this.w<t.w?this.w=t.w:this.w>e.w&&(this.w=e.w),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector4,e=new THREE.Vector4),t.set(r,r,r,r),e.set(i,i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e){var r=THREE.Math.clamp,i=t.elements,n=i[0],o=i[4],a=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],f=i[10];return e=e||this._order,"XYZ"===e?(this._y=Math.asin(r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(a,f),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===e?(this._y=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(u,f),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,f))):"XZY"===e?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,this.onChangeCallback(),this},setFromQuaternion:function(t,e,r){var i=THREE.Math.clamp,n=t.x*t.x,o=t.y*t.y,a=t.z*t.z,s=t.w*t.w;return e=e||this._order,"XYZ"===e?(this._x=Math.atan2(2*(t.x*t.w-t.y*t.z),s-n-o+a),this._y=Math.asin(i(2*(t.x*t.z+t.y*t.w),-1,1)),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s+n-o-a)):"YXZ"===e?(this._x=Math.asin(i(2*(t.x*t.w-t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s-n-o+a),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s-n+o-a)):"ZXY"===e?(this._x=Math.asin(i(2*(t.x*t.w+t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.y*t.w-t.z*t.x),s-n-o+a),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s-n+o-a)):"ZYX"===e?(this._x=Math.atan2(2*(t.x*t.w+t.z*t.y),s-n-o+a),this._y=Math.asin(i(2*(t.y*t.w-t.x*t.z),-1,1)),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s+n-o-a)):"YZX"===e?(this._x=Math.atan2(2*(t.x*t.w-t.z*t.y),s-n+o-a),this._y=Math.atan2(2*(t.y*t.w-t.x*t.z),s+n-o-a),this._z=Math.asin(i(2*(t.x*t.y+t.z*t.w),-1,1))):"XZY"===e?(this._x=Math.atan2(2*(t.x*t.w+t.y*t.z),s-n+o-a),
this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s+n-o-a),this._z=Math.asin(i(2*(t.z*t.w-t.x*t.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+e),this._order=e,r!==!1&&this.onChangeCallback(),this},reorder:function(){var t=new THREE.Quaternion;return function(e){t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){return(t||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new THREE.Vector3;return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i){t.subVectors(r,this.start),e.subVectors(this.end,this.start);var n=e.dot(e),o=e.dot(t),a=o/n;return i&&(a=THREE.Math.clamp(a,0,1)),a}}(),closestPointToPoint:function(t,e,r){var i=this.closestPointToPointParameter(t,e),n=r||new THREE.Vector3;return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(1/0,1/0),this.max=void 0!==e?e:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector2;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new THREE.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new THREE.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector2;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector3;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(){var t=new THREE.Vector3;return function(e){var r=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse(function(e){if(void 0!==e.geometry&&void 0!==e.geometry.vertices)for(var i=e.geometry.vertices,n=0,o=i.length;n<o;n++)t.copy(i[n]),t.applyMatrix4(e.matrixWorld),r.expandByPoint(t)}),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new THREE.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new THREE.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3;return function(e){var r=e||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(t).length(),r}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(t,e,r,i,n,o,a,s,h){this.elements=new Float32Array(9);var l=this.elements;l[0]=void 0!==t?t:1,l[3]=e||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=o||0,l[2]=a||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,o,a,s,h){var l=this.elements;return l[0]=t,l[3]=e,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){var e=t.elements;return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0,o=r;n<i;n+=3,o+=3)t.x=e[o],t.y=e[o+1],t.z=e[o+2],t.applyMatrix3(this),e[o]=t.x,e[o+1]=t.y,e[o+2]=t.z;return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],h=t[7],l=t[8];return e*o*l-e*a*h-r*n*l+r*a*s+i*n*h-i*o*s},getInverse:function(t,e){var r=t.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var o="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(o);return console.warn(o),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){var t=this.elements;return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])}},THREE.Matrix4=function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==t?t:1,m[4]=e||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=E||0,m[11]=p||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=E,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractRotation:function(){var t=new THREE.Vector3;return function(e){var r=this.elements,i=e.elements,n=1/t.set(i[0],i[1],i[2]).length(),o=1/t.set(i[4],i[5],i[6]).length(),a=1/t.set(i[8],i[9],i[10]).length();return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[8]=i[8]*a,r[9]=i[9]*a,r[10]=i[10]*a,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,i=t.y,n=t.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(n),c=Math.sin(n);if("XYZ"===t.order){var u=o*l,f=o*c,E=a*l,p=a*c;e[0]=s*l,e[4]=-s*c,e[8]=h,e[1]=f+E*h,e[5]=u-p*h,e[9]=-a*s,e[2]=p-u*h,e[6]=E+f*h,e[10]=o*s}else if("YXZ"===t.order){var d=s*l,m=s*c,g=h*l,v=h*c;e[0]=d+v*a,e[4]=g*a-m,e[8]=o*h,e[1]=o*c,e[5]=o*l,e[9]=-a,e[2]=m*a-g,e[6]=v+d*a,e[10]=o*s}else if("ZXY"===t.order){var d=s*l,m=s*c,g=h*l,v=h*c;e[0]=d-v*a,e[4]=-o*c,e[8]=g+m*a,e[1]=m+g*a,e[5]=o*l,e[9]=v-d*a,e[2]=-o*h,e[6]=a,e[10]=o*s}else if("ZYX"===t.order){var u=o*l,f=o*c,E=a*l,p=a*c;e[0]=s*l,e[4]=E*h-f,e[8]=u*h+p,e[1]=s*c,e[5]=p*h+u,e[9]=f*h-E,e[2]=-h,e[6]=a*s,e[10]=o*s}else if("YZX"===t.order){var T=o*s,y=o*h,R=a*s,x=a*h;e[0]=s*l,e[4]=x-T*c,e[8]=R*c+y,e[1]=c,e[5]=o*l,e[9]=-a*l,e[2]=-h*l,e[6]=y*c+R,e[10]=T-x*c}else if("XZY"===t.order){var T=o*s,y=o*h,R=a*s,x=a*h;e[0]=s*l,e[4]=-c,e[8]=h*l,e[1]=T*c+x,e[5]=o*l,e[9]=y*c-R,e[2]=R*c-y,e[6]=a*l,e[10]=x*c+T}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,o=t.w,a=r+r,s=i+i,h=n+n,l=r*a,c=r*s,u=r*h,f=i*s,E=i*h,p=n*h,d=o*a,m=o*s,g=o*h;return e[0]=1-(f+p),e[4]=c-g,e[8]=u+m,e[1]=c+g,e[5]=1-(l+p),e[9]=E-d,e[2]=u-m,e[6]=E+d,e[10]=1-(l+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),t.crossVectors(o,r).normalize(),0===t.length()&&(r.x+=1e-4,t.crossVectors(o,r).normalize()),e.crossVectors(r,t),a[0]=t.x,a[4]=e.x,a[8]=r.x,a[1]=t.y,a[5]=e.y,a[9]=r.y,a[2]=t.z,a[6]=e.z,a[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],g=r[3],v=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],_=i[12],b=i[1],w=i[5],M=i[9],S=i[13],C=i[2],A=i[6],L=i[10],P=i[14],F=i[3],D=i[7],U=i[11],V=i[15];return n[0]=o*R+a*b+s*C+h*F,n[4]=o*x+a*w+s*A+h*D,n[8]=o*H+a*M+s*L+h*U,n[12]=o*_+a*S+s*P+h*V,n[1]=l*R+c*b+u*C+f*F,n[5]=l*x+c*w+u*A+f*D,n[9]=l*H+c*M+u*L+f*U,n[13]=l*_+c*S+u*P+f*V,n[2]=E*R+p*b+d*C+m*F,n[6]=E*x+p*w+d*A+m*D,n[10]=E*H+p*M+d*L+m*U,n[14]=E*_+p*S+d*P+m*V,n[3]=g*R+v*b+T*C+y*F,n[7]=g*x+v*w+T*A+y*D,n[11]=g*H+v*M+T*L+y*U,n[15]=g*_+v*S+T*P+y*V,this},multiplyToArray:function(t,e,r){var i=this.elements;return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3;return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0,o=r;n<i;n+=3,o+=3)t.x=e[o],t.y=e[o+1],t.z=e[o+2],t.applyMatrix4(this),e[o]=t.x,e[o+1]=t.y,e[o+2]=t.z;return e}}(),rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],h=t[13],l=t[2],c=t[6],u=t[10],f=t[14];return t[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*f-r*s*f)+t[7]*(+e*s*f-e*h*u+n*o*u-i*o*f+i*h*l-n*s*l)+t[11]*(+e*h*c-e*a*f-n*o*c+r*o*f+n*a*l-r*h*l)+t[15]*(-i*a*l-e*s*c+e*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t},getPosition:function(){var t=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],E=i[6],p=i[10],d=i[14],m=i[3],g=i[7],v=i[11],T=i[15];r[0]=c*d*g-u*p*g+u*E*v-l*d*v-c*E*T+l*p*T,r[4]=s*p*g-a*d*g-s*E*v+o*d*v+a*E*T-o*p*T,r[8]=a*u*g-s*c*g+s*l*v-o*u*v-a*l*T+o*c*T,r[12]=s*c*E-a*u*E-s*l*p+o*u*p+a*l*d-o*c*d,r[1]=u*p*m-c*d*m-u*f*v+h*d*v+c*f*T-h*p*T,r[5]=a*d*m-s*p*m+s*f*v-n*d*v-a*f*T+n*p*T,r[9]=s*c*m-a*u*m-s*h*v+n*u*v+a*h*T-n*c*T,r[13]=a*u*f-s*c*f+s*h*p-n*u*p-a*h*d+n*c*d,r[2]=l*d*m-u*E*m+u*f*g-h*d*g-l*f*T+h*E*T,r[6]=s*E*m-o*d*m-s*f*g+n*d*g+o*f*T-n*E*T,r[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*T+n*l*T,r[14]=s*l*f-o*u*f-s*h*E+n*u*E+o*h*d-n*l*d,r[3]=c*E*m-l*p*m-c*f*g+h*p*g+l*f*v-h*E*v,r[7]=o*p*m-a*E*m+a*f*g-n*p*g-o*f*v+n*E*v,r[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*v-n*l*v,r[15]=o*c*f-a*l*f+a*h*E-n*c*E-o*h*p+n*l*p;var y=n*r[0]+h*r[4]+f*r[8]+m*r[12];if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(t){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(t){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(t){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(t){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(t,e){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z;return e[0]*=r,e[4]*=i,e[8]*=n,e[1]*=r,e[5]*=i,e[9]*=n,e[2]*=r,e[6]*=i,e[10]*=n,e[3]*=r,e[7]*=i,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,Math.max(r,i)))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t=new THREE.Vector3,e=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=t.set(o[0],o[1],o[2]).length(),s=t.set(o[4],o[5],o[6]).length(),h=t.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],e.elements.set(this.elements);var l=1/a,c=1/s,u=1/h;return e.elements[0]*=l,e.elements[1]*=l,e.elements[2]*=l,e.elements[4]*=c,e.elements[5]*=c,e.elements[6]*=c,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,i.setFromRotationMatrix(e),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(t,e,r,i,n,o){var a=this.elements,s=2*n/(e-t),h=2*n/(i-r),l=(e+t)/(e-t),c=(i+r)/(i-r),u=-(o+n)/(o-n),f=-2*o*n/(o-n);return a[0]=s,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=h,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*t)),o=-n,a=o*e,s=n*e;return this.makeFrustum(a,s,o,n,r,i)},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=e-t,h=r-i,l=o-n,c=(e+t)/s,u=(r+i)/h,f=(o+n)/l;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){var t=this.elements;return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var t=new THREE.Vector3;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var r=e||new THREE.Vector3;r.subVectors(t,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){var r=t.subVectors(e,this.origin).dot(this.direction);return r<0?this.origin.distanceTo(e):(t.copy(this.direction).multiplyScalar(r).add(this.origin),t.distanceTo(e))}}(),distanceSqToSegment:function(t,e,r,i){var n,o,a,s,h=t.clone().add(e).multiplyScalar(.5),l=e.clone().sub(t).normalize(),c=.5*t.distanceTo(e),u=this.origin.clone().sub(h),f=-this.direction.dot(l),E=u.dot(this.direction),p=-u.dot(l),d=u.lengthSq(),m=Math.abs(1-f*f);if(m>=0)if(n=f*p-E,o=f*E-p,s=c*m,n>=0)if(o>=-s)if(o<=s){var g=1/m;n*=g,o*=g,a=n*(n+f*o+2*E)+o*(f*n+o+2*p)+d}else o=c,n=Math.max(0,-(f*o+E)),a=-n*n+o*(o+2*p)+d;else o=-c,n=Math.max(0,-(f*o+E)),a=-n*n+o*(o+2*p)+d;else o<=-s?(n=Math.max(0,-(-f*c+E)),o=n>0?-c:Math.min(Math.max(-c,-p),c),a=-n*n+o*(o+2*p)+d):o<=s?(n=0,o=Math.min(Math.max(-c,-p),c),a=o*(o+2*p)+d):(n=Math.max(0,-(f*c+E)),o=n>0?c:Math.min(Math.max(-c,-p),c),a=-n*n+o*(o+2*p)+d);else o=f>0?-c:c,n=Math.max(0,-(f*o+E)),a=-n*n+o*(o+2*p)+d;return r&&r.copy(this.direction.clone().multiplyScalar(n).add(this.origin)),i&&i.copy(l.clone().multiplyScalar(o).add(h)),a},isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},intersectSphere:function(){var t=new THREE.Vector3;return function(e,r){t.subVectors(e.center,this.origin);var i=t.dot(this.direction),n=t.dot(t)-i*i,o=e.radius*e.radius;if(n>o)return null;var a=Math.sqrt(o-n),s=i-a,h=i+a;return s<0&&h<0?null:s<0?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0==e)return 0==t.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(t.normal)+t.constant)/e;return r>=0?r:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},isIntersectionBox:function(){var t=new THREE.Vector3;return function(e){return null!==this.intersectBox(e,t)}}(),intersectBox:function(t,e){var r,i,n,o,a,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(r=(t.min.x-u.x)*h,i=(t.max.x-u.x)*h):(r=(t.max.x-u.x)*h,i=(t.min.x-u.x)*h),l>=0?(n=(t.min.y-u.y)*l,o=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,o=(t.min.y-u.y)*l),r>o||n>i?null:((n>r||r!==r)&&(r=n),(o<i||i!==i)&&(i=o),c>=0?(a=(t.min.z-u.z)*c,s=(t.max.z-u.z)*c):(a=(t.max.z-u.z)*c,s=(t.min.z-u.z)*c),r>s||a>i?null:((a>r||r!==r)&&(r=a),(s<i||i!==i)&&(i=s),i<0?null:this.at(r>=0?r:i,e)))},intersectTriangle:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){e.subVectors(o,n),r.subVectors(a,n),i.crossVectors(e,r);var l,c=this.direction.dot(i);if(c>0){if(s)return null;l=1}else{if(!(c<0))return null;l=-1,c=-c}t.subVectors(this.origin,n);var u=l*this.direction.dot(r.crossVectors(t,r));if(u<0)return null;var f=l*this.direction.dot(e.cross(t));if(f<0)return null;if(u+f>c)return null;var E=-l*t.dot(i);return E<0?null:this.at(E/c,h)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new THREE.Box3;return function(e,r){var i=this.center;void 0!==r?i.copy(r):t.setFromPoints(e).center(i);for(var n=0,o=0,a=e.length;o<a;o++)n=Math.max(n,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new THREE.Vector3;return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){var e=t||new THREE.Box3;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(t,e,r,i,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],f=r[9],E=r[10],p=r[11],d=r[12],m=r[13],g=r[14],v=r[15];return e[0].setComponents(a-i,c-s,p-u,v-d).normalize(),e[1].setComponents(a+i,c+s,p+u,v+d).normalize(),e[2].setComponents(a+n,c+h,p+f,v+m).normalize(),e[3].setComponents(a-n,c-h,p-f,v-m).normalize(),e[4].setComponents(a-o,c-l,p-E,v-g).normalize(),e[5].setComponents(a+o,c+l,p+E,v+g).normalize(),this},intersectsObject:function(){var t=new THREE.Sphere;return function(e){var r=e.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),t.copy(r.boundingSphere),t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++){if(e[n].distanceToPoint(r)<i)return!1}return!0},intersectsBox:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;n<6;n++){var o=i[n];t.x=o.normal.x>0?r.min.x:r.max.x,e.x=o.normal.x>0?r.max.x:r.min.x,t.y=o.normal.y>0?r.min.y:r.max.y,e.y=o.normal.y>0?r.max.y:r.min.y,t.z=o.normal.z>0?r.min.z:r.max.z,e.z=o.normal.z>0?r.max.z:r.min.z;var a=o.distanceToPoint(t),s=o.distanceToPoint(e);if(a<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i,n){var o=t.subVectors(n,i).cross(e.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var r=this.distanceToPoint(t);return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),r=this.distanceToPoint(t.end);return e<0&&r>0||r<0&&e>0},intersectLine:function(){var t=new THREE.Vector3;return function(e,r){var i=r||new THREE.Vector3,n=e.delta(t),o=this.normal.dot(n);if(0!=o){var a=-(e.start.dot(this.normal)+this.constant)/o;if(!(a<0||a>1))return i.copy(n).multiplyScalar(a).add(e.start)}else if(0==this.distanceToPoint(e.start))return i.copy(e.start)}}(),coplanarPoint:function(t){return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),a=t.copy(this.normal).applyMatrix3(o),s=this.coplanarPoint(e);return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(a,s),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),i=0;return function(){for(var n=0;n<36;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,r[n]=e[19==n?3&t|8:t]);return r.join("")}}(),clamp:function(t,e,r){
return t<e?e:t>r?r:t},clampBottom:function(t,e){return t<e?e:t},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},sign:function(t){return t<0?-1:t>0?1:0},degToRad:function(){var t=Math.PI/180;return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI;return function(e){return e*t}}(),isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t}},THREE.Spline=function(t){function e(t,e,r,i,n,o,a){var s=.5*(r-t),h=.5*(i-e);return(2*(e-r)+s+h)*a+(-3*(e-r)-2*s-h)*o+s*n+e}this.points=t;var r,i,n,o,a,s,h,l,c,u=[],f={x:0,y:0,z:0};this.initFromArray=function(t){this.points=[];for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return r=(this.points.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,f.x=e(s.x,h.x,l.x,c.x,n,o,a),f.y=e(s.y,h.y,l.y,c.y,n,o,a),f.z=e(s.z,h.z,l.z,c.z,n,o,a),f},this.getControlPointsArray=function(){var t,e,r=this.points.length,i=[];for(t=0;t<r;t++)e=this.points[t],i[t]=[e.x,e.y,e.z];return i},this.getLength=function(t){var e,r,i,n,o=0,a=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,t||(t=100),i=this.points.length*t,h.copy(this.points[0]),e=1;e<i;e++)r=e/i,n=this.getPoint(r),l.copy(n),u+=l.distanceTo(h),h.copy(n),o=(this.points.length-1)*r,(a=Math.floor(o))!=s&&(c[a]=u,s=a);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(t){var e,r,i,n,o,a,s,h,l=[],c=new THREE.Vector3,u=this.getLength();for(l.push(c.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(a=u.chunks[e]-u.chunks[e-1],s=Math.ceil(t*a/u.total),n=(e-1)/(this.points.length-1),o=e/(this.points.length-1),r=1;r<s-1;r++)i=n+r*(1/s)*(o-n),h=this.getPoint(i),l.push(c.copy(h).clone());l.push(c.copy(this.points[e]).clone())}this.points=l}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var t=new THREE.Vector3;return function(e,r,i,n){var o=n||new THREE.Vector3;o.subVectors(i,r),t.subVectors(e,r),o.cross(t);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){t.subVectors(a,n),e.subVectors(o,n),r.subVectors(i,n);var h=t.dot(t),l=t.dot(e),c=t.dot(r),u=e.dot(e),f=e.dot(r),E=h*u-l*l,p=s||new THREE.Vector3;if(0==E)return p.set(-2,-1,-1);var d=1/E,m=(u*c-l*f)*d,g=(h*f-l*c)*d;return p.set(1-m-g,g,m)}}(),THREE.Triangle.containsPoint=function(){var t=new THREE.Vector3;return function(e,r,i,n){var o=THREE.Triangle.barycoordFromPoint(e,r,i,n,t);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running&&this.start(),this.running){var e=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();t=.001*(e-this.oldTime),this.oldTime=e,this.elapsedTime+=t}return t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),r[t].indexOf(e)===-1&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&r[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners,i=r[t];if(void 0!==i){var n=i.indexOf(e);n!==-1&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,r=e[t.type];if(void 0!==r){t.target=this;for(var i=[],n=r.length,o=0;o<n;o++)i[o]=r[o];for(var o=0;o<n;o++)i[o].call(this,t)}}}},function(t){t.Raycaster=function(e,r,i,n){this.ray=new t.Ray(e,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var e=function(t,e){return t.distance-e.distance},r=function(t,e,i,n){if(t.raycast(e,i),n===!0)for(var o=t.children,a=0,s=o.length;a<s;a++)r(o[a],e,i,!0)};t.Raycaster.prototype={constructor:t.Raycaster,precision:1e-4,linePrecision:1,set:function(t,e){this.ray.set(t,e)},intersectObject:function(t,i){var n=[];return r(t,this,n,i),n.sort(e),n},intersectObjects:function(t,i){for(var n=[],o=0,a=t.length;o<a;o++)r(t[o],this,n,i);return n.sort(e),n}}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new THREE.Quaternion;return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new THREE.Vector3;return function(e,r){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(r)),this}}(),translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},translateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new THREE.Matrix4;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new THREE.Matrix4;return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}if(t===this)return console.error("THREE.Object3D.add:",t,"can't be added as a child of itself."),this;if(t instanceof THREE.Object3D){void 0!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__addObject(t)}else console.error("THREE.Object3D.add:",t,"is not an instance of THREE.Object3D.");return this},remove:function(t){if(arguments.length>1)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);var r=this.children.indexOf(t);if(r!==-1){t.parent=void 0,t.dispatchEvent({type:"removed"}),this.children.splice(r,1);for(var i=this;void 0!==i.parent;)i=i.parent;void 0!==i&&i instanceof THREE.Scene&&i.__removeObject(t)}},raycast:function(){},traverse:function(t){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverseVisible(t)}},getObjectById:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.id===t)return n;if(e===!0&&void 0!==(n=n.getObjectById(t,e)))return n}},getObjectByName:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.name===t)return n;if(e===!0&&void 0!==(n=n.getObjectByName(t,e)))return n}},getChildByName:function(t,e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t,e)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate===!0&&this.updateMatrix(),this.matrixWorldNeedsUpdate!==!0&&t!==!0||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},clone:function(t,e){if(void 0===t&&(t=new THREE.Object3D),void 0===e&&(e=!0),t.name=this.name,t.up.copy(this.up),t.position.copy(this.position),t.quaternion.copy(this.quaternion),t.scale.copy(this.scale),t.renderDepth=this.renderDepth,t.rotationAutoUpdate=this.rotationAutoUpdate,t.matrix.copy(this.matrix),t.matrixWorld.copy(this.matrixWorld),t.matrixAutoUpdate=this.matrixAutoUpdate,t.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,t.visible=this.visible,t.castShadow=this.castShadow,t.receiveShadow=this.receiveShadow,t.frustumCulled=this.frustumCulled,t.userData=JSON.parse(JSON.stringify(this.userData)),e===!0)for(var r=0;r<this.children.length;r++){var i=this.children[r];t.add(i.clone())}return t}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function t(){if(h===T){var t=new THREE.RenderableObject;return v.push(t),T++,h++,t}return v[h++]}function e(){if(c===R){var t=new THREE.RenderableVertex;return y.push(t),R++,c++,t}return y[c++]}function r(){if(f===H){var t=new THREE.RenderableFace;return x.push(t),H++,f++,t}return x[f++]}function i(){if(p===b){var t=new THREE.RenderableLine;return _.push(t),b++,p++,t}return _[p++]}function n(){if(m===M){var t=new THREE.RenderableSprite;return w.push(t),M++,m++,t}return w[m++]}function o(t,e){return t.z!==e.z?e.z-t.z:t.id!==e.id?t.id-e.id:0}function a(t,e){var r=0,i=1,n=t.z+t.w,o=e.z+e.w,a=-t.z+t.w,s=-e.z+e.w;return n>=0&&o>=0&&a>=0&&s>=0||!(n<0&&o<0||a<0&&s<0)&&(n<0?r=Math.max(r,n/(n-o)):o<0&&(i=Math.min(i,n/(n-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<r)&&(t.lerp(e,r),e.lerp(t,1-i),!0))}var s,h,l,c,u,f,E,p,d,m,g,v=[],T=0,y=[],R=0,x=[],H=0,_=[],b=0,w=[],M=0,S={objects:[],lights:[],elements:[]},C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector4,D=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),U=new THREE.Box3,V=new Array(3),z=(new Array(4),new THREE.Matrix4),B=new THREE.Matrix4,k=new THREE.Matrix4,N=new THREE.Matrix3,O=new THREE.Frustum,I=new THREE.Vector4,G=new THREE.Vector4;this.projectVector=function(t,e){return e.matrixWorldInverse.getInverse(e.matrixWorld),B.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),t.applyProjection(B)},this.unprojectVector=function(){var t=new THREE.Matrix4;return function(e,r){return t.getInverse(r.projectionMatrix),B.multiplyMatrices(r.matrixWorld,t),e.applyProjection(B)}}(),this.pickingRay=function(t,e){t.z=-1;var r=new THREE.Vector3(t.x,t.y,1);return this.unprojectVector(t,e),this.unprojectVector(r,e),r.sub(t).normalize(),new THREE.Raycaster(t,r)};var W=function(){var t=[],n=[],o=null,a=null,s=new THREE.Matrix3,h=function(e){o=e,a=o.material,s.getNormalMatrix(o.matrixWorld),t.length=0,n.length=0},c=function(t){var e=t.position,r=t.positionWorld,i=t.positionScreen;r.copy(e).applyMatrix4(g),i.copy(r).applyMatrix4(B);var n=1/i.w;i.x*=n,i.y*=n,i.z*=n,t.visible=i.x>=-1&&i.x<=1&&i.y>=-1&&i.y<=1&&i.z>=-1&&i.z<=1},f=function(t,r,i){l=e(),l.position.set(t,r,i),c(l)},p=function(e,r,i){t.push(e,r,i)},d=function(t,e){n.push(t,e)},m=function(t,e,r){return t.visible===!0||e.visible===!0||r.visible===!0||(V[0]=t.positionScreen,V[1]=e.positionScreen,V[2]=r.positionScreen,D.isIntersectionBox(U.setFromPoints(V)))},v=function(t,e,r){return(r.positionScreen.x-t.positionScreen.x)*(e.positionScreen.y-t.positionScreen.y)-(r.positionScreen.y-t.positionScreen.y)*(e.positionScreen.x-t.positionScreen.x)<0};return{setObject:h,projectVertex:c,checkTriangleVisibility:m,checkBackfaceCulling:v,pushVertex:f,pushNormal:p,pushUv:d,pushLine:function(t,e){var r=y[t],n=y[e];E=i(),E.id=o.id,E.v1.copy(r),E.v2.copy(n),E.z=(r.positionScreen.z+n.positionScreen.z)/2,E.material=o.material,S.elements.push(E)},pushTriangle:function(e,i,h){var l=y[e],c=y[i],f=y[h];if(m(l,c,f)!==!1&&(a.side===THREE.DoubleSide||v(l,c,f)===!0)){u=r(),u.id=o.id,u.v1.copy(l),u.v2.copy(c),u.v3.copy(f),u.z=(l.positionScreen.z+c.positionScreen.z+f.positionScreen.z)/3;for(var E=0;E<3;E++){var p=3*arguments[E],d=u.vertexNormalsModel[E];d.set(t[p],t[p+1],t[p+2]),d.applyMatrix3(s).normalize();var g=2*arguments[E];u.uvs[E].set(n[g],n[g+1])}u.vertexNormalsLength=3,u.material=o.material,S.elements.push(u)}}}},j=new W;this.projectScene=function(l,v,T,R){f=0,p=0,m=0,S.elements.length=0,l.autoUpdate===!0&&l.updateMatrixWorld(),void 0===v.parent&&v.updateMatrixWorld(),z.copy(v.matrixWorldInverse.getInverse(v.matrixWorld)),B.multiplyMatrices(v.projectionMatrix,z),O.setFromMatrix(B),h=0,S.objects.length=0,S.lights.length=0,l.traverseVisible(function(e){e instanceof THREE.Light?S.lights.push(e):(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)&&(e.frustumCulled!==!1&&O.intersectsObject(e)!==!0||(s=t(),s.id=e.id,s.object=e,null!==e.renderDepth?s.z=e.renderDepth:(P.setFromMatrixPosition(e.matrixWorld),P.applyProjection(B),s.z=P.z),S.objects.push(s)))}),T===!0&&S.objects.sort(o);for(var x=0,H=S.objects.length;x<H;x++){var _=S.objects[x].object,b=_.geometry;if(j.setObject(_),g=_.matrixWorld,c=0,_ instanceof THREE.Mesh){if(b instanceof THREE.BufferGeometry){var w=b.attributes,M=b.offsets;if(void 0===w.position)continue;for(var D=w.position.array,U=0,V=D.length;U<V;U+=3)j.pushVertex(D[U],D[U+1],D[U+2]);if(void 0!==w.normal)for(var W=w.normal.array,U=0,V=W.length;U<V;U+=3)j.pushNormal(W[U],W[U+1],W[U+2]);if(void 0!==w.uv)for(var X=w.uv.array,U=0,V=X.length;U<V;U+=2)j.pushUv(X[U],X[U+1]);if(void 0!==w.index){var Y=w.index.array;if(M.length>0)for(var x=0;x<M.length;x++)for(var q=M[x],K=q.index,U=q.start,V=q.start+q.count;U<V;U+=3)j.pushTriangle(Y[U]+K,Y[U+1]+K,Y[U+2]+K);else for(var U=0,V=Y.length;U<V;U+=3)j.pushTriangle(Y[U],Y[U+1],Y[U+2])}else for(var U=0,V=D.length/3;U<V;U+=3)j.pushTriangle(U,U+1,U+2)}else if(b instanceof THREE.Geometry){var Z=b.vertices,Q=b.faces,J=b.faceVertexUvs[0];N.getNormalMatrix(g);for(var $=_.material instanceof THREE.MeshFaceMaterial,tt=$===!0?_.material:null,et=0,rt=Z.length;et<rt;et++){var it=Z[et];j.pushVertex(it.x,it.y,it.z)}for(var nt=0,ot=Q.length;nt<ot;nt++){var at=Q[nt],st=$===!0?tt.materials[at.materialIndex]:_.material;if(void 0!==st){var ht=st.side,lt=y[at.a],ct=y[at.b],ut=y[at.c];if(st.morphTargets===!0){var ft=b.morphTargets,Et=_.morphTargetInfluences,pt=lt.position,dt=ct.position,mt=ut.position;C.set(0,0,0),A.set(0,0,0),L.set(0,0,0);for(var gt=0,vt=ft.length;gt<vt;gt++){var Tt=Et[gt];if(0!==Tt){var yt=ft[gt].vertices;C.x+=(yt[at.a].x-pt.x)*Tt,C.y+=(yt[at.a].y-pt.y)*Tt,C.z+=(yt[at.a].z-pt.z)*Tt,A.x+=(yt[at.b].x-dt.x)*Tt,A.y+=(yt[at.b].y-dt.y)*Tt,A.z+=(yt[at.b].z-dt.z)*Tt,L.x+=(yt[at.c].x-mt.x)*Tt,L.y+=(yt[at.c].y-mt.y)*Tt,L.z+=(yt[at.c].z-mt.z)*Tt}}lt.position.add(C),ct.position.add(A),ut.position.add(L),j.projectVertex(lt),j.projectVertex(ct),j.projectVertex(ut)}if(j.checkTriangleVisibility(lt,ct,ut)!==!1){var Rt=j.checkBackfaceCulling(lt,ct,ut);if(ht!==THREE.DoubleSide){if(ht===THREE.FrontSide&&Rt===!1)continue;if(ht===THREE.BackSide&&Rt===!0)continue}u=r(),u.id=_.id,u.v1.copy(lt),u.v2.copy(ct),u.v3.copy(ut),u.normalModel.copy(at.normal),Rt!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||u.normalModel.negate(),u.normalModel.applyMatrix3(N).normalize();for(var xt=at.vertexNormals,Ht=0,_t=Math.min(xt.length,3);Ht<_t;Ht++){var bt=u.vertexNormalsModel[Ht];bt.copy(xt[Ht]),Rt!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||bt.negate(),bt.applyMatrix3(N).normalize()}u.vertexNormalsLength=xt.length;var wt=J[nt];if(void 0!==wt)for(var Mt=0;Mt<3;Mt++)u.uvs[Mt].copy(wt[Mt]);u.color=at.color,u.material=st,u.z=(lt.positionScreen.z+ct.positionScreen.z+ut.positionScreen.z)/3,S.elements.push(u)}}}}}else if(_ instanceof THREE.Line){if(b instanceof THREE.BufferGeometry){var w=b.attributes;if(void 0!==w.position){for(var D=w.position.array,U=0,V=D.length;U<V;U+=3)j.pushVertex(D[U],D[U+1],D[U+2]);if(void 0!==w.index)for(var Y=w.index.array,U=0,V=Y.length;U<V;U+=2)j.pushLine(Y[U],Y[U+1]);else for(var St=_.type===THREE.LinePieces?2:1,U=0,V=D.length/3-1;U<V;U+=St)j.pushLine(U,U+1)}}else if(b instanceof THREE.Geometry){k.multiplyMatrices(B,g);var Z=_.geometry.vertices;if(0===Z.length)continue;lt=e(),lt.positionScreen.copy(Z[0]).applyMatrix4(k);for(var St=_.type===THREE.LinePieces?2:1,et=1,rt=Z.length;et<rt;et++)lt=e(),lt.positionScreen.copy(Z[et]).applyMatrix4(k),(et+1)%St>0||(ct=y[c-2],I.copy(lt.positionScreen),G.copy(ct.positionScreen),a(I,G)===!0&&(I.multiplyScalar(1/I.w),G.multiplyScalar(1/G.w),E=i(),E.id=_.id,E.v1.positionScreen.copy(I),E.v2.positionScreen.copy(G),E.z=Math.max(I.z,G.z),E.material=_.material,_.material.vertexColors===THREE.VertexColors&&(E.vertexColors[0].copy(_.geometry.colors[et]),E.vertexColors[1].copy(_.geometry.colors[et-1])),S.elements.push(E)))}}else if(_ instanceof THREE.Sprite){F.set(g.elements[12],g.elements[13],g.elements[14],1),F.applyMatrix4(B);var Ct=1/F.w;F.z*=Ct,F.z>=-1&&F.z<=1&&(d=n(),d.id=_.id,d.x=F.x*Ct,d.y=F.y*Ct,d.z=F.z,d.object=_,d.rotation=_.rotation,d.scale.x=_.scale.x*Math.abs(d.x-(F.x+v.projectionMatrix.elements[0])/(F.w+v.projectionMatrix.elements[12])),d.scale.y=_.scale.y*Math.abs(d.y-(F.y+v.projectionMatrix.elements[5])/(F.w+v.projectionMatrix.elements[13])),d.material=_.material,S.elements.push(d))}}return R===!0&&S.elements.sort(o),S}},THREE.Face3=function(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c);t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex;for(var e=0,r=this.vertexNormals.length;e<r;e++)t.vertexNormals[e]=this.vertexNormals[e].clone();for(var e=0,r=this.vertexColors.length;e<r;e++)t.vertexColors[e]=this.vertexColors[e].clone();for(var e=0,r=this.vertexTangents.length;e<r;e++)t.vertexTangents[e]=this.vertexTangents[e].clone();return t}},THREE.Face4=function(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,o,a)},THREE.BufferAttribute=function(t,e){this.array=t,this.itemSize=e},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(t){return this.array.set(t),this},setX:function(t,e){return this.array[t*this.itemSize]=e,this},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this}},THREE.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(t,e){if(e instanceof THREE.BufferAttribute==!1)return console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[t]={array:arguments[1],itemSize:arguments[2]});this.attributes[t]=e},getAttribute:function(t){return this.attributes[t]},addDrawCall:function(t,e,r){this.drawcalls.push({start:t,count:e,index:void 0!==r?r:0})},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){(new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(r.array),r.needsUpdate=!0}},fromGeometry:function(t,e){e=e||{vertexColors:THREE.NoColors};var r=t.vertices,i=t.faces,n=t.faceVertexUvs,o=e.vertexColors,a=n[0].length>0,s=3==i[0].vertexNormals.length,h=new Float32Array(3*i.length*3);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(3*i.length*3);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),o!==THREE.NoColors){var c=new Float32Array(3*i.length*3);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(a===!0){var u=new Float32Array(3*i.length*2);this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],g=r[d.b],v=r[d.c];if(h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=g.x,h[p+4]=g.y,h[p+5]=g.z,h[p+6]=v.x,h[p+7]=v.y,h[p+8]=v.z,s===!0){var T=d.vertexNormals[0],y=d.vertexNormals[1],R=d.vertexNormals[2];l[p]=T.x,l[p+1]=T.y,l[p+2]=T.z,l[p+3]=y.x,l[p+4]=y.y,l[p+5]=y.z,l[p+6]=R.x,l[p+7]=R.y,l[p+8]=R.z}else{var x=d.normal;l[p]=x.x,l[p+1]=x.y,l[p+2]=x.z,l[p+3]=x.x,l[p+4]=x.y,l[p+5]=x.z,l[p+6]=x.x,l[p+7]=x.y,l[p+8]=x.z}if(o===THREE.FaceColors){var H=d.color;c[p]=H.r,c[p+1]=H.g,c[p+2]=H.b,c[p+3]=H.r,c[p+4]=H.g,c[p+5]=H.b,c[p+6]=H.r,c[p+7]=H.g,c[p+8]=H.b}else if(o===THREE.VertexColors){var _=d.vertexColors[0],b=d.vertexColors[1],w=d.vertexColors[2];c[p]=_.r,c[p+1]=_.g,c[p+2]=_.b,c[p+3]=b.r,c[p+4]=b.g,c[p+5]=b.b,c[p+6]=w.r,c[p+7]=w.g,c[p+8]=w.b}if(a===!0){var M=n[0][f][0],S=n[0][f][1],C=n[0][f][2];u[E]=M.x,u[E+1]=M.y,u[E+2]=S.x,u[E+3]=S.y,u[E+4]=C.x,u[E+5]=C.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var e=this.boundingBox;t.length>=3&&(e.min.x=e.max.x=t[0],e.min.y=e.max.y=t[1],e.min.z=e.max.z=t[2]);for(var r=3,i=t.length;r<i;r+=3){var n=t[r],o=t[r+1],a=t[r+2];n<e.min.x?e.min.x=n:n>e.max.x&&(e.max.x=n),o<e.min.y?e.min.y=o:o>e.max.y&&(e.max.y=o),a<e.min.z?e.min.z=a:a>e.max.z&&(e.max.z=a)}}void 0!==t&&0!==t.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var t=new THREE.Box3,e=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){t.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;n<o;n+=3)e.set(r[n],r[n+1],r[n+2]),t.expandByPoint(e);t.center(i);for(var a=0,n=0,o=r.length;n<o;n+=3)e.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var t,e,r,i,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n)};else for(t=0,e=this.attributes.normal.array.length;t<e;t++)this.attributes.normal.array[t]=0;var o,a,s,h,l,c,u=this.attributes.position.array,f=this.attributes.normal.array,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets.length>0?this.offsets:[{start:0,count:v.length,index:0}];for(r=0,i=T.length;r<i;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(t=y,e=y+R;t<e;t+=3)o=x+v[t],a=x+v[t+1],s=x+v[t+2],h=u[3*o],l=u[3*o+1],c=u[3*o+2],E.set(h,l,c),h=u[3*a],l=u[3*a+1],c=u[3*a+2],p.set(h,l,c),h=u[3*s],l=u[3*s+1],c=u[3*s+2],d.set(h,l,c),m.subVectors(d,p),g.subVectors(E,p),m.cross(g),f[3*o]+=m.x,f[3*o+1]+=m.y,f[3*o+2]+=m.z,f[3*a]+=m.x,f[3*a+1]+=m.y,f[3*a+2]+=m.z,f[3*s]+=m.x,f[3*s+1]+=m.y,f[3*s+2]+=m.z}}else for(t=0,e=u.length;t<e;t+=9)h=u[t],l=u[t+1],c=u[t+2],E.set(h,l,c),h=u[t+3],l=u[t+4],c=u[t+5],p.set(h,l,c),h=u[t+6],l=u[t+7],c=u[t+8],d.set(h,l,c),m.subVectors(d,p),g.subVectors(E,p),m.cross(g),f[t]=m.x,f[t+1]=m.y,f[t+2]=m.z,f[t+3]=m.x,f[t+4]=m.y,f[t+5]=m.z,f[t+6]=m.x,f[t+7]=m.y,f[t+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function t(t){et.x=i[3*t],et.y=i[3*t+1],et.z=i[3*t+2],rt.copy(et),Q=h[t],$.copy(Q),$.sub(et.multiplyScalar(et.dot(Q))).normalize(),tt.crossVectors(rt,Q),J=tt.dot(l[t]),Z=J<0?-1:1,s[4*t]=$.x,s[4*t+1]=$.y,s[4*t+2]=$.z,s[4*t+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var e=this.attributes.index.array,r=this.attributes.position.array,i=this.attributes.normal.array,n=this.attributes.uv.array,o=r.length/3;if(void 0===this.attributes.tangent){var a=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(a)}}for(var s=this.attributes.tangent.array,h=[],l=[],c=0;c<o;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,f,E,p,d,m,g,v,T,y,R,x,H,_,b,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I,G,W=new THREE.Vector3,j=new THREE.Vector3,X=this.offsets;for(k=0,N=X.length;k<N;++k){var Y=X[k].start,q=X[k].count,K=X[k].index;for(z=Y,B=Y+q;z<B;z+=3)O=K+e[z],I=K+e[z+1],G=K+e[z+2],function(t,e,i){u=r[3*t],f=r[3*t+1],E=r[3*t+2],p=r[3*e],d=r[3*e+1],m=r[3*e+2],g=r[3*i],v=r[3*i+1],T=r[3*i+2],y=n[2*t],R=n[2*t+1],x=n[2*e],H=n[2*e+1],_=n[2*i],b=n[2*i+1],w=p-u,M=g-u,S=d-f,C=v-f,A=m-E,L=T-E,P=x-y,F=_-y,D=H-R,U=b-R,V=1/(P*U-F*D),W.set((U*w-D*M)*V,(U*S-D*C)*V,(U*A-D*L)*V),j.set((P*M-F*w)*V,(P*C-F*S)*V,(P*L-F*A)*V),h[t].add(W),h[e].add(W),h[i].add(W),l[t].add(j),l[e].add(j),l[i].add(j)}(O,I,G)}var Z,Q,J,$=new THREE.Vector3,tt=new THREE.Vector3,et=new THREE.Vector3,rt=new THREE.Vector3;for(k=0,N=X.length;k<N;++k){var Y=X[k].start,q=X[k].count,K=X[k].index;for(z=Y,B=Y+q;z<B;z+=3)O=K+e[z],I=K+e[z+1],G=K+e[z+2],t(O),t(I),t(G)}},computeOffsets:function(t){var e=t;void 0===t&&(e=65535);for(var r=(Date.now(),
this.attributes.index.array),i=this.attributes.position.array,n=(i.length,r.length/3),o=new Uint16Array(r.length),a=0,s=0,h=[{start:0,count:0,index:0}],l=h[0],c=0,u=0,f=new Int32Array(6),E=new Int32Array(i.length),p=new Int32Array(i.length),d=0;d<i.length;d++)E[d]=-1,p[d]=-1;for(var m=0;m<n;m++){u=0;for(var g=0;g<3;g++){var v=r[3*m+g];E[v]==-1?(f[2*g]=v,f[2*g+1]=-1,u++):E[v]<l.index?(f[2*g]=v,f[2*g+1]=-1,c++):(f[2*g]=v,f[2*g+1]=E[v])}if(s+u>l.index+e){var T={start:a,count:0,index:s};h.push(T),l=T;for(var y=0;y<6;y+=2){var R=f[y+1];R>-1&&R<l.index&&(f[y+1]=-1)}}for(var y=0;y<6;y+=2){var v=f[y],R=f[y+1];R===-1&&(R=s++),E[v]=R,p[R]=v,o[a++]=R-l.index,l.count++}}return this.reorderBuffers(o,p,s),this.offsets=h,h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t,e,r,i,n=this.attributes.normal.array,o=0,a=n.length;o<a;o+=3)t=n[o],e=n[o+1],r=n[o+2],i=1/Math.sqrt(t*t+e*e+r*r),n[o]*=i,n[o+1]*=i,n[o+2]*=i},reorderBuffers:function(t,e,r){var i={},n=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var o in this.attributes)if("index"!=o)for(var a=this.attributes[o].array,s=0,h=n.length;s<h;s++){var l=n[s];if(a instanceof l){i[o]=new l(this.attributes[o].itemSize*r);break}}for(var c=0;c<r;c++){var u=e[c];for(var o in this.attributes)if("index"!=o)for(var f=this.attributes[o].array,E=this.attributes[o].itemSize,p=i[o],d=0;d<E;d++)p[c*E+d]=f[u*E+d]}this.attributes.index.array=t;for(var o in this.attributes)"index"!=o&&(this.attributes[o].array=i[o],this.attributes[o].numItems=this.attributes[o].itemSize*r)},clone:function(){var t=new THREE.BufferGeometry,e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var r in this.attributes){for(var i=this.attributes[r],n=i.array,o={itemSize:i.itemSize,array:null},a=0,s=e.length;a<s;a++){var h=e[a];if(n instanceof h){o.array=new h(n);break}}t.attributes[r]=o}for(var a=0,s=this.offsets.length;a<s;a++){var l=this.offsets[a];t.offsets.push({start:l.start,index:l.index,count:l.count})}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++){this.vertices[r].applyMatrix4(t)}for(var r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];n.normal.applyMatrix3(e).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(e).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var t=new THREE.Vector3;return t.addVectors(this.boundingBox.min,this.boundingBox.max),t.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(t.x,t.y,t.z)),this.computeBoundingBox(),t},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i,n,o,a;for(a=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)a[e]=new THREE.Vector3;if(t){var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3;for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],s=this.vertices[o.a],h=this.vertices[o.b],l=this.vertices[o.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),a[o.a].add(c),a[o.b].add(c),a[o.c].add(c)}else for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],a[o.a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,r=this.vertices.length;e<r;e++)a[e].normalize();for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],o.vertexNormals[0]=a[o.a].clone(),o.vertexNormals[1]=a[o.b].clone(),o.vertexNormals[2]=a[o.c].clone()},computeMorphNormals:function(){var t,e,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new THREE.Geometry;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a,s,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(a),l.push(s)}var c=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals();var a,s;for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],a=c.faceNormals[r],s=c.vertexNormals[r],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g,v,T,y,R,x,H,_,b,w,M,S=[],C=[],A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector3,D=new THREE.Vector3;for(r=0,i=this.vertices.length;r<i;r++)S[r]=new THREE.Vector3,C[r]=new THREE.Vector3;for(t=0,e=this.faces.length;t<e;t++)a=this.faces[t],s=this.faceVertexUvs[0][t],function(t,e,r,i,n,o,a){h=t.vertices[e],l=t.vertices[r],c=t.vertices[i],u=s[n],f=s[o],E=s[a],p=l.x-h.x,d=c.x-h.x,m=l.y-h.y,g=c.y-h.y,v=l.z-h.z,T=c.z-h.z,y=f.x-u.x,R=E.x-u.x,x=f.y-u.y,H=E.y-u.y,_=1/(y*H-R*x),A.set((H*p-x*d)*_,(H*m-x*g)*_,(H*v-x*T)*_),L.set((y*d-R*p)*_,(y*g-R*m)*_,(y*T-R*v)*_),S[e].add(A),S[r].add(A),S[i].add(A),C[e].add(L),C[r].add(L),C[i].add(L)}(this,a.a,a.b,a.c,0,1,2);var U=["a","b","c","d"];for(t=0,e=this.faces.length;t<e;t++)for(a=this.faces[t],n=0;n<Math.min(a.vertexNormals.length,3);n++)D.copy(a.vertexNormals[n]),o=a[U[n]],b=S[o],P.copy(b),P.sub(D.multiplyScalar(D.dot(b))).normalize(),F.crossVectors(a.vertexNormals[n],b),w=F.dot(C[o]),M=w<0?-1:1,a.vertexTangents[n]=new THREE.Vector4(P.x,P.y,P.z,M);this.hasTangents=!0},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)r>0&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);var i,n=this.vertices.length,o=(this.faceVertexUvs[0].length,this.vertices),a=t.vertices,s=this.faces,h=t.faces,l=this.faceVertexUvs[0],c=t.faceVertexUvs[0];void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e));for(var u=0,f=a.length;u<f;u++){var E=a[u],p=E.clone();void 0!==e&&p.applyMatrix4(e),o.push(p)}for(u=0,f=h.length;u<f;u++){var d,m,g,v=h[u],T=v.vertexNormals,y=v.vertexColors;d=new THREE.Face3(v.a+n,v.b+n,v.c+n),d.normal.copy(v.normal),void 0!==i&&d.normal.applyMatrix3(i).normalize();for(var R=0,x=T.length;R<x;R++)m=T[R].clone(),void 0!==i&&m.applyMatrix3(i).normalize(),d.vertexNormals.push(m);d.color.copy(v.color);for(var R=0,x=y.length;R<x;R++)g=y[R],d.vertexColors.push(g.clone());d.materialIndex=v.materialIndex+r,s.push(d)}for(u=0,f=c.length;u<f;u++){var H=c[u],_=[];if(void 0!==H){for(var R=0,x=H.length;R<x;R++)_.push(new THREE.Vector2(H[R].x,H[R].y));l.push(_)}}},mergeVertices:function(){var t,e,r,i,n,o,a,s,h={},l=[],c=[],u=Math.pow(10,4);for(r=0,i=this.vertices.length;r<i;r++)t=this.vertices[r],e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u),void 0===h[e]?(h[e]=r,l.push(this.vertices[r]),c[r]=l.length-1):c[r]=c[h[e]];var f=[];for(r=0,i=this.faces.length;r<i;r++){n=this.faces[r],n.a=c[n.a],n.b=c[n.b],n.c=c[n.c],o=[n.a,n.b,n.c];for(var E=0;E<3;E++)if(o[E]==o[(E+1)%3]){E,f.push(r);break}}for(r=f.length-1;r>=0;r--){var p=f[r];for(this.faces.splice(p,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(p,1)}var d=this.vertices.length-l.length;return this.vertices=l,d},makeGroups:function(){var t=0;return function(e,r){var i,n,o,a,s,h,l={},c=this.morphTargets.length,u=this.morphNormals.length;for(this.geometryGroups={},this.geometryGroupsList=[],i=0,n=this.faces.length;i<n;i++)o=this.faces[i],a=e?o.materialIndex:0,a in l||(l[a]={hash:a,counter:0}),s=l[a].hash+"_"+l[a].counter,s in this.geometryGroups||(h={id:t++,faces3:[],materialIndex:a,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=h,this.geometryGroupsList.push(h)),this.geometryGroups[s].vertices+3>r&&(l[a].counter+=1,(s=l[a].hash+"_"+l[a].counter)in this.geometryGroups||(h={id:t++,faces3:[],materialIndex:a,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=h,this.geometryGroupsList.push(h))),this.geometryGroups[s].faces3.push(i),this.geometryGroups[s].vertices+=3}}(),clone:function(){for(var t=new THREE.Geometry,e=this.vertices,r=0,i=e.length;r<i;r++)t.vertices.push(e[r].clone());for(var n=this.faces,r=0,i=n.length;r<i;r++)t.faces.push(n[r].clone());for(var o=this.faceVertexUvs[0],r=0,i=o.length;r<i;r++){for(var a=o[r],s=[],h=0,l=a.length;h<l;h++)s.push(new THREE.Vector2(a[h].x,a[h].y));t.faceVertexUvs[0].push(s)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var t=new THREE.Matrix4;return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),THREE.Camera.prototype.clone=function(t){return void 0===t&&(t=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,t),t.matrixWorldInverse.copy(this.matrixWorldInverse),t.projectionMatrix.copy(this.projectionMatrix),t},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,t,e);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var n=new THREE.PerspectiveCamera(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,t,e);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,t,e);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,t,e);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,e){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,i,r),r.activeCubeFace=1,t.render(e,n,r),r.activeCubeFace=2,t.render(e,o,r),r.activeCubeFace=3,t.render(e,a,r),r.activeCubeFace=4,t.render(e,s,r),r.generateMipmaps=l,r.activeCubeFace=5,t.render(e,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.OrthographicCamera=function(t,e,r,i,n,o){THREE.Camera.call(this),this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var t=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,t),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,o){this.fullWidth=t,this.fullHeight=e,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-e,i=t*r,n=t*e,o=Math.abs(n-i),a=Math.abs(e-r);this.projectionMatrix.makeFrustum(i+this.x*o/this.fullWidth,i+(this.x+this.width)*o/this.fullWidth,e-(this.y+this.height)*a/this.fullHeight,e-this.y*a/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var t=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,t),t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t},THREE.Light=function(t){THREE.Object3D.call(this),this.color=new THREE.Color(t)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(t){return void 0===t&&(t=new THREE.Light),THREE.Object3D.prototype.clone.call(this,t),t.color.copy(this.color),t},THREE.AmbientLight=function(t){THREE.Light.call(this,t)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var t=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,t),t},THREE.AreaLight=function(t,e){THREE.Light.call(this,t),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==e?e:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var t=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraLeft=this.shadowCameraLeft,t.shadowCameraRight=this.shadowCameraRight,t.shadowCameraTop=this.shadowCameraTop,t.shadowCameraBottom=this.shadowCameraBottom,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t.shadowCascade=this.shadowCascade,t.shadowCascadeOffset.copy(this.shadowCascadeOffset),t.shadowCascadeCount=this.shadowCascadeCount,t.shadowCascadeBias=this.shadowCascadeBias.slice(0),t.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),t.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),t.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),t.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),t},THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t),this.position.set(0,100,0),this.groundColor=new THREE.Color(e),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var t=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,t),t.groundColor.copy(this.groundColor),t.intensity=this.intensity,t},THREE.PointLight=function(t,e,r){THREE.Light.call(this,t),this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var t=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,t),t.intensity=this.intensity,t.distance=this.distance,t},THREE.SpotLight=function(t,e,r,i,n){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var t=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.distance=this.distance,t.angle=this.angle,t.exponent=this.exponent,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraFov=this.shadowCameraFov,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(t,e){this.files[t]=e},get:function(t){return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(t){this.showStatus=t,this.statusDomElement=t?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var t=document.createElement("div");return t.style.position="absolute",t.style.right="0px",t.style.top="0px",t.style.fontSize="0.8em",t.style.textAlign="left",t.style.background="rgba(0,0,0,0.25)",t.style.color="#fff",t.style.width="120px",t.style.padding="0.5em 0.5em 0.5em 0.5em",t.style.zIndex=1e3,t.innerHTML="Loading ...",t},updateProgress:function(t){var e="Loaded ";t.total?e+=(100*t.loaded/t.total).toFixed(0)+"%":e+=(t.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=e},extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e){for(var r=[],i=0;i<t.length;++i)r[i]=this.createMaterial(t[i],e);return r},needsTangents:function(t){for(var e=0,r=t.length;e<r;e++){if(t[e]instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(t,e){function r(t){var e=Math.log(t)/Math.LN2;return Math.pow(2,Math.round(e))}function i(t,i,n,a,s,h,l){var c,u=e+n,f=THREE.Loader.Handlers.get(u);if(null!==f?c=f.load(u):(c=new THREE.Texture,f=o.imageLoader,f.crossOrigin=o.crossOrigin,f.load(u,function(t){if(THREE.Math.isPowerOfTwo(t.width)===!1||THREE.Math.isPowerOfTwo(t.height)===!1){var e=r(t.width),i=r(t.height),n=document.createElement("canvas");n.width=e,n.height=i;n.getContext("2d").drawImage(t,0,0,e,i),c.image=n}else c.image=t;c.needsUpdate=!0})),c.sourceFile=n,a&&(c.repeat.set(a[0],a[1]),1!==a[0]&&(c.wrapS=THREE.RepeatWrapping),1!==a[1]&&(c.wrapT=THREE.RepeatWrapping)),s&&c.offset.set(s[0],s[1]),h){var E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==E[h[0]]&&(c.wrapS=E[h[0]]),void 0!==E[h[1]]&&(c.wrapT=E[h[1]])}l&&(c.anisotropy=l),t[i]=c}function n(t){return(255*t[0]<<16)+(255*t[1]<<8)+255*t[2]}var o=this,a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var h=t.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}if(void 0!==t.blending&&void 0!==THREE[t.blending]&&(s.blending=THREE[t.blending]),(void 0!==t.transparent||t.opacity<1)&&(s.transparent=t.transparent),void 0!==t.depthTest&&(s.depthTest=t.depthTest),void 0!==t.depthWrite&&(s.depthWrite=t.depthWrite),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.flipSided&&(s.side=THREE.BackSide),void 0!==t.doubleSided&&(s.side=THREE.DoubleSide),void 0!==t.wireframe&&(s.wireframe=t.wireframe),void 0!==t.vertexColors&&("face"===t.vertexColors?s.vertexColors=THREE.FaceColors:t.vertexColors&&(s.vertexColors=THREE.VertexColors)),t.colorDiffuse?s.color=n(t.colorDiffuse):t.DbgColor&&(s.color=t.DbgColor),t.colorSpecular&&(s.specular=n(t.colorSpecular)),t.colorAmbient&&(s.ambient=n(t.colorAmbient)),t.colorEmissive&&(s.emissive=n(t.colorEmissive)),t.transparency&&(s.opacity=t.transparency),t.specularCoef&&(s.shininess=t.specularCoef),t.mapDiffuse&&e&&i(s,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy),t.mapLight&&e&&i(s,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy),t.mapBump&&e&&i(s,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy),t.mapNormal&&e&&i(s,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy),t.mapSpecular&&e&&i(s,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy),t.mapAlpha&&e&&i(s,"alphaMap",t.mapAlpha,t.mapAlphaRepeat,t.mapAlphaOffset,t.mapAlphaWrap,t.mapAlphaAnisotropy),t.mapBumpScale&&(s.bumpScale=t.mapBumpScale),t.mapNormal){var l=THREE.ShaderLib.normalmap,c=THREE.UniformsUtils.clone(l.uniforms);c.tNormal.value=s.normalMap,t.mapNormalFactor&&c.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),s.map&&(c.tDiffuse.value=s.map,c.enableDiffuse.value=!0),s.specularMap&&(c.tSpecular.value=s.specularMap,c.enableSpecular.value=!0),s.lightMap&&(c.tAO.value=s.lightMap,c.enableAO.value=!0),c.diffuse.value.setHex(s.color),c.specular.value.setHex(s.specular),c.ambient.value.setHex(s.ambient),c.shininess.value=s.shininess,void 0!==s.opacity&&(c.opacity.value=s.opacity);var u={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:c,lights:!0,fog:!0},f=new THREE.ShaderMaterial(u);s.transparent&&(f.transparent=!0)}else var f=new THREE[a](s);return void 0!==t.DbgName&&(f.name=t.DbgName),f}},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var i=this.handlers[e],n=this.handlers[e+1];if(i.test(t))return n}return null}},THREE.XHRLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);if(void 0!==o)return void(e&&e(o));var a=new XMLHttpRequest;a.open("GET",t,!0),a.addEventListener("load",function(r){n.cache.add(t,this.response),e&&e(this.response),n.manager.itemEnd(t)},!1),void 0!==r&&a.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&a.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(a.responseType=this.responseType),a.send(null),n.manager.itemStart(t)},setResponseType:function(t){this.responseType=t},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.ImageLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);if(void 0!==o)return void e(o);var a=document.createElement("img");return void 0!==e&&a.addEventListener("load",function(r){n.cache.add(t,this),e(this),n.manager.itemEnd(t)},!1),void 0!==r&&a.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&a.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.src=t,n.manager.itemStart(t),a},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.JSONLoader=function(t){THREE.Loader.call(this,t),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(t,e,r){r=r&&"string"==typeof r?r:this.extractUrlBase(t),this.onLoadStart(),this.loadAjaxJSON(this,t,e,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(t,e,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);if(void 0!==s.metadata&&"scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+e+'" seems to be a Scene. Use THREE.SceneLoader instead.');var h=t.parse(s,i);r(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+e+'" seems to be unreachable or the file is empty.');t.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+e+'" ('+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",e,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(t,e){var r=new THREE.Geometry,i=void 0!==t.scale?1/t.scale:1;if(function(e){function i(t,e){return t&1<<e}var n,o,a,s,h,l,c,u,f,E,p,d,m,g,v,T,y,R,x,H,_,b,w,M,S,C,A,L=t.faces,P=t.vertices,F=t.normals,D=t.colors,U=0;if(void 0!==t.uvs){for(n=0;n<t.uvs.length;n++)t.uvs[n].length&&U++;for(n=0;n<U;n++)r.faceVertexUvs[n]=[]}for(s=0,h=P.length;s<h;)R=new THREE.Vector3,R.x=P[s++]*e,R.y=P[s++]*e,R.z=P[s++]*e,r.vertices.push(R);for(s=0,h=L.length;s<h;)if(E=L[s++],p=i(E,0),d=i(E,1),m=i(E,3),g=i(E,4),v=i(E,5),T=i(E,6),y=i(E,7),p){if(H=new THREE.Face3,H.a=L[s],H.b=L[s+1],H.c=L[s+3],_=new THREE.Face3,_.a=L[s+1],_.b=L[s+2],_.c=L[s+3],s+=4,d&&(f=L[s++],H.materialIndex=f,_.materialIndex=f),a=r.faces.length,m)for(n=0;n<U;n++)for(M=t.uvs[n],r.faceVertexUvs[n][a]=[],r.faceVertexUvs[n][a+1]=[],o=0;o<4;o++)u=L[s++],C=M[2*u],A=M[2*u+1],S=new THREE.Vector2(C,A),2!==o&&r.faceVertexUvs[n][a].push(S),0!==o&&r.faceVertexUvs[n][a+1].push(S);if(g&&(c=3*L[s++],H.normal.set(F[c++],F[c++],F[c]),_.normal.copy(H.normal)),v)for(n=0;n<4;n++)c=3*L[s++],w=new THREE.Vector3(F[c++],F[c++],F[c]),2!==n&&H.vertexNormals.push(w),0!==n&&_.vertexNormals.push(w);if(T&&(l=L[s++],b=D[l],H.color.setHex(b),_.color.setHex(b)),y)for(n=0;n<4;n++)l=L[s++],b=D[l],2!==n&&H.vertexColors.push(new THREE.Color(b)),0!==n&&_.vertexColors.push(new THREE.Color(b));r.faces.push(H),r.faces.push(_)}else{if(x=new THREE.Face3,x.a=L[s++],x.b=L[s++],x.c=L[s++],d&&(f=L[s++],x.materialIndex=f),a=r.faces.length,m)for(n=0;n<U;n++)for(M=t.uvs[n],r.faceVertexUvs[n][a]=[],o=0;o<3;o++)u=L[s++],C=M[2*u],A=M[2*u+1],S=new THREE.Vector2(C,A),r.faceVertexUvs[n][a].push(S);if(g&&(c=3*L[s++],x.normal.set(F[c++],F[c++],F[c])),v)for(n=0;n<3;n++)c=3*L[s++],w=new THREE.Vector3(F[c++],F[c++],F[c]),x.vertexNormals.push(w);if(T&&(l=L[s++],x.color.setHex(D[l])),y)for(n=0;n<3;n++)l=L[s++],x.vertexColors.push(new THREE.Color(D[l]));r.faces.push(x)}}(i),function(){var e=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,n=t.skinWeights.length;i<n;i+=e){var o=t.skinWeights[i],a=e>1?t.skinWeights[i+1]:0,s=e>2?t.skinWeights[i+2]:0,h=e>3?t.skinWeights[i+3]:0;r.skinWeights.push(new THREE.Vector4(o,a,s,h))}if(t.skinIndices)for(var i=0,n=t.skinIndices.length;i<n;i+=e){var l=t.skinIndices[i],c=e>1?t.skinIndices[i+1]:0,u=e>2?t.skinIndices[i+2]:0,f=e>3?t.skinIndices[i+3]:0;r.skinIndices.push(new THREE.Vector4(l,c,u,f))}r.bones=t.bones,r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match."),r.animation=t.animation,r.animations=t.animations}(),function(e){if(void 0!==t.morphTargets){var i,n,o,a,s,h;for(i=0,n=t.morphTargets.length;i<n;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=t.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,h=t.morphTargets[i].vertices,o=0,a=h.length;o<a;o+=3){var l=new THREE.Vector3;l.x=h[o]*e,l.y=h[o+1]*e,l.z=h[o+2]*e,s.push(l)}}if(void 0!==t.morphColors){var i,n,c,u,f,E,p;for(i=0,n=t.morphColors.length;i<n;i++)for(r.morphColors[i]={},r.morphColors[i].name=t.morphColors[i].name,r.morphColors[i].colors=[],f=r.morphColors[i].colors,E=t.morphColors[i].colors,c=0,u=E.length;c<u;c+=3)p=new THREE.Color(16755200),p.setRGB(E[c],E[c+1],E[c+2]),f.push(p)}}(i),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:r};var n=this.initMaterials(t.materials,e);return this.needsTangents(n)&&r.computeTangents(),{geometry:r,materials:n}},THREE.LoadingManager=function(t,e,r){var i=this,n=0,o=0;this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){o++},this.itemEnd=function(t){n++,void 0!==i.onProgress&&i.onProgress(t,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE.BufferGeometry,r=t.attributes;for(var i in r){var n=r[i];e.attributes[i]={itemSize:n.itemSize,array:new self[n.type](n.array)}}var o=t.offsets;void 0!==o&&(e.offsets=JSON.parse(JSON.stringify(o)));var a=t.boundingSphere;return void 0!==a&&(e.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==a.center?a.center:[0,0,0]),a.radius)),e}},THREE.MaterialLoader=function(t){
this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE[t.type];if(void 0!==t.color&&e.color.setHex(t.color),void 0!==t.ambient&&e.ambient.setHex(t.ambient),void 0!==t.emissive&&e.emissive.setHex(t.emissive),void 0!==t.specular&&e.specular.setHex(t.specular),void 0!==t.shininess&&(e.shininess=t.shininess),void 0!==t.uniforms&&(e.uniforms=t.uniforms),void 0!==t.vertexShader&&(e.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(e.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(e.vertexColors=t.vertexColors),void 0!==t.blending&&(e.blending=t.blending),void 0!==t.side&&(e.side=t.side),void 0!==t.opacity&&(e.opacity=t.opacity),void 0!==t.transparent&&(e.transparent=t.transparent),void 0!==t.wireframe&&(e.wireframe=t.wireframe),void 0!==t.materials)for(var r=0,i=t.materials.length;r<i;r++)e.materials.push(this.parse(t.materials[r]));return e}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=this.parseGeometries(t.geometries),r=this.parseMaterials(t.materials);return this.parseObject(t.object,e,r)},parseGeometries:function(t){var e={};if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=t.length;n<o;n++){var a,s=t[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s.data);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),e[s.uuid]=a}return e},parseMaterials:function(t){var e={};if(void 0!==t)for(var r=new THREE.MaterialLoader,i=0,n=t.length;i<n;i++){var o=t[i],a=r.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),e[o.uuid]=a}return e},parseObject:function(){var t=new THREE.Matrix4;return function(e,r,i){var n;switch(e.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":n=new THREE.AmbientLight(e.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new THREE.PointLight(e.color,e.intensity,e.distance);break;case"SpotLight":n=new THREE.SpotLight(e.color,e.intensity,e.distance,e.angle,e.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(e.color,e.groundColor,e.intensity);break;case"Mesh":var o=r[e.geometry],a=i[e.material];void 0===o&&console.error("THREE.ObjectLoader: Undefined geometry "+e.geometry),void 0===a&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Mesh(o,a);break;case"Sprite":var a=i[e.material];void 0===a&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Sprite(a);break;default:n=new THREE.Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.children)for(var s in e.children)n.add(this.parseObject(e.children[s],r,i));return n}}()},THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=this,o=new THREE.ImageLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){var r=new THREE.Texture(t);r.needsUpdate=!0,void 0!==e&&e(r)},r,i)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0!==r){if(e in this){var i=this[e];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[e]="overdraw"==e?Number(r):r}}else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},clone:function(t){return void 0===t&&(t=new THREE.Material),t.name=this.name,t.side=this.side,t.opacity=this.opacity,t.transparent=this.transparent,t.blending=this.blending,t.blendSrc=this.blendSrc,t.blendDst=this.blendDst,t.blendEquation=this.blendEquation,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.polygonOffset=this.polygonOffset,t.polygonOffsetFactor=this.polygonOffsetFactor,t.polygonOffsetUnits=this.polygonOffsetUnits,t.alphaTest=this.alphaTest,t.overdraw=this.overdraw,t.visible=this.visible,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var t=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.linecap=this.linecap,t.linejoin=this.linejoin,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var t=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.scale=this.scale,t.dashSize=this.dashSize,t.gapSize=this.gapSize,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var t=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var t=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var t=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.specular.copy(this.specular),t.shininess=this.shininess,t.metal=this.metal,t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.bumpMap=this.bumpMap,t.bumpScale=this.bumpScale,t.normalMap=this.normalMap,t.normalScale.copy(this.normalScale),t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var t=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,t),t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var t=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,t),t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshFaceMaterial=function(t){this.materials=t instanceof Array?t:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t},THREE.PointCloudMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.clone=function(){var t=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.size=this.size,t.sizeAttenuation=this.sizeAttenuation,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(t)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var t=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,t),t.fragmentShader=this.fragmentShader,t.vertexShader=this.vertexShader,t.uniforms=THREE.UniformsUtils.clone(this.uniforms),t.attributes=this.attributes,t.defines=this.defines,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.fog=this.fog,t.lights=this.lights,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var t=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,t),t},THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var t=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.rotation=this.rotation,t.fog=this.fog,t},THREE.SpriteCanvasMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(t,e){},this.setValues(t)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var t=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.program=this.program,t},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(t,e,r,i,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){t===!0&&this.update(),this._needsUpdate=t},clone:function(t){return void 0===t&&(t=new THREE.Texture),t.image=this.image,t.mipmaps=this.mipmaps.slice(0),t.mapping=this.mapping,t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.format=this.format,t.type=this.type,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.generateMipmaps=this.generateMipmaps,t.premultiplyAlpha=this.premultiplyAlpha,t.flipY=this.flipY,t.unpackAlignment=this.unpackAlignment,t},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(t,e,r,i,n,o,a,s,h){THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.images=t},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.clone=function(t){return void 0===t&&(t=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,t),t.images=this.images,t},THREE.CompressedTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:e,height:r},this.mipmaps=t,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var t=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.DataTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:t,width:e,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var t=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.PointCloud=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointCloudMaterial({color:16777215*Math.random()}),this.sortParticles=!1},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.PointCloud.threshold;if(t.getInverse(this.matrixWorld),e.copy(r.ray).applyMatrix4(t),null===o.boundingBox||e.isIntersectionBox(o.boundingBox)!==!1){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,l=function(t,o){var a=e.distanceToPoint(t);if(a<s){var h=e.closestPointToPoint(t);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:a,point:h.clone(),index:o,face:null,object:n})}};if(o instanceof THREE.BufferGeometry){var c=o.attributes,u=c.position.array;if(void 0!==c.index){var f=c.index.array,E=o.offsets;if(0===E.length){E=[{start:0,count:f.length,index:0}]}for(var p=0,d=E.length;p<d;++p)for(var m=E[p].start,g=E[p].count,v=E[p].index,T=m,y=m+g;T<y;T++){var R=v+f[T];h.set(u[3*R],u[3*R+1],u[3*R+2]),l(h,R)}}else for(var x=u.length/3,T=0;T<x;T++)h.set(u[3*T],u[3*T+1],u[3*T+2]),l(h,T)}else for(var H=this.geometry.vertices,T=0;T<H.length;T++)l(H[T],T)}}}(),THREE.PointCloud.prototype.clone=function(t){return void 0===t&&(t=new THREE.PointCloud(this.geometry,this.material)),t.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,t),t},THREE.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(t,e)},THREE.Line=function(t,e,r){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,a=o*o,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),i.ray.isIntersectionSphere(r)!==!1&&(t.getInverse(this.matrixWorld),e.copy(i.ray).applyMatrix4(t),s instanceof THREE.Geometry))for(var h=s.vertices,l=h.length,c=new THREE.Vector3,u=new THREE.Vector3,f=this.type===THREE.LineStrip?1:2,E=0;E<l-1;E+=f){var p=e.distanceSqToSegment(h[E],h[E+1],u,c);if(!(p>a)){var d=e.origin.distanceTo(u);d<i.near||d>i.far||n.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}(),THREE.Line.prototype.clone=function(t){return void 0===t&&(t=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),a.ray.isIntersectionSphere(r)!==!1&&(t.getInverse(this.matrixWorld),e.copy(a.ray).applyMatrix4(t),null===h.boundingBox||e.isIntersectionBox(h.boundingBox)!==!1))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0===l)return;var c,u,f,E=h.attributes,p=a.precision;if(void 0!==E.index){var d=E.index.array,m=E.position.array,g=h.offsets;0===g.length&&(g=[{start:0,count:d.length,index:0}]);for(var v=0,T=g.length;v<T;++v)for(var y=g[v].start,R=g[v].count,x=g[v].index,H=y,_=y+R;H<_;H+=3){if(c=x+d[H],u=x+d[H+1],f=x+d[H+2],i.set(m[3*c],m[3*c+1],m[3*c+2]),n.set(m[3*u],m[3*u+1],m[3*u+2]),o.set(m[3*f],m[3*f+1],m[3*f+2]),l.side===THREE.BackSide)var b=e.intersectTriangle(o,n,i,!0);else var b=e.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide);if(null!==b){b.applyMatrix4(this.matrixWorld);var w=a.ray.origin.distanceTo(b);w<p||w<a.near||w>a.far||s.push({distance:w,point:b,indices:[c,u,f],face:null,faceIndex:null,object:this})}}}else for(var m=E.position.array,H=0,M=0,_=m.length;H<_;H+=3,M+=9){if(c=H,u=H+1,f=H+2,i.set(m[M],m[M+1],m[M+2]),n.set(m[M+3],m[M+4],m[M+5]),o.set(m[M+6],m[M+7],m[M+8]),l.side===THREE.BackSide)var b=e.intersectTriangle(o,n,i,!0);else var b=e.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide);if(null!==b){b.applyMatrix4(this.matrixWorld);var w=a.ray.origin.distanceTo(b);w<p||w<a.near||w>a.far||s.push({distance:w,point:b,indices:[c,u,f],face:null,faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var c,u,f,S=this.material instanceof THREE.MeshFaceMaterial,C=S===!0?this.material.materials:null,p=a.precision,A=h.vertices,L=0,P=h.faces.length;L<P;L++){var F=h.faces[L],l=S===!0?C[F.materialIndex]:this.material;if(void 0!==l){if(c=A[F.a],u=A[F.b],f=A[F.c],l.morphTargets===!0){var D=h.morphTargets,U=this.morphTargetInfluences;i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var V=0,z=D.length;V<z;V++){var B=U[V];if(0!==B){var k=D[V].vertices;i.x+=(k[F.a].x-c.x)*B,i.y+=(k[F.a].y-c.y)*B,i.z+=(k[F.a].z-c.z)*B,n.x+=(k[F.b].x-u.x)*B,n.y+=(k[F.b].y-u.y)*B,n.z+=(k[F.b].z-u.z)*B,o.x+=(k[F.c].x-f.x)*B,o.y+=(k[F.c].y-f.y)*B,o.z+=(k[F.c].z-f.z)*B}}i.add(c),n.add(u),o.add(f),c=i,u=n,f=o}if(l.side===THREE.BackSide)var b=e.intersectTriangle(f,u,c,!0);else var b=e.intersectTriangle(c,u,f,l.side!==THREE.DoubleSide);if(null!==b){b.applyMatrix4(this.matrixWorld);var w=a.ray.origin.distanceTo(b);w<p||w<a.near||w>a.far||s.push({distance:w,point:b,face:F,faceIndex:L,object:this})}}}}}(),THREE.Mesh.prototype.clone=function(t,e){return void 0===t&&(t=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,t,e),t},THREE.Bone=function(t){THREE.Object3D.call(this),this.skin=t,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.updateMatrixWorld=function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,t=t||[],this.bones=t.slice(0),this.useVertexTexture){var i;i=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var n=0,o=this.bones.length;n<o;n++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(var e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){for(var t=new THREE.Matrix4,e=0,r=this.bones.length;e<r;e++){var i=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix;t.multiplyMatrices(i,this.boneInverses[e]),t.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh=function(t,e,r){THREE.Mesh.call(this,t,e),this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var i=[];if(this.geometry&&void 0!==this.geometry.bones){for(var n,o,a,s,h,l=0,c=this.geometry.bones.length;l<c;++l)o=this.geometry.bones[l],a=o.pos,s=o.rotq,h=o.scl,n=new THREE.Bone(this),i.push(n),n.name=o.name,n.position.set(a[0],a[1],a[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?n.scale.set(h[0],h[1],h[2]):n.scale.set(1,1,1);for(var l=0,c=this.geometry.bones.length;l<c;++l)o=this.geometry.bones[l],o.parent!==-1?i[o.parent].add(i[l]):this.add(i[l])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(i,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],r=1/e.lengthManhattan();1/0!==r?e.multiplyScalar(r):e.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(t){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,t),t},THREE.MorphAnimMesh=function(t,e){THREE.Mesh.call(this,t,e),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(t,e){this.startKeyframe=t,this.endKeyframe=e,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var t=this.geometry;t.animations||(t.animations={});for(var e,r=t.animations,i=0,n=t.morphTargets.length;i<n;i++){var o=t.morphTargets[i],a=o.name.match(/([a-z]+)_?(\d+)/);if(a&&a.length>1){var s=a[1];a[2];r[s]||(r[s]={start:1/0,end:-1/0});var h=r[s];i<h.start&&(h.start=i),i>h.end&&(h.end=i),e||(e=s)}}t.firstAnimation=e},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(t,e,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[t]={start:e,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(t,e){
var r=this.geometry.animations[t];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/e*1e3,this.time=0):console.warn("animation["+t+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(t){var e=this.duration/this.length;this.time+=this.direction*t,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/e),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%e/e;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.interpolateTargets=function(t,e,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;n<o;n++)i[n]=0;t>-1&&(i[t]=1-r),e>-1&&(i[e]=r)},THREE.MorphAnimMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.MorphAnimMesh(this.geometry,this.material)),t.duration=this.duration,t.mirroredLoop=this.mirroredLoop,t.time=this.time,t.lastKeyframe=this.lastKeyframe,t.currentKeyframe=this.currentKeyframe,t.direction=this.direction,t.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,t),t},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=0;r<this.objects.length&&!(e<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=1,r=this.objects.length;e<r&&!(t<this.objects[e].distance);e++);return this.objects[e-1].object},THREE.LOD.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.origin.distanceTo(t);this.getObjectForDistance(i).raycast(e,r)}}(),THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){if(this.objects.length>1){t.setFromMatrixPosition(r.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var i=t.distanceTo(e);this.objects[0].object.visible=!0;for(var n=1,o=this.objects.length;n<o&&i>=this.objects[n].distance;n++)this.objects[n-1].object.visible=!1,this.objects[n].object.visible=!0;for(;n<o;n++)this.objects[n].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(t){void 0===t&&(t=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,t);for(var e=0,r=this.objects.length;e<r;e++){var i=this.objects[e].object.clone();i.visible=0===e,t.addLevel(i,this.objects[e].distance)}return t},THREE.Sprite=function(){var t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),e=new THREE.BufferGeometry;return e.addAttribute("position",new THREE.BufferAttribute(t,3)),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.distanceToPoint(t);i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(t){return void 0===t&&(t=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(t){if(t instanceof THREE.Light)this.__lights.indexOf(t)===-1&&this.__lights.push(t),t.target&&void 0===t.target.parent&&this.add(t.target);else if(!(t instanceof THREE.Camera||t instanceof THREE.Bone)){this.__objectsAdded.push(t);var e=this.__objectsRemoved.indexOf(t);e!==-1&&this.__objectsRemoved.splice(e,1)}this.dispatchEvent({type:"objectAdded",object:t}),t.dispatchEvent({type:"addedToScene",scene:this});for(var r=0;r<t.children.length;r++)this.__addObject(t.children[r])},THREE.Scene.prototype.__removeObject=function(t){if(t instanceof THREE.Light){var e=this.__lights.indexOf(t);if(e!==-1&&this.__lights.splice(e,1),t.shadowCascadeArray)for(var r=0;r<t.shadowCascadeArray.length;r++)this.__removeObject(t.shadowCascadeArray[r])}else if(!(t instanceof THREE.Camera)){this.__objectsRemoved.push(t);var e=this.__objectsAdded.indexOf(t);e!==-1&&this.__objectsAdded.splice(e,1)}this.dispatchEvent({type:"objectRemoved",object:t}),t.dispatchEvent({type:"removedFromScene",scene:this});for(var i=0;i<t.children.length;i++)this.__removeObject(t.children[i])},THREE.Scene.prototype.clone=function(t){return void 0===t&&(t=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,t),null!==this.fog&&(t.fog=this.fog.clone()),null!==this.overrideMaterial&&(t.overrideMaterial=this.overrideMaterial.clone()),t.autoUpdate=this.autoUpdate,t.matrixAutoUpdate=this.matrixAutoUpdate,t},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(t){function e(){vt.setRGB(0,0,0),Tt.setRGB(0,0,0),yt.setRGB(0,0,0);for(var t=0,e=_.length;t<e;t++){var r=_[t],i=r.color;r instanceof THREE.AmbientLight?vt.add(i):r instanceof THREE.DirectionalLight?Tt.add(i):r instanceof THREE.PointLight&&yt.add(i)}}function r(t,e,r){for(var i=0,n=_.length;i<n;i++){var o=_[i];if(Et.copy(o.color),o instanceof THREE.DirectionalLight){var a=Rt.setFromMatrixPosition(o.matrixWorld).normalize(),s=e.dot(a);if(s<=0)continue;s*=o.intensity,r.add(Et.multiplyScalar(s))}else if(o instanceof THREE.PointLight){var a=Rt.setFromMatrixPosition(o.matrixWorld),s=e.dot(Rt.subVectors(a,t).normalize());if(s<=0)continue;if(0==(s*=0==o.distance?1:1-Math.min(t.distanceTo(a)/o.distance,1)))continue;s*=o.intensity,r.add(Et.multiplyScalar(s))}}}function i(t,e,r){E(r.opacity),p(r.blending);var i=e.scale.x*Y,n=e.scale.y*q,o=.5*Math.sqrt(i*i+n*n);if(gt.min.set(t.x-o,t.y-o),gt.max.set(t.x+o,t.y+o),r instanceof THREE.SpriteMaterial){var a=r.map;if(null!==a&&void 0!==a.image){a.hasEventListener("update",l)===!1&&(a.image.width>0&&c(a),a.addEventListener("update",l));var s=pt[a.id];T(void 0!==s?s:"rgba( 0, 0, 0, 1 )");var h=a.image,u=h.width*a.offset.x,f=h.height*a.offset.y,d=h.width*a.repeat.x,m=h.height*a.repeat.y,g=i/d,y=n/m;$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.translate(-i/2,-n/2),$.scale(g,y),$.translate(-u,-f),$.fillRect(u,f,d,m),$.restore()}else T(r.color.getStyle()),$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.scale(i,-n),$.fillRect(-.5,-.5,1,1),$.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(v(r.color.getStyle()),T(r.color.getStyle()),$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.scale(i,n),r.program($),$.restore())}function n(t,e,r,i){if(E(i.opacity),p(i.blending),$.beginPath(),$.moveTo(t.positionScreen.x,t.positionScreen.y),$.lineTo(e.positionScreen.x,e.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(d(i.linewidth),m(i.linecap),g(i.linejoin),i.vertexColors!==THREE.VertexColors)v(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle();if(n===o)v(n);else{try{var a=$.createLinearGradient(t.positionScreen.x,t.positionScreen.y,e.positionScreen.x,e.positionScreen.y);a.addColorStop(0,n),a.addColorStop(1,o)}catch(t){a=n}v(a)}}$.stroke(),gt.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(d(i.linewidth),m(i.linecap),g(i.linejoin),v(i.color.getStyle()),y([i.dashSize,i.gapSize]),$.stroke(),gt.expandByScalar(2*i.linewidth),y([]))}function o(t,e,i,n,o,l,c,f){I.info.render.vertices+=3,I.info.render.faces++,E(f.opacity),p(f.blending),C=t.positionScreen.x,A=t.positionScreen.y,L=e.positionScreen.x,P=e.positionScreen.y,F=i.positionScreen.x,D=i.positionScreen.y,a(C,A,L,P,F,D),(f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&null===f.map?(ut.copy(f.color),ft.copy(f.emissive),f.vertexColors===THREE.FaceColors&&ut.multiply(c.color),ct.copy(vt),xt.copy(t.positionWorld).add(e.positionWorld).add(i.positionWorld).divideScalar(3),r(xt,c.normalModel,ct),ct.multiply(ut).add(ft),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial?null!==f.map?f.map.mapping instanceof THREE.UVMapping&&(U=c.uvs,u(C,A,L,P,F,D,U[n].x,U[n].y,U[o].x,U[o].y,U[l].x,U[l].y,f.map)):null!==f.envMap?f.envMap.mapping instanceof THREE.SphericalReflectionMapping?(Ht.copy(c.vertexNormalsModel[n]).applyMatrix3(_t),V=.5*Ht.x+.5,z=.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[o]).applyMatrix3(_t),B=.5*Ht.x+.5,k=.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[l]).applyMatrix3(_t),N=.5*Ht.x+.5,O=.5*Ht.y+.5,u(C,A,L,P,F,D,V,z,B,k,N,O,f.envMap)):f.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(Ht.copy(c.vertexNormalsModel[n]).applyMatrix3(_t),V=-.5*Ht.x+.5,z=-.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[o]).applyMatrix3(_t),B=-.5*Ht.x+.5,k=-.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[l]).applyMatrix3(_t),N=-.5*Ht.x+.5,O=-.5*Ht.y+.5,u(C,A,L,P,F,D,V,z,B,k,N,O,f.envMap)):(ct.copy(f.color),f.vertexColors===THREE.FaceColors&&ct.multiply(c.color),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshDepthMaterial?(ct.r=ct.g=ct.b=1-R(t.positionScreen.z*t.positionScreen.w,b.near,b.far),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshNormalMaterial?(Ht.copy(c.normalModel).applyMatrix3(_t),ct.setRGB(Ht.x,Ht.y,Ht.z).multiplyScalar(.5).addScalar(.5),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):(ct.setRGB(1,1,1),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct))}function a(t,e,r,i,n,o){$.beginPath(),$.moveTo(t,e),$.lineTo(r,i),$.lineTo(n,o),$.closePath()}function s(t,e,r,i){d(e),m(r),g(i),v(t.getStyle()),$.stroke(),gt.expandByScalar(2*e)}function h(t){T(t.getStyle()),$.fill()}function l(t){c(t.target)}function c(t){if(!(t instanceof THREE.CompressedTexture)){var e=t.wrapS===THREE.RepeatWrapping,r=t.wrapT===THREE.RepeatWrapping,i=t.image,n=document.createElement("canvas");n.width=i.width,n.height=i.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,i.height),o.drawImage(i,0,0),pt[t.id]=$.createPattern(n,e===!0&&r===!0?"repeat":e===!0&&r===!1?"repeat-x":e===!1&&r===!0?"repeat-y":"no-repeat")}}function u(t,e,r,i,n,o,a,s,h,u,f,E,p){if(!(p instanceof THREE.DataTexture)){p.hasEventListener("update",l)===!1&&(void 0!==p.image&&p.image.width>0&&c(p),p.addEventListener("update",l));var d=pt[p.id];if(void 0===d)return T("rgba(0,0,0,1)"),void $.fill();T(d);var m,g,v,y,R,x,H,_,b=p.offset.x/p.repeat.x,w=p.offset.y/p.repeat.y,M=p.image.width*p.repeat.x,S=p.image.height*p.repeat.y;a=(a+b)*M,s=(s+w)*S,h=(h+b)*M,u=(u+w)*S,f=(f+b)*M,E=(E+w)*S,r-=t,i-=e,n-=t,o-=e,h-=a,u-=s,f-=a,E-=s,H=h*E-f*u,0!==H&&(_=1/H,m=(E*r-u*n)*_,g=(E*i-u*o)*_,v=(h*n-f*r)*_,y=(h*o-f*i)*_,R=t-m*a-v*s,x=e-g*a-y*s,$.save(),$.transform(m,g,v,y,R,x),$.fill(),$.restore())}}function f(t,e,r){var i,n=e.x-t.x,o=e.y-t.y,a=n*n+o*o;0!==a&&(i=r/Math.sqrt(a),n*=i,o*=i,e.x+=n,e.y+=o,t.x-=n,t.y-=o)}function E(t){rt!==t&&($.globalAlpha=t,rt=t)}function p(t){it!==t&&(t===THREE.NormalBlending?$.globalCompositeOperation="source-over":t===THREE.AdditiveBlending?$.globalCompositeOperation="lighter":t===THREE.SubtractiveBlending&&($.globalCompositeOperation="darker"),it=t)}function d(t){at!==t&&($.lineWidth=t,at=t)}function m(t){st!==t&&($.lineCap=t,st=t)}function g(t){ht!==t&&($.lineJoin=t,ht=t)}function v(t){nt!==t&&($.strokeStyle=t,nt=t)}function T(t){ot!==t&&($.fillStyle=t,ot=t)}function y(t){lt.length!==t.length&&($.setLineDash(t),lt=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var R=THREE.Math.smoothstep;t=t||{};var x,H,_,b,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I=this,G=new THREE.Projector,W=void 0!==t.canvas?t.canvas:document.createElement("canvas"),j=W.width,X=W.height,Y=Math.floor(j/2),q=Math.floor(X/2),K=0,Z=0,Q=j,J=X,$=W.getContext("2d",{alpha:t.alpha===!0}),tt=new THREE.Color(0),et=0,rt=1,it=0,nt=null,ot=null,at=null,st=null,ht=null,lt=[],ct=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),ut=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),ft=new THREE.Color,Et=new THREE.Color,pt={},dt=new THREE.Box2,mt=new THREE.Box2,gt=new THREE.Box2,vt=new THREE.Color,Tt=new THREE.Color,yt=new THREE.Color,Rt=new THREE.Vector3,xt=new THREE.Vector3,Ht=new THREE.Vector3,_t=new THREE.Matrix3;void 0===$.setLineDash&&($.setLineDash=function(){}),this.domElement=W,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(t,e,r){j=t*this.devicePixelRatio,X=e*this.devicePixelRatio,W.width=j,W.height=X,Y=Math.floor(j/2),q=Math.floor(X/2),r!==!1&&(W.style.width=t+"px",W.style.height=e+"px"),dt.min.set(-Y,-q),dt.max.set(Y,q),mt.min.set(-Y,-q),mt.max.set(Y,q),rt=1,it=0,nt=null,ot=null,at=null,st=null,ht=null,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){K=t*this.devicePixelRatio,Z=e*this.devicePixelRatio,Q=r*this.devicePixelRatio,J=i*this.devicePixelRatio},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(t,e){tt.set(t),et=void 0!==e?e:1,mt.min.set(-Y,-q),mt.max.set(Y,q)},this.setClearColorHex=function(t,e){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return tt},this.getClearAlpha=function(){return et},this.getMaxAnisotropy=function(){return 0},this.clear=function(){mt.empty()===!1&&(mt.intersect(dt),mt.expandByScalar(2),mt.min.x=mt.min.x+Y,mt.min.y=-mt.min.y+q,mt.max.x=mt.max.x+Y,mt.max.y=-mt.max.y+q,et<1&&$.clearRect(0|mt.min.x,0|mt.min.y,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0),et>0&&(p(THREE.NormalBlending),E(1),T("rgba("+Math.floor(255*tt.r)+","+Math.floor(255*tt.g)+","+Math.floor(255*tt.b)+","+et+")"),$.fillRect(0|mt.min.x,0|mt.min.y,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0)),mt.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(t,r){if(r instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),I.info.render.vertices=0,I.info.render.faces=0,$.setTransform(Q/j,0,0,-J/X,K,X-Z),$.translate(Y,q),x=G.projectScene(t,r,this.sortObjects,this.sortElements),H=x.elements,_=x.lights,b=r,_t.getNormalMatrix(r.matrixWorldInverse),e();for(var a=0,s=H.length;a<s;a++){var h=H[a],l=h.material;if(void 0!==l&&0!==l.opacity){if(gt.makeEmpty(),h instanceof THREE.RenderableSprite)w=h,w.x*=Y,w.y*=q,i(w,h,l);else if(h instanceof THREE.RenderableLine)w=h.v1,M=h.v2,w.positionScreen.x*=Y,w.positionScreen.y*=q,M.positionScreen.x*=Y,M.positionScreen.y*=q,gt.setFromPoints([w.positionScreen,M.positionScreen]),dt.isIntersectionBox(gt)===!0&&n(w,M,h,l);else if(h instanceof THREE.RenderableFace){if(w=h.v1,M=h.v2,S=h.v3,w.positionScreen.z<-1||w.positionScreen.z>1)continue;if(M.positionScreen.z<-1||M.positionScreen.z>1)continue;if(S.positionScreen.z<-1||S.positionScreen.z>1)continue;w.positionScreen.x*=Y,w.positionScreen.y*=q,M.positionScreen.x*=Y,M.positionScreen.y*=q,S.positionScreen.x*=Y,S.positionScreen.y*=q,l.overdraw>0&&(f(w.positionScreen,M.positionScreen,l.overdraw),f(M.positionScreen,S.positionScreen,l.overdraw),f(S.positionScreen,w.positionScreen,l.overdraw)),gt.setFromPoints([w.positionScreen,M.positionScreen,S.positionScreen]),dt.isIntersectionBox(gt)===!0&&o(w,M,S,0,1,2,h,l)}mt.union(gt)}}$.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif",
THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif",
THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(t){var e,r,i,n={};for(e=0;e<t.length;e++){i=this.clone(t[e]);for(r in i)n[r]=i[r]}return n},clone:function(t){var e,r,i,n={};for(e in t){n[e]={};for(r in t[e])i=t[e][r],i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?n[e][r]=i.clone():i instanceof Array?n[e][r]=i.slice():n[e][r]=i}return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\tgl_FragColor.xyz *= vLightFront;","\t\telse","\t\t\tgl_FragColor.xyz *= vLightBack;","\t#else","\t\tgl_FragColor.xyz *= vLightFront;","\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );","\t#else","\t\tgl_PointSize = size;","\t#endif","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","\tuniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );","\tvec3 specularTex = vec3( 1.0 );","\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","\tnormalTex.xy *= uNormalScale;","\tnormalTex = normalize( normalTex );","\tif( enableDiffuse ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );","\t\t\ttexelColor.xyz *= texelColor.xyz;","\t\t\tgl_FragColor = gl_FragColor * texelColor;","\t\t#else","\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","\t\t#endif","\t}","\tif( enableAO ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 aoColor = texture2D( tAO, vUv );","\t\t\taoColor.xyz *= aoColor.xyz;","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","\t\t#else","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","\t\t#endif","\t}",THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )","\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;","\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","\tvec3 finalNormal = tsb * normalTex;","\t#ifdef FLIP_SIDED","\t\tfinalNormal = -finalNormal;","\t#endif","\tvec3 normal = normalize( finalNormal );","\tvec3 viewPosition = normalize( vViewPosition );","\t#if MAX_POINT_LIGHTS > 0","\t\tvec3 pointDiffuse = vec3( 0.0 );","\t\tvec3 pointSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat pointDistance = 1.0;","\t\t\tif ( pointLightDistance[ i ] > 0.0 )","\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","\t\t\tpointVector = normalize( pointVector );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","\t\t\t#endif","\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );","\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );","\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","\t\t}","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\tvec3 spotDiffuse = vec3( 0.0 );","\t\tvec3 spotSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat spotDistance = 1.0;","\t\t\tif ( spotLightDistance[ i ] > 0.0 )","\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","\t\t\tspotVector = normalize( spotVector );","\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {","\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );","\t\t\t\t#ifdef WRAP_AROUND","\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","\t\t\t\t#else","\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t#endif","\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );","\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );","\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","\t\t\t}","\t\t}","\t#endif","\t#if MAX_DIR_LIGHTS > 0","\t\tvec3 dirDiffuse = vec3( 0.0 );","\t\tvec3 dirSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","\t\t\tvec3 dirVector = normalize( lDirection.xyz );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","\t\t\t#endif","\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );","\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","\t\t}","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\tvec3 hemiDiffuse = vec3( 0.0 );","\t\tvec3 hemiSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","\t\t\tvec3 lVector = normalize( lDirection.xyz );","\t\t\tfloat dotProduct = dot( normal, lVector );","\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","\t\t\themiDiffuse += diffuse * hemiColor;","\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );","\t\t\tvec3 lVectorGround = -lVector;","\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );","\t\t\tfloat dotProductGround = dot( normal, lVectorGround );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","\t\t}","\t#endif","\tvec3 totalDiffuse = vec3( 0.0 );","\tvec3 totalSpecular = vec3( 0.0 );","\t#if MAX_DIR_LIGHTS > 0","\t\ttotalDiffuse += dirDiffuse;","\t\ttotalSpecular += dirSpecular;","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\ttotalDiffuse += hemiDiffuse;","\t\ttotalSpecular += hemiSpecular;","\t#endif","\t#if MAX_POINT_LIGHTS > 0","\t\ttotalDiffuse += pointDiffuse;","\t\ttotalSpecular += pointSpecular;","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\ttotalDiffuse += spotDiffuse;","\t\ttotalSpecular += spotSpecular;","\t#endif","\t#ifdef METAL","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","\t#else","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","\t#endif","\tif ( enableReflection ) {","\t\tvec3 vReflect;","\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","\t\tif ( useRefract ) {","\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );","\t\t} else {","\t\t\tvReflect = reflect( cameraToVertex, normal );","\t\t}","\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","\t\t#ifdef GAMMA_INPUT","\t\t\tcubeColor.xyz *= cubeColor.xyz;","\t\t#endif","\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","\tuniform sampler2D tDisplacement;","\tuniform float uDisplacementScale;","\tuniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING","\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );","\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );","\t#else","\t\tvNormal = normalize( normalMatrix * normal );","\t\tvTangent = normalize( normalMatrix * tangent.xyz );","\t#endif","\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","\tvUv = uv * uRepeat + uOffset;","\tvec3 displacedPosition;","\t#ifdef VERTEX_TEXTURES","\t\tif ( enableDisplacement ) {","\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;","\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;","\t\t\tdisplacedPosition = position + normalize( normal ) * df;","\t\t} else {","\t\t\t#ifdef USE_SKINNING","\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );","\t\t\t\tvec4 skinned = vec4( 0.0 );","\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;","\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;","\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;","\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;","\t\t\t\tskinned  = bindMatrixInverse * skinned;","\t\t\t\tdisplacedPosition = skinned.xyz;","\t\t\t#else","\t\t\t\tdisplacedPosition = position;","\t\t\t#endif","\t\t}","\t#else","\t\t#ifdef USE_SKINNING","\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );","\t\t\tvec4 skinned = vec4( 0.0 );","\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;","\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;","\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;","\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;","\t\t\tskinned  = bindMatrixInverse * skinned;","\t\t\tdisplacedPosition = skinned.xyz;","\t\t#else","\t\t\tdisplacedPosition = position;","\t\t#endif","\t#endif","\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;","\tvViewPosition = -mvPosition.xyz;","\t#ifdef USE_SHADOWMAP","\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {","\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","\t\t}","\t#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvWorldPosition = worldPosition.xyz;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")}},THREE.WebGLRenderer=function(t){function e(t){t.__webglVertexBuffer=Dt.createBuffer(),
t.__webglColorBuffer=Dt.createBuffer(),It.info.memory.geometries++}function r(t){t.__webglVertexBuffer=Dt.createBuffer(),t.__webglColorBuffer=Dt.createBuffer(),t.__webglLineDistanceBuffer=Dt.createBuffer(),It.info.memory.geometries++}function i(t){t.__webglVertexBuffer=Dt.createBuffer(),t.__webglNormalBuffer=Dt.createBuffer(),t.__webglTangentBuffer=Dt.createBuffer(),t.__webglColorBuffer=Dt.createBuffer(),t.__webglUVBuffer=Dt.createBuffer(),t.__webglUV2Buffer=Dt.createBuffer(),t.__webglSkinIndicesBuffer=Dt.createBuffer(),t.__webglSkinWeightsBuffer=Dt.createBuffer(),t.__webglFaceBuffer=Dt.createBuffer(),t.__webglLineBuffer=Dt.createBuffer();var e,r;if(t.numMorphTargets)for(t.__webglMorphTargetsBuffers=[],e=0,r=t.numMorphTargets;e<r;e++)t.__webglMorphTargetsBuffers.push(Dt.createBuffer());if(t.numMorphNormals)for(t.__webglMorphNormalsBuffers=[],e=0,r=t.numMorphNormals;e<r;e++)t.__webglMorphNormalsBuffers.push(Dt.createBuffer());It.info.memory.geometries++}function n(t,e){var r=t.vertices.length,i=e.material;if(i.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var n in i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=Dt.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}t.__webglCustomAttributesList.push(o)}}}function o(t,e){var r=t.vertices.length;t.__vertexArray=new Float32Array(3*r),t.__colorArray=new Float32Array(3*r),t.__sortArray=[],t.__webglParticleCount=r,n(t,e)}function a(t,e){var r=t.vertices.length;t.__vertexArray=new Float32Array(3*r),t.__colorArray=new Float32Array(3*r),t.__lineDistanceArray=new Float32Array(1*r),t.__webglLineCount=r,n(t,e)}function s(t,e){var r=e.geometry,i=t.faces3,n=3*i.length,o=1*i.length,a=3*i.length,s=h(e,t),l=f(s),E=c(s),p=u(s);t.__vertexArray=new Float32Array(3*n),E&&(t.__normalArray=new Float32Array(3*n)),r.hasTangents&&(t.__tangentArray=new Float32Array(4*n)),p&&(t.__colorArray=new Float32Array(3*n)),l&&(r.faceVertexUvs.length>0&&(t.__uvArray=new Float32Array(2*n)),r.faceVertexUvs.length>1&&(t.__uv2Array=new Float32Array(2*n))),e.geometry.skinWeights.length&&e.geometry.skinIndices.length&&(t.__skinIndexArray=new Float32Array(4*n),t.__skinWeightArray=new Float32Array(4*n));var d=null!==Nt&&o>21845?Uint32Array:Uint16Array;t.__typeArray=d,t.__faceArray=new d(3*o),t.__lineArray=new d(2*a);var m,g;if(t.numMorphTargets)for(t.__morphTargetsArrays=[],m=0,g=t.numMorphTargets;m<g;m++)t.__morphTargetsArrays.push(new Float32Array(3*n));if(t.numMorphNormals)for(t.__morphNormalsArrays=[],m=0,g=t.numMorphNormals;m<g;m++)t.__morphNormalsArrays.push(new Float32Array(3*n));if(t.__webglFaceCount=3*o,t.__webglLineCount=2*a,s.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var v in s.attributes){var T=s.attributes[v],y={};for(var R in T)y[R]=T[R];if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0;var x=1;"v2"===y.type?x=2:"v3"===y.type?x=3:"v4"===y.type?x=4:"c"===y.type&&(x=3),y.size=x,y.array=new Float32Array(n*x),y.buffer=Dt.createBuffer(),y.buffer.belongsToAttribute=v,T.needsUpdate=!0,y.__original=T}t.__webglCustomAttributesList.push(y)}}t.__inittedArrays=!0}function h(t,e){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[e.materialIndex]:t.material}function l(t){return t&&void 0!==t.shading&&t.shading===THREE.SmoothShading}function c(t){return!(t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial)&&(l(t)?THREE.SmoothShading:THREE.FlatShading)}function u(t){return!!t.vertexColors&&t.vertexColors}function f(t){return!!(t.map||t.lightMap||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t instanceof THREE.ShaderMaterial)}function E(t){for(var e in t.attributes){var r="index"===e?Dt.ELEMENT_ARRAY_BUFFER:Dt.ARRAY_BUFFER,i=t.attributes[e];i.buffer=Dt.createBuffer(),Dt.bindBuffer(r,i.buffer),Dt.bufferData(r,i.array,Dt.STATIC_DRAW)}}function p(t,e,r){var i,n,o,a,s,h,l,c,u,f,E,p,d=t.vertices,m=d.length,g=t.colors,v=g.length,T=t.__vertexArray,y=t.__colorArray,R=t.__sortArray,x=t.verticesNeedUpdate,H=(t.elementsNeedUpdate,t.colorsNeedUpdate),_=t.__webglCustomAttributesList;if(r.sortParticles){for(ve.copy(ge),ve.multiply(r.matrixWorld),i=0;i<m;i++)o=d[i],Te.copy(o),Te.applyProjection(ve),R[i]=[Te.z,i];for(R.sort(b),i=0;i<m;i++)o=d[R[i][1]],a=3*i,T[a]=o.x,T[a+1]=o.y,T[a+2]=o.z;for(n=0;n<v;n++)a=3*n,h=g[R[n][1]],y[a]=h.r,y[a+1]=h.g,y[a+2]=h.b;if(_)for(l=0,c=_.length;l<c;l++)if(p=_[l],void 0===p.boundTo||"vertices"===p.boundTo)if(a=0,f=p.value.length,1===p.size)for(u=0;u<f;u++)s=R[u][1],p.array[u]=p.value[s];else if(2===p.size)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[a]=E.x,p.array[a+1]=E.y,a+=2;else if(3===p.size)if("c"===p.type)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[a]=E.r,p.array[a+1]=E.g,p.array[a+2]=E.b,a+=3;else for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[a]=E.x,p.array[a+1]=E.y,p.array[a+2]=E.z,a+=3;else if(4===p.size)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[a]=E.x,p.array[a+1]=E.y,p.array[a+2]=E.z,p.array[a+3]=E.w,a+=4}else{if(x)for(i=0;i<m;i++)o=d[i],a=3*i,T[a]=o.x,T[a+1]=o.y,T[a+2]=o.z;if(H)for(n=0;n<v;n++)h=g[n],a=3*n,y[a]=h.r,y[a+1]=h.g,y[a+2]=h.b;if(_)for(l=0,c=_.length;l<c;l++)if(p=_[l],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo))if(f=p.value.length,a=0,1===p.size)for(u=0;u<f;u++)p.array[u]=p.value[u];else if(2===p.size)for(u=0;u<f;u++)E=p.value[u],p.array[a]=E.x,p.array[a+1]=E.y,a+=2;else if(3===p.size)if("c"===p.type)for(u=0;u<f;u++)E=p.value[u],p.array[a]=E.r,p.array[a+1]=E.g,p.array[a+2]=E.b,a+=3;else for(u=0;u<f;u++)E=p.value[u],p.array[a]=E.x,p.array[a+1]=E.y,p.array[a+2]=E.z,a+=3;else if(4===p.size)for(u=0;u<f;u++)E=p.value[u],p.array[a]=E.x,p.array[a+1]=E.y,p.array[a+2]=E.z,p.array[a+3]=E.w,a+=4}if((x||r.sortParticles)&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglVertexBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,T,e)),(H||r.sortParticles)&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglColorBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,y,e)),_)for(l=0,c=_.length;l<c;l++)p=_[l],(p.needsUpdate||r.sortParticles)&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,p.buffer),Dt.bufferData(Dt.ARRAY_BUFFER,p.array,e))}function d(t,e){var r,i,n,o,a,s,h,l,c,u,f,E,p=t.vertices,d=t.colors,m=t.lineDistances,g=p.length,v=d.length,T=m.length,y=t.__vertexArray,R=t.__colorArray,x=t.__lineDistanceArray,H=t.verticesNeedUpdate,_=t.colorsNeedUpdate,b=t.lineDistancesNeedUpdate,w=t.__webglCustomAttributesList;if(H){for(r=0;r<g;r++)o=p[r],a=3*r,y[a]=o.x,y[a+1]=o.y,y[a+2]=o.z;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglVertexBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,y,e)}if(_){for(i=0;i<v;i++)s=d[i],a=3*i,R[a]=s.r,R[a+1]=s.g,R[a+2]=s.b;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglColorBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,R,e)}if(b){for(n=0;n<T;n++)x[n]=m[n];Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglLineDistanceBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,x,e)}if(w)for(h=0,l=w.length;h<l;h++)if(E=w[h],E.needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo)){if(a=0,u=E.value.length,1===E.size)for(c=0;c<u;c++)E.array[c]=E.value[c];else if(2===E.size)for(c=0;c<u;c++)f=E.value[c],E.array[a]=f.x,E.array[a+1]=f.y,a+=2;else if(3===E.size)if("c"===E.type)for(c=0;c<u;c++)f=E.value[c],E.array[a]=f.r,E.array[a+1]=f.g,E.array[a+2]=f.b,a+=3;else for(c=0;c<u;c++)f=E.value[c],E.array[a]=f.x,E.array[a+1]=f.y,E.array[a+2]=f.z,a+=3;else if(4===E.size)for(c=0;c<u;c++)f=E.value[c],E.array[a]=f.x,E.array[a+1]=f.y,E.array[a+2]=f.z,E.array[a+3]=f.w,a+=4;Dt.bindBuffer(Dt.ARRAY_BUFFER,E.buffer),Dt.bufferData(Dt.ARRAY_BUFFER,E.array,e)}}function m(t,e,r,i,n){if(t.__inittedArrays){var o,a,s,h,l,E,p,d,m,g,v,T,y,R,x,H,_,b,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I,G,W,j,X,Y,q,K,Z=c(n),Q=u(n),J=f(n),$=Z===THREE.SmoothShading,tt=0,et=0,rt=0,it=0,nt=0,ot=0,at=0,st=0,ht=0,lt=0,ct=0,ut=0,ft=t.__vertexArray,Et=t.__uvArray,pt=t.__uv2Array,dt=t.__normalArray,mt=t.__tangentArray,gt=t.__colorArray,vt=t.__skinIndexArray,Tt=t.__skinWeightArray,yt=t.__morphTargetsArrays,Rt=t.__morphNormalsArrays,xt=t.__webglCustomAttributesList,Ht=t.__faceArray,_t=t.__lineArray,bt=e.geometry,wt=bt.verticesNeedUpdate,Mt=bt.elementsNeedUpdate,St=bt.uvsNeedUpdate,Ct=bt.normalsNeedUpdate,At=bt.tangentsNeedUpdate,Lt=bt.colorsNeedUpdate,Pt=bt.morphTargetsNeedUpdate,Ft=bt.vertices,Ut=t.faces3,Vt=bt.faces,zt=bt.faceVertexUvs[0],Bt=bt.faceVertexUvs[1],kt=(bt.colors,bt.skinIndices),Nt=bt.skinWeights,Ot=bt.morphTargets,It=bt.morphNormals;if(wt){for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],T=Ft[h.a],y=Ft[h.b],R=Ft[h.c],ft[et]=T.x,ft[et+1]=T.y,ft[et+2]=T.z,ft[et+3]=y.x,ft[et+4]=y.y,ft[et+5]=y.z,ft[et+6]=R.x,ft[et+7]=R.y,ft[et+8]=R.z,et+=9;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglVertexBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,ft,r)}if(Pt)for(I=0,G=Ot.length;I<G;I++){for(ct=0,o=0,a=Ut.length;o<a;o++)X=Ut[o],h=Vt[X],T=Ot[I].vertices[h.a],y=Ot[I].vertices[h.b],R=Ot[I].vertices[h.c],W=yt[I],W[ct]=T.x,W[ct+1]=T.y,W[ct+2]=T.z,W[ct+3]=y.x,W[ct+4]=y.y,W[ct+5]=y.z,W[ct+6]=R.x,W[ct+7]=R.y,W[ct+8]=R.z,n.morphNormals&&($?(Y=It[I].vertexNormals[X],b=Y.a,w=Y.b,M=Y.c):(b=It[I].faceNormals[X],w=b,M=b),j=Rt[I],j[ct]=b.x,j[ct+1]=b.y,j[ct+2]=b.z,j[ct+3]=w.x,j[ct+4]=w.y,j[ct+5]=w.z,j[ct+6]=M.x,j[ct+7]=M.y,j[ct+8]=M.z),ct+=9;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[I]),Dt.bufferData(Dt.ARRAY_BUFFER,yt[I],r),n.morphNormals&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[I]),Dt.bufferData(Dt.ARRAY_BUFFER,Rt[I],r))}if(Nt.length){for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],L=Nt[h.a],P=Nt[h.b],F=Nt[h.c],Tt[lt]=L.x,Tt[lt+1]=L.y,Tt[lt+2]=L.z,Tt[lt+3]=L.w,Tt[lt+4]=P.x,Tt[lt+5]=P.y,Tt[lt+6]=P.z,Tt[lt+7]=P.w,Tt[lt+8]=F.x,Tt[lt+9]=F.y,Tt[lt+10]=F.z,Tt[lt+11]=F.w,D=kt[h.a],U=kt[h.b],V=kt[h.c],vt[lt]=D.x,vt[lt+1]=D.y,vt[lt+2]=D.z,vt[lt+3]=D.w,vt[lt+4]=U.x,vt[lt+5]=U.y,vt[lt+6]=U.z,vt[lt+7]=U.w,vt[lt+8]=V.x,vt[lt+9]=V.y,vt[lt+10]=V.z,vt[lt+11]=V.w,lt+=12;lt>0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglSkinIndicesBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,vt,r),Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglSkinWeightsBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,Tt,r))}if(Lt&&Q){for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],p=h.vertexColors,d=h.color,3===p.length&&Q===THREE.VertexColors?(S=p[0],C=p[1],A=p[2]):(S=d,C=d,A=d),gt[ht]=S.r,gt[ht+1]=S.g,gt[ht+2]=S.b,gt[ht+3]=C.r,gt[ht+4]=C.g,gt[ht+5]=C.b,gt[ht+6]=A.r,gt[ht+7]=A.g,gt[ht+8]=A.b,ht+=9;ht>0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglColorBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,gt,r))}if(At&&bt.hasTangents){for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],m=h.vertexTangents,x=m[0],H=m[1],_=m[2],mt[at]=x.x,mt[at+1]=x.y,mt[at+2]=x.z,mt[at+3]=x.w,mt[at+4]=H.x,mt[at+5]=H.y,mt[at+6]=H.z,mt[at+7]=H.w,mt[at+8]=_.x,mt[at+9]=_.y,mt[at+10]=_.z,mt[at+11]=_.w,at+=12;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglTangentBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,mt,r)}if(Ct&&Z){for(o=0,a=Ut.length;o<a;o++)if(h=Vt[Ut[o]],l=h.vertexNormals,E=h.normal,3===l.length&&$)for(z=0;z<3;z++)k=l[z],dt[ot]=k.x,dt[ot+1]=k.y,dt[ot+2]=k.z,ot+=3;else for(z=0;z<3;z++)dt[ot]=E.x,dt[ot+1]=E.y,dt[ot+2]=E.z,ot+=3;Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglNormalBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,dt,r)}if(St&&zt&&J){for(o=0,a=Ut.length;o<a;o++)if(s=Ut[o],void 0!==(g=zt[s]))for(z=0;z<3;z++)N=g[z],Et[rt]=N.x,Et[rt+1]=N.y,rt+=2;rt>0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglUVBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,Et,r))}if(St&&Bt&&J){for(o=0,a=Ut.length;o<a;o++)if(s=Ut[o],void 0!==(v=Bt[s]))for(z=0;z<3;z++)O=v[z],pt[it]=O.x,pt[it+1]=O.y,it+=2;it>0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglUV2Buffer),Dt.bufferData(Dt.ARRAY_BUFFER,pt,r))}if(Mt){for(o=0,a=Ut.length;o<a;o++)Ht[nt]=tt,Ht[nt+1]=tt+1,Ht[nt+2]=tt+2,nt+=3,_t[st]=tt,_t[st+1]=tt+1,_t[st+2]=tt,_t[st+3]=tt+2,_t[st+4]=tt+1,_t[st+5]=tt+2,st+=6,tt+=3;Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,t.__webglFaceBuffer),Dt.bufferData(Dt.ELEMENT_ARRAY_BUFFER,Ht,r),Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,t.__webglLineBuffer),Dt.bufferData(Dt.ELEMENT_ARRAY_BUFFER,_t,r)}if(xt)for(z=0,B=xt.length;z<B;z++)if(K=xt[z],K.__original.needsUpdate){if(ut=0,0,1===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],K.array[ut]=K.value[h.a],K.array[ut+1]=K.value[h.b],K.array[ut+2]=K.value[h.c],ut+=3;else if("faces"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],K.array[ut]=q,K.array[ut+1]=q,K.array[ut+2]=q,ut+=3}else if(2===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=y.x,K.array[ut+3]=y.y,K.array[ut+4]=R.x,K.array[ut+5]=R.y,ut+=6;else if("faces"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],T=q,y=q,R=q,K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=y.x,K.array[ut+3]=y.y,K.array[ut+4]=R.x,K.array[ut+5]=R.y,ut+=6}else if(3===K.size){var Gt;if(Gt="c"===K.type?["r","g","b"]:["x","y","z"],void 0===K.boundTo||"vertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T[Gt[0]],K.array[ut+1]=T[Gt[1]],K.array[ut+2]=T[Gt[2]],K.array[ut+3]=y[Gt[0]],K.array[ut+4]=y[Gt[1]],K.array[ut+5]=y[Gt[2]],K.array[ut+6]=R[Gt[0]],K.array[ut+7]=R[Gt[1]],K.array[ut+8]=R[Gt[2]],ut+=9;else if("faces"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],T=q,y=q,R=q,K.array[ut]=T[Gt[0]],K.array[ut+1]=T[Gt[1]],K.array[ut+2]=T[Gt[2]],K.array[ut+3]=y[Gt[0]],K.array[ut+4]=y[Gt[1]],K.array[ut+5]=y[Gt[2]],K.array[ut+6]=R[Gt[0]],K.array[ut+7]=R[Gt[1]],K.array[ut+8]=R[Gt[2]],ut+=9;else if("faceVertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],T=q[0],y=q[1],R=q[2],K.array[ut]=T[Gt[0]],K.array[ut+1]=T[Gt[1]],K.array[ut+2]=T[Gt[2]],K.array[ut+3]=y[Gt[0]],K.array[ut+4]=y[Gt[1]],K.array[ut+5]=y[Gt[2]],K.array[ut+6]=R[Gt[0]],K.array[ut+7]=R[Gt[1]],K.array[ut+8]=R[Gt[2]],ut+=9}else if(4===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)h=Vt[Ut[o]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12;else if("faces"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],T=q,y=q,R=q,K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12;else if("faceVertices"===K.boundTo)for(o=0,a=Ut.length;o<a;o++)q=K.value[Ut[o]],T=q[0],y=q[1],R=q[2],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12;Dt.bindBuffer(Dt.ARRAY_BUFFER,K.buffer),Dt.bufferData(Dt.ARRAY_BUFFER,K.array,r)}i&&(delete t.__inittedArrays,delete t.__colorArray,delete t.__normalArray,delete t.__tangentArray,delete t.__uvArray,delete t.__uv2Array,delete t.__faceArray,delete t.__vertexArray,delete t.__lineArray,delete t.__skinIndexArray,delete t.__skinWeightArray)}}function g(t,e){var r,i,n=t.attributes;for(r in n)i=n[r],i.needsUpdate&&("index"===r?(Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,i.buffer),Dt.bufferData(Dt.ELEMENT_ARRAY_BUFFER,i.array,e)):(Dt.bindBuffer(Dt.ARRAY_BUFFER,i.buffer),Dt.bufferData(Dt.ARRAY_BUFFER,i.array,e)),i.needsUpdate=!1)}function v(t,e,r,i){for(var n in e){var o=e[n],a=r[n];if(o>=0)if(a){var s=a.itemSize;Dt.bindBuffer(Dt.ARRAY_BUFFER,a.buffer),y(o),Dt.vertexAttribPointer(o,s,Dt.FLOAT,!1,0,i*s*4)}else t.defaultAttributeValues&&(2===t.defaultAttributeValues[n].length?Dt.vertexAttrib2fv(o,t.defaultAttributeValues[n]):3===t.defaultAttributeValues[n].length&&Dt.vertexAttrib3fv(o,t.defaultAttributeValues[n]))}R()}function T(){for(var t=0,e=pe.length;t<e;t++)pe[t]=0}function y(t){pe[t]=1,0===de[t]&&(Dt.enableVertexAttribArray(t),de[t]=1)}function R(){for(var t=0,e=de.length;t<e;t++)de[t]!==pe[t]&&(Dt.disableVertexAttribArray(t),de[t]=0)}function x(t,e,r){var i=t.program.attributes;if(r.morphTargetBase!==-1&&i.position>=0?(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[r.morphTargetBase]),y(i.position),Dt.vertexAttribPointer(i.position,3,Dt.FLOAT,!1,0,0)):i.position>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglVertexBuffer),y(i.position),Dt.vertexAttribPointer(i.position,3,Dt.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var n=0,o=r.morphTargetForcedOrder,a=r.morphTargetInfluences;n<t.numSupportedMorphTargets&&n<o.length;)i["morphTarget"+n]>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[o[n]]),y(i["morphTarget"+n]),Dt.vertexAttribPointer(i["morphTarget"+n],3,Dt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&t.morphNormals&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[o[n]]),y(i["morphNormal"+n]),Dt.vertexAttribPointer(i["morphNormal"+n],3,Dt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=a[o[n]],n++;else{var s,h,l=[],a=r.morphTargetInfluences,c=a.length;for(h=0;h<c;h++)(s=a[h])>0&&l.push([s,h]);l.length>t.numSupportedMorphTargets?(l.sort(b),l.length=t.numSupportedMorphTargets):l.length>t.numSupportedMorphNormals?l.sort(b):0===l.length&&l.push([0,0]);for(var u,n=0;n<t.numSupportedMorphTargets;)l[n]?(u=l[n][1],i["morphTarget"+n]>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[u]),y(i["morphTarget"+n]),Dt.vertexAttribPointer(i["morphTarget"+n],3,Dt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&t.morphNormals&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[u]),y(i["morphNormal"+n]),Dt.vertexAttribPointer(i["morphNormal"+n],3,Dt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=a[u]):r.__webglMorphTargetInfluences[n]=0,n++}null!==t.program.uniforms.morphTargetInfluences&&Dt.uniform1fv(t.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function H(t,e){return t.z!==e.z?e.z-t.z:t.id-e.id}function _(t,e){return t.z!==e.z?t.z-e.z:t.id-e.id}function b(t,e){return e[0]-t[0]}function w(t,e,r){if(e.visible!==!1){var i=t.__webglObjects[e.id];if(i&&(e.frustumCulled===!1||me.intersectsObject(e)===!0)){V(t,e);for(var n=0,o=i.length;n<o;n++){var a=i[n];L(a),a.render=!0,It.sortObjects===!0&&(null!==e.renderDepth?a.z=e.renderDepth:(Te.setFromMatrixPosition(e.matrixWorld),Te.applyProjection(ge),a.z=Te.z))}}for(var n=0,o=e.children.length;n<o;n++)w(t,e.children[n],r)}}function M(t,e,r){if(0!==t.length)for(var i=0,n=t.length;i<n;i++)Wt=null,qt=null,Jt=-1,re=-1,ie=-1,Zt=-1,Qt=-1,Yt=-1,Xt=-1,Re=!0,t[i].render(e,r,fe,Ee),Wt=null,qt=null,Jt=-1,re=-1,ie=-1,Zt=-1,Qt=-1,Yt=-1,Xt=-1,Re=!0}function S(t,e,r,i,n,o){for(var a,s,h,l,c=t.length-1;c!==-1;c--){if(a=t[c],s=a.object,h=a.buffer,rt(s,e),o)l=o;else{if(!(l=a.material))continue;n&&It.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),It.setDepthTest(l.depthTest),It.setDepthWrite(l.depthWrite),st(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}It.setMaterialFaces(l),h instanceof THREE.BufferGeometry?It.renderBufferDirect(e,r,i,l,h,s):It.renderBuffer(e,r,i,l,h,s)}}function C(t,e,r,i,n,o,a){for(var s,h,l,c=0,u=t.length;c<u;c++)if(s=t[c],h=s.object,h.visible){if(a)l=a;else{if(!(l=s[e]))continue;o&&It.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),It.setDepthTest(l.depthTest),It.setDepthWrite(l.depthWrite),st(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}It.renderImmediateObject(r,i,n,l,h)}}function A(t){var e=t.object,r=e.material;r.transparent?(t.transparent=r,t.opaque=null):(t.opaque=r,t.transparent=null)}function L(t){var e=t.object,r=t.buffer,i=e.geometry,n=e.material;if(n instanceof THREE.MeshFaceMaterial){var o=i instanceof THREE.BufferGeometry?0:r.materialIndex;n=n.materials[o],n.transparent?(t.material=n,Ft.push(t)):(t.material=n,Pt.push(t))}else n&&(n.transparent?(t.material=n,Ft.push(t)):(t.material=n,Pt.push(t)))}function P(t,i){var n,s;if(void 0===t.__webglInit&&(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3),n=t.geometry,void 0===n||void 0===n.__webglInit&&(n.__webglInit=!0,n.addEventListener("dispose",Ue),n instanceof THREE.BufferGeometry?E(n):t instanceof THREE.Mesh?(void 0!==t.__webglActive&&k(t,i),F(i,t,n)):t instanceof THREE.Line?n.__webglVertexBuffer||(r(n),a(n,t),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.lineDistancesNeedUpdate=!0):t instanceof THREE.PointCloud&&(n.__webglVertexBuffer||(e(n),o(n,t),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0))),void 0===t.__webglActive){if(t instanceof THREE.Mesh){if((n=t.geometry)instanceof THREE.BufferGeometry)D(i.__webglObjects,n,t);else if(n instanceof THREE.Geometry)for(var h=0,l=n.geometryGroupsList.length;h<l;h++)s=n.geometryGroupsList[h],D(i.__webglObjects,s,t)}else t instanceof THREE.Line||t instanceof THREE.PointCloud?(n=t.geometry,D(i.__webglObjects,n,t)):(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&U(i.__webglObjectsImmediate,t);t.__webglActive=!0}}function F(t,e,r){var n,o,a=!1;o=e.material,(void 0===r.geometryGroups||r.groupsNeedUpdate)&&(delete t.__webglObjects[e.id],r.makeGroups(o instanceof THREE.MeshFaceMaterial,Nt?4294967296:65535),r.groupsNeedUpdate=!1);for(var h=0,l=r.geometryGroupsList.length;h<l;h++)n=r.geometryGroupsList[h],n.__webglVertexBuffer?a=!1:(i(n),s(n,e),r.verticesNeedUpdate=!0,r.morphTargetsNeedUpdate=!0,r.elementsNeedUpdate=!0,r.uvsNeedUpdate=!0,r.normalsNeedUpdate=!0,r.tangentsNeedUpdate=!0,r.colorsNeedUpdate=!0,a=!0),(a||void 0===e.__webglActive)&&D(t.__webglObjects,n,e);e.__webglActive=!0}function D(t,e,r){var i=r.id;t[i]=t[i]||[],t[i].push({id:i,buffer:e,object:r,material:null,z:0})}function U(t,e){t.push({id:null,object:e,opaque:null,transparent:null,z:0})}function V(t,e){var r,i,n,o=e.geometry;if(o instanceof THREE.BufferGeometry)g(o,Dt.DYNAMIC_DRAW);else if(e instanceof THREE.Mesh){(o.buffersNeedUpdate||o.groupsNeedUpdate)&&(o instanceof THREE.BufferGeometry?E(o):e instanceof THREE.Mesh&&F(t,e,o));for(var a=0,l=o.geometryGroupsList.length;a<l;a++)r=o.geometryGroupsList[a],n=h(e,r),(o.buffersNeedUpdate||o.groupsNeedUpdate)&&s(r,e),i=n.attributes&&z(n),(o.verticesNeedUpdate||o.morphTargetsNeedUpdate||o.elementsNeedUpdate||o.uvsNeedUpdate||o.normalsNeedUpdate||o.colorsNeedUpdate||o.tangentsNeedUpdate||i)&&m(r,e,Dt.DYNAMIC_DRAW,!o.dynamic,n);o.verticesNeedUpdate=!1,o.morphTargetsNeedUpdate=!1,o.elementsNeedUpdate=!1,o.uvsNeedUpdate=!1,o.normalsNeedUpdate=!1,o.colorsNeedUpdate=!1,o.tangentsNeedUpdate=!1,o.buffersNeedUpdate=!1,n.attributes&&B(n)}else e instanceof THREE.Line?(n=h(e,o),i=n.attributes&&z(n),(o.verticesNeedUpdate||o.colorsNeedUpdate||o.lineDistancesNeedUpdate||i)&&d(o,Dt.DYNAMIC_DRAW),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,o.lineDistancesNeedUpdate=!1,n.attributes&&B(n)):e instanceof THREE.PointCloud&&(n=h(e,o),i=n.attributes&&z(n),(o.verticesNeedUpdate||o.colorsNeedUpdate||e.sortParticles||i)&&p(o,Dt.DYNAMIC_DRAW,e),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,n.attributes&&B(n))}function z(t){for(var e in t.attributes)if(t.attributes[e].needsUpdate)return!0;return!1}function B(t){for(var e in t.attributes)t.attributes[e].needsUpdate=!1}function k(t,e){t instanceof THREE.Mesh||t instanceof THREE.PointCloud||t instanceof THREE.Line?N(e.__webglObjects,t):(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&O(e.__webglObjectsImmediate,t),delete t.__webglActive}function N(t,e){delete t[e.id]}function O(t,e){for(var r=t.length-1;r>=0;r--)t[r].object===e&&t.splice(r,1)}function I(t,e,r,i,n){Kt=0,i.needsUpdate&&(i.program&&Ge(i),It.initMaterial(i,e,r,n),i.needsUpdate=!1),i.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(It.maxMorphTargets)));var o=!1,a=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms;if(h.id!==Wt&&(Dt.useProgram(h.program),Wt=h.id,o=!0,a=!0,s=!0),i.id!==Xt&&(Xt===-1&&(s=!0),Xt=i.id,a=!0),(o||t!==qt)&&(Dt.uniformMatrix4fv(l.projectionMatrix,!1,t.projectionMatrix.elements),Ct&&Dt.uniform1f(l.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==qt&&(qt=t),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(Te.setFromMatrixPosition(t.matrixWorld),Dt.uniform3f(l.cameraPosition,Te.x,Te.y,Te.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&Dt.uniformMatrix4fv(l.viewMatrix,!1,t.matrixWorldInverse.elements)),i.skinning)if(n.bindMatrix&&null!==l.bindMatrix&&Dt.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&Dt.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Se&&n.skeleton&&n.skeleton.useVertexTexture){if(null!==l.boneTexture){var u=tt();Dt.uniform1i(l.boneTexture,u),It.setTexture(n.skeleton.boneTexture,u)}null!==l.boneTextureWidth&&Dt.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&Dt.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)}else n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&Dt.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices);return a&&(r&&i.fog&&Y(c,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(Re&&(s=!0,ot(e),Re=!1),s?(Z(c,xe),Q(c,!0)):Q(c,!1)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&G(c,i),i instanceof THREE.LineBasicMaterial?W(c,i):i instanceof THREE.LineDashedMaterial?(W(c,i),j(c,i)):i instanceof THREE.PointCloudMaterial?X(c,i):i instanceof THREE.MeshPhongMaterial?q(c,i):i instanceof THREE.MeshLambertMaterial?K(c,i):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=t.near,c.mFar.value=t.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&J(c,e),et(i.uniformsList)),$(l,n),null!==l.modelMatrix&&Dt.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function G(t,e){t.opacity.value=e.opacity,It.gammaInput?t.diffuse.value.copyGammaToLinear(e.color):t.diffuse.value=e.color,t.map.value=e.map,t.lightMap.value=e.lightMap,t.specularMap.value=e.specularMap,t.alphaMap.value=e.alphaMap,e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));var r;if(e.map?r=e.map:e.specularMap?r=e.specularMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.alphaMap&&(r=e.alphaMap),void 0!==r){var i=r.offset,n=r.repeat;t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,It.gammaInput,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.combine.value=e.combine,t.useRefract.value=e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping}function W(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function j(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function X(t,e){t.psColor.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size,t.scale.value=yt.height/2,t.map.value=e.map}function Y(t,e){t.fogColor.value=e.color,e instanceof THREE.Fog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e instanceof THREE.FogExp2&&(t.fogDensity.value=e.density)}function q(t,e){t.shininess.value=e.shininess,It.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive),t.specular.value.copyGammaToLinear(e.specular)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive,t.specular.value=e.specular),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function K(t,e){It.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function Z(t,e){t.ambientLightColor.value=e.ambient,t.directionalLightColor.value=e.directional.colors,t.directionalLightDirection.value=e.directional.positions,t.pointLightColor.value=e.point.colors,t.pointLightPosition.value=e.point.positions,t.pointLightDistance.value=e.point.distances,t.spotLightColor.value=e.spot.colors,t.spotLightPosition.value=e.spot.positions,t.spotLightDistance.value=e.spot.distances,t.spotLightDirection.value=e.spot.directions,t.spotLightAngleCos.value=e.spot.anglesCos,t.spotLightExponent.value=e.spot.exponents,t.hemisphereLightSkyColor.value=e.hemi.skyColors,t.hemisphereLightGroundColor.value=e.hemi.groundColors,t.hemisphereLightDirection.value=e.hemi.positions}function Q(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLightColor.needsUpdate=e,t.directionalLightDirection.needsUpdate=e,t.pointLightColor.needsUpdate=e,t.pointLightPosition.needsUpdate=e,t.pointLightDistance.needsUpdate=e,t.spotLightColor.needsUpdate=e,t.spotLightPosition.needsUpdate=e,t.spotLightDistance.needsUpdate=e,t.spotLightDirection.needsUpdate=e,t.spotLightAngleCos.needsUpdate=e,t.spotLightExponent.needsUpdate=e,t.hemisphereLightSkyColor.needsUpdate=e,t.hemisphereLightGroundColor.needsUpdate=e,t.hemisphereLightDirection.needsUpdate=e}function J(t,e){if(t.shadowMatrix)for(var r=0,i=0,n=e.length;i<n;i++){var o=e[i];o.castShadow&&((o instanceof THREE.SpotLight||o instanceof THREE.DirectionalLight&&!o.shadowCascade)&&(t.shadowMap.value[r]=o.shadowMap,t.shadowMapSize.value[r]=o.shadowMapSize,t.shadowMatrix.value[r]=o.shadowMatrix,t.shadowDarkness.value[r]=o.shadowDarkness,t.shadowBias.value[r]=o.shadowBias,r++))}}function $(t,e){Dt.uniformMatrix4fv(t.modelViewMatrix,!1,e._modelViewMatrix.elements),t.normalMatrix&&Dt.uniformMatrix3fv(t.normalMatrix,!1,e._normalMatrix.elements)}function tt(){var t=Kt;return t>=He&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+He),Kt+=1,t}function et(t){for(var e,r,i,n=0,o=t.length;n<o;n++){var a=t[n][0];if(a.needsUpdate!==!1){var s=a.type,h=a.value,l=t[n][1];switch(s){case"1i":Dt.uniform1i(l,h);break;case"1f":Dt.uniform1f(l,h);break;case"2f":Dt.uniform2f(l,h[0],h[1]);break;case"3f":Dt.uniform3f(l,h[0],h[1],h[2]);break;case"4f":Dt.uniform4f(l,h[0],h[1],h[2],h[3]);break;case"1iv":Dt.uniform1iv(l,h);break;case"3iv":Dt.uniform3iv(l,h);break;case"1fv":Dt.uniform1fv(l,h);break;case"2fv":Dt.uniform2fv(l,h);break;case"3fv":Dt.uniform3fv(l,h);break;case"4fv":Dt.uniform4fv(l,h);break;case"Matrix3fv":Dt.uniformMatrix3fv(l,!1,h);break;case"Matrix4fv":Dt.uniformMatrix4fv(l,!1,h);break;case"i":Dt.uniform1i(l,h);break;case"f":Dt.uniform1f(l,h);break;case"v2":Dt.uniform2f(l,h.x,h.y);break;case"v3":Dt.uniform3f(l,h.x,h.y,h.z);break;case"v4":Dt.uniform4f(l,h.x,h.y,h.z,h.w);break;case"c":Dt.uniform3f(l,h.r,h.g,h.b);break;case"iv1":Dt.uniform1iv(l,h);break;case"iv":Dt.uniform3iv(l,h);break;case"fv1":Dt.uniform1fv(l,h);break;case"fv":Dt.uniform3fv(l,h);break;case"v2v":void 0===a._array&&(a._array=new Float32Array(2*h.length));for(var c=0,u=h.length;c<u;c++)i=2*c,a._array[i]=h[c].x,a._array[i+1]=h[c].y;Dt.uniform2fv(l,a._array);break;case"v3v":void 0===a._array&&(a._array=new Float32Array(3*h.length));for(var c=0,u=h.length;c<u;c++)i=3*c,a._array[i]=h[c].x,a._array[i+1]=h[c].y,a._array[i+2]=h[c].z;Dt.uniform3fv(l,a._array);break;case"v4v":void 0===a._array&&(a._array=new Float32Array(4*h.length));for(var c=0,u=h.length;c<u;c++)i=4*c,a._array[i]=h[c].x,a._array[i+1]=h[c].y,a._array[i+2]=h[c].z,a._array[i+3]=h[c].w;Dt.uniform4fv(l,a._array);break;case"m3":Dt.uniformMatrix3fv(l,!1,h.elements);break;case"m3v":void 0===a._array&&(a._array=new Float32Array(9*h.length));for(var c=0,u=h.length;c<u;c++)h[c].flattenToArrayOffset(a._array,9*c);Dt.uniformMatrix3fv(l,!1,a._array);break;case"m4":Dt.uniformMatrix4fv(l,!1,h.elements);break;case"m4v":void 0===a._array&&(a._array=new Float32Array(16*h.length))
;for(var c=0,u=h.length;c<u;c++)h[c].flattenToArrayOffset(a._array,16*c);Dt.uniformMatrix4fv(l,!1,a._array);break;case"t":if(e=h,r=tt(),Dt.uniform1i(l,r),!e)continue;e instanceof THREE.CubeTexture||e.image instanceof Array&&6===e.image.length?ct(e,r):e instanceof THREE.WebGLRenderTargetCube?ut(e,r):It.setTexture(e,r);break;case"tv":void 0===a._array&&(a._array=[]);for(var c=0,u=a.value.length;c<u;c++)a._array[c]=tt();Dt.uniform1iv(l,a._array);for(var c=0,u=a.value.length;c<u;c++)e=a.value[c],r=a._array[c],e&&It.setTexture(e,r);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+s)}}}}function rt(t,e){t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t._normalMatrix.getNormalMatrix(t._modelViewMatrix)}function it(t,e,r,i){t[e]=r.r*r.r*i,t[e+1]=r.g*r.g*i,t[e+2]=r.b*r.b*i}function nt(t,e,r,i){t[e]=r.r*i,t[e+1]=r.g*i,t[e+2]=r.b*i}function ot(t){var e,r,i,n,o,a,s,h,l,c=0,u=0,f=0,E=xe,p=E.directional.colors,d=E.directional.positions,m=E.point.colors,g=E.point.positions,v=E.point.distances,T=E.spot.colors,y=E.spot.positions,R=E.spot.distances,x=E.spot.directions,H=E.spot.anglesCos,_=E.spot.exponents,b=E.hemi.skyColors,w=E.hemi.groundColors,M=E.hemi.positions,S=0,C=0,A=0,L=0,P=0,F=0,D=0,U=0,V=0,z=0,B=0,k=0;for(e=0,r=t.length;e<r;e++)if(i=t[e],!i.onlyShadow)if(n=i.color,s=i.intensity,l=i.distance,i instanceof THREE.AmbientLight){if(!i.visible)continue;It.gammaInput?(c+=n.r*n.r,u+=n.g*n.g,f+=n.b*n.b):(c+=n.r,u+=n.g,f+=n.b)}else if(i instanceof THREE.DirectionalLight){if(P+=1,!i.visible)continue;ye.setFromMatrixPosition(i.matrixWorld),Te.setFromMatrixPosition(i.target.matrixWorld),ye.sub(Te),ye.normalize(),V=3*S,d[V]=ye.x,d[V+1]=ye.y,d[V+2]=ye.z,It.gammaInput?it(p,V,n,s*s):nt(p,V,n,s),S+=1}else if(i instanceof THREE.PointLight){if(F+=1,!i.visible)continue;z=3*C,It.gammaInput?it(m,z,n,s*s):nt(m,z,n,s),Te.setFromMatrixPosition(i.matrixWorld),g[z]=Te.x,g[z+1]=Te.y,g[z+2]=Te.z,v[C]=l,C+=1}else if(i instanceof THREE.SpotLight){if(D+=1,!i.visible)continue;B=3*A,It.gammaInput?it(T,B,n,s*s):nt(T,B,n,s),Te.setFromMatrixPosition(i.matrixWorld),y[B]=Te.x,y[B+1]=Te.y,y[B+2]=Te.z,R[A]=l,ye.copy(Te),Te.setFromMatrixPosition(i.target.matrixWorld),ye.sub(Te),ye.normalize(),x[B]=ye.x,x[B+1]=ye.y,x[B+2]=ye.z,H[A]=Math.cos(i.angle),_[A]=i.exponent,A+=1}else if(i instanceof THREE.HemisphereLight){if(U+=1,!i.visible)continue;ye.setFromMatrixPosition(i.matrixWorld),ye.normalize(),k=3*L,M[k]=ye.x,M[k+1]=ye.y,M[k+2]=ye.z,o=i.color,a=i.groundColor,It.gammaInput?(h=s*s,it(b,k,o,h),it(w,k,a,h)):(nt(b,k,o,s),nt(w,k,a,s)),L+=1}for(e=3*S,r=Math.max(p.length,3*P);e<r;e++)p[e]=0;for(e=3*C,r=Math.max(m.length,3*F);e<r;e++)m[e]=0;for(e=3*A,r=Math.max(T.length,3*D);e<r;e++)T[e]=0;for(e=3*L,r=Math.max(b.length,3*U);e<r;e++)b[e]=0;for(e=3*L,r=Math.max(w.length,3*U);e<r;e++)w[e]=0;E.directional.length=S,E.point.length=C,E.spot.length=A,E.hemi.length=L,E.ambient[0]=c,E.ambient[1]=u,E.ambient[2]=f}function at(t){t!==se&&(Dt.lineWidth(t),se=t)}function st(t,e,r){ne!==t&&(t?Dt.enable(Dt.POLYGON_OFFSET_FILL):Dt.disable(Dt.POLYGON_OFFSET_FILL),ne=t),!t||oe===e&&ae===r||(Dt.polygonOffset(e,r),oe=e,ae=r)}function ht(t,e,r){r?(Dt.texParameteri(t,Dt.TEXTURE_WRAP_S,mt(e.wrapS)),Dt.texParameteri(t,Dt.TEXTURE_WRAP_T,mt(e.wrapT)),Dt.texParameteri(t,Dt.TEXTURE_MAG_FILTER,mt(e.magFilter)),Dt.texParameteri(t,Dt.TEXTURE_MIN_FILTER,mt(e.minFilter))):(Dt.texParameteri(t,Dt.TEXTURE_WRAP_S,Dt.CLAMP_TO_EDGE),Dt.texParameteri(t,Dt.TEXTURE_WRAP_T,Dt.CLAMP_TO_EDGE),Dt.texParameteri(t,Dt.TEXTURE_MAG_FILTER,dt(e.magFilter)),Dt.texParameteri(t,Dt.TEXTURE_MIN_FILTER,dt(e.minFilter))),Bt&&e.type!==THREE.FloatType&&(e.anisotropy>1||e.__oldAnisotropy)&&(Dt.texParameterf(t,Bt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,we)),e.__oldAnisotropy=e.anisotropy)}function lt(t,e){if(t.width<=e&&t.height<=e)return t;var r=Math.max(t.width,t.height),i=Math.floor(t.width*e/r),n=Math.floor(t.height*e/r),o=document.createElement("canvas");return o.width=i,o.height=n,o.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i,n),o}function ct(t,e){if(6===t.image.length)if(t.needsUpdate){t.image.__webglTextureCube||(t.addEventListener("dispose",Ve),t.image.__webglTextureCube=Dt.createTexture(),It.info.memory.textures++),Dt.activeTexture(Dt.TEXTURE0+e),Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,t.image.__webglTextureCube),Dt.pixelStorei(Dt.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var r=t instanceof THREE.CompressedTexture,i=[],n=0;n<6;n++)It.autoScaleCubemaps&&!r?i[n]=lt(t.image[n],be):i[n]=t.image[n];var o=i[0],a=THREE.Math.isPowerOfTwo(o.width)&&THREE.Math.isPowerOfTwo(o.height),s=mt(t.format),h=mt(t.type);ht(Dt.TEXTURE_CUBE_MAP,t,a);for(var n=0;n<6;n++)if(r)for(var l,c=i[n].mipmaps,u=0,f=c.length;u<f;u++)l=c[u],t.format!==THREE.RGBAFormat?Dt.compressedTexImage2D(Dt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,l.data):Dt.texImage2D(Dt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,s,h,l.data);else Dt.texImage2D(Dt.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,h,i[n]);t.generateMipmaps&&a&&Dt.generateMipmap(Dt.TEXTURE_CUBE_MAP),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Dt.activeTexture(Dt.TEXTURE0+e),Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,t.image.__webglTextureCube)}function ut(t,e){Dt.activeTexture(Dt.TEXTURE0+e),Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,t.__webglTexture)}function ft(t,e,r){Dt.bindFramebuffer(Dt.FRAMEBUFFER,t),Dt.framebufferTexture2D(Dt.FRAMEBUFFER,Dt.COLOR_ATTACHMENT0,r,e.__webglTexture,0)}function Et(t,e){Dt.bindRenderbuffer(Dt.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(Dt.renderbufferStorage(Dt.RENDERBUFFER,Dt.DEPTH_COMPONENT16,e.width,e.height),Dt.framebufferRenderbuffer(Dt.FRAMEBUFFER,Dt.DEPTH_ATTACHMENT,Dt.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(Dt.renderbufferStorage(Dt.RENDERBUFFER,Dt.DEPTH_STENCIL,e.width,e.height),Dt.framebufferRenderbuffer(Dt.FRAMEBUFFER,Dt.DEPTH_STENCIL_ATTACHMENT,Dt.RENDERBUFFER,t)):Dt.renderbufferStorage(Dt.RENDERBUFFER,Dt.RGBA4,e.width,e.height)}function pt(t){t instanceof THREE.WebGLRenderTargetCube?(Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,t.__webglTexture),Dt.generateMipmap(Dt.TEXTURE_CUBE_MAP),Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,null)):(Dt.bindTexture(Dt.TEXTURE_2D,t.__webglTexture),Dt.generateMipmap(Dt.TEXTURE_2D),Dt.bindTexture(Dt.TEXTURE_2D,null))}function dt(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?Dt.NEAREST:Dt.LINEAR}function mt(t){if(t===THREE.RepeatWrapping)return Dt.REPEAT;if(t===THREE.ClampToEdgeWrapping)return Dt.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return Dt.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return Dt.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return Dt.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return Dt.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return Dt.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return Dt.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return Dt.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return Dt.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return Dt.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return Dt.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return Dt.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return Dt.BYTE;if(t===THREE.ShortType)return Dt.SHORT;if(t===THREE.UnsignedShortType)return Dt.UNSIGNED_SHORT;if(t===THREE.IntType)return Dt.INT;if(t===THREE.UnsignedIntType)return Dt.UNSIGNED_INT;if(t===THREE.FloatType)return Dt.FLOAT;if(t===THREE.AlphaFormat)return Dt.ALPHA;if(t===THREE.RGBFormat)return Dt.RGB;if(t===THREE.RGBAFormat)return Dt.RGBA;if(t===THREE.LuminanceFormat)return Dt.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return Dt.LUMINANCE_ALPHA;if(t===THREE.AddEquation)return Dt.FUNC_ADD;if(t===THREE.SubtractEquation)return Dt.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return Dt.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return Dt.ZERO;if(t===THREE.OneFactor)return Dt.ONE;if(t===THREE.SrcColorFactor)return Dt.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return Dt.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return Dt.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return Dt.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return Dt.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return Dt.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return Dt.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return Dt.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return Dt.SRC_ALPHA_SATURATE;if(void 0!==kt){if(t===THREE.RGB_S3TC_DXT1_Format)return kt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return kt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return kt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return kt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function gt(t){if(Se&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024;var e=Dt.getParameter(Dt.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((e-20)/4),i=r;return void 0!==t&&t instanceof THREE.SkinnedMesh&&(i=Math.min(t.skeleton.bones.length,i))<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)"),i}function vt(t){for(var e=0,r=0,i=0,n=0,o=0,a=t.length;o<a;o++){var s=t[o];s.onlyShadow||s.visible===!1||(s instanceof THREE.DirectionalLight&&e++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&n++)}return{directional:e,point:r,spot:i,hemi:n}}function Tt(t){for(var e=0,r=0,i=t.length;r<i;r++){var n=t[r];n.castShadow&&(n instanceof THREE.SpotLight&&e++,n instanceof THREE.DirectionalLight&&!n.shadowCascade&&e++)}return e}console.log("THREE.WebGLRenderer",THREE.REVISION),t=t||{};var yt=void 0!==t.canvas?t.canvas:document.createElement("canvas"),Rt=void 0!==t.context?t.context:null,xt=void 0!==t.precision?t.precision:"highp",Ht=void 0!==t.alpha&&t.alpha,_t=void 0===t.depth||t.depth,bt=void 0===t.stencil||t.stencil,wt=void 0!==t.antialias&&t.antialias,Mt=void 0===t.premultipliedAlpha||t.premultipliedAlpha,St=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,Ct=void 0!==t.logarithmicDepthBuffer&&t.logarithmicDepthBuffer,At=new THREE.Color(0),Lt=0,Pt=[],Ft=[];this.domElement=yt,this.context=null,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Dt,Ut,Vt,zt,Bt,kt,Nt,Ot,It=this,Gt=[],Wt=null,jt=null,Xt=-1,Yt=null,qt=null,Kt=0,Zt=-1,Qt=-1,Jt=-1,$t=-1,te=-1,ee=-1,re=-1,ie=-1,ne=null,oe=null,ae=null,se=null,he=0,le=0,ce=yt.width,ue=yt.height,fe=0,Ee=0,pe=new Uint8Array(16),de=new Uint8Array(16),me=new THREE.Frustum,ge=new THREE.Matrix4,ve=new THREE.Matrix4,Te=new THREE.Vector3,ye=new THREE.Vector3,Re=!0,xe={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var t={alpha:Ht,depth:_t,stencil:bt,antialias:wt,premultipliedAlpha:Mt,preserveDrawingBuffer:St};if(null===(Dt=Rt||yt.getContext("webgl",t)||yt.getContext("experimental-webgl",t)))throw"Error creating WebGL context."}catch(t){console.error(t)}Ut=Dt.getExtension("OES_texture_float"),Vt=Dt.getExtension("OES_texture_float_linear"),zt=Dt.getExtension("OES_standard_derivatives"),Bt=Dt.getExtension("EXT_texture_filter_anisotropic")||Dt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Dt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),kt=Dt.getExtension("WEBGL_compressed_texture_s3tc")||Dt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Dt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Nt=Dt.getExtension("OES_element_index_uint"),null===Ut&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===zt&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===Bt&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===kt&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===Nt&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===Dt.getShaderPrecisionFormat&&(Dt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),Ct&&(Ot=Dt.getExtension("EXT_frag_depth"))}(),function(){Dt.clearColor(0,0,0,1),Dt.clearDepth(1),Dt.clearStencil(0),Dt.enable(Dt.DEPTH_TEST),Dt.depthFunc(Dt.LEQUAL),Dt.frontFace(Dt.CCW),Dt.cullFace(Dt.BACK),Dt.enable(Dt.CULL_FACE),Dt.enable(Dt.BLEND),Dt.blendEquation(Dt.FUNC_ADD),Dt.blendFunc(Dt.SRC_ALPHA,Dt.ONE_MINUS_SRC_ALPHA),Dt.viewport(he,le,ce,ue),Dt.clearColor(At.r,At.g,At.b,Lt)}(),this.context=Dt;var He=Dt.getParameter(Dt.MAX_TEXTURE_IMAGE_UNITS),_e=Dt.getParameter(Dt.MAX_VERTEX_TEXTURE_IMAGE_UNITS),be=(Dt.getParameter(Dt.MAX_TEXTURE_SIZE),Dt.getParameter(Dt.MAX_CUBE_MAP_TEXTURE_SIZE)),we=Bt?Dt.getParameter(Bt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Me=_e>0,Se=Me&&Ut,Ce=(kt&&Dt.getParameter(Dt.COMPRESSED_TEXTURE_FORMATS),Dt.getShaderPrecisionFormat(Dt.VERTEX_SHADER,Dt.HIGH_FLOAT)),Ae=Dt.getShaderPrecisionFormat(Dt.VERTEX_SHADER,Dt.MEDIUM_FLOAT),Le=(Dt.getShaderPrecisionFormat(Dt.VERTEX_SHADER,Dt.LOW_FLOAT),Dt.getShaderPrecisionFormat(Dt.FRAGMENT_SHADER,Dt.HIGH_FLOAT)),Pe=Dt.getShaderPrecisionFormat(Dt.FRAGMENT_SHADER,Dt.MEDIUM_FLOAT),Fe=(Dt.getShaderPrecisionFormat(Dt.FRAGMENT_SHADER,Dt.LOW_FLOAT),Ce.precision>0&&Le.precision>0),De=Ae.precision>0&&Pe.precision>0;"highp"!==xt||Fe||(De?(xt="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(xt="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==xt||De||(xt="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")),this.getContext=function(){return Dt},this.supportsVertexTextures=function(){return Me},this.supportsFloatTextures=function(){return Ut},this.supportsStandardDerivatives=function(){return zt},this.supportsCompressedTextureS3TC=function(){return kt},this.getMaxAnisotropy=function(){return we},this.getPrecision=function(){return xt},this.setSize=function(t,e,r){yt.width=t*this.devicePixelRatio,yt.height=e*this.devicePixelRatio,r!==!1&&(yt.style.width=t+"px",yt.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){he=t*this.devicePixelRatio,le=e*this.devicePixelRatio,ce=r*this.devicePixelRatio,ue=i*this.devicePixelRatio,Dt.viewport(he,le,ce,ue)},this.setScissor=function(t,e,r,i){Dt.scissor(t*this.devicePixelRatio,e*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(t){t?Dt.enable(Dt.SCISSOR_TEST):Dt.disable(Dt.SCISSOR_TEST)},this.setClearColor=function(t,e){At.set(t),Lt=void 0!==e?e:1,Dt.clearColor(At.r,At.g,At.b,Lt)},this.setClearColorHex=function(t,e){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return At},this.getClearAlpha=function(){return Lt},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=Dt.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=Dt.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Dt.STENCIL_BUFFER_BIT),Dt.clear(i)},this.clearColor=function(){Dt.clear(Dt.COLOR_BUFFER_BIT)},this.clearDepth=function(){Dt.clear(Dt.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Dt.clear(Dt.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.addPostPlugin=function(t){t.init(this),this.renderPluginsPost.push(t)},this.addPrePlugin=function(t){t.init(this),this.renderPluginsPre.push(t)},this.updateShadowMap=function(t,e){Wt=null,Jt=-1,re=-1,ie=-1,Yt=-1,Xt=-1,Re=!0,Zt=-1,Qt=-1,We(t),this.shadowMapPlugin.update(t,e)};var Ue=function(t){var e=t.target;e.removeEventListener("dispose",Ue),Ne(e)},Ve=function(t){var e=t.target;e.removeEventListener("dispose",Ve),Oe(e),It.info.memory.textures--},ze=function(t){var e=t.target;e.removeEventListener("dispose",ze),Ie(e),It.info.memory.textures--},Be=function(t){var e=t.target;e.removeEventListener("dispose",Be),Ge(e)},ke=function(t){if(void 0!==t.__webglVertexBuffer&&Dt.deleteBuffer(t.__webglVertexBuffer),void 0!==t.__webglNormalBuffer&&Dt.deleteBuffer(t.__webglNormalBuffer),void 0!==t.__webglTangentBuffer&&Dt.deleteBuffer(t.__webglTangentBuffer),void 0!==t.__webglColorBuffer&&Dt.deleteBuffer(t.__webglColorBuffer),void 0!==t.__webglUVBuffer&&Dt.deleteBuffer(t.__webglUVBuffer),void 0!==t.__webglUV2Buffer&&Dt.deleteBuffer(t.__webglUV2Buffer),void 0!==t.__webglSkinIndicesBuffer&&Dt.deleteBuffer(t.__webglSkinIndicesBuffer),void 0!==t.__webglSkinWeightsBuffer&&Dt.deleteBuffer(t.__webglSkinWeightsBuffer),void 0!==t.__webglFaceBuffer&&Dt.deleteBuffer(t.__webglFaceBuffer),void 0!==t.__webglLineBuffer&&Dt.deleteBuffer(t.__webglLineBuffer),void 0!==t.__webglLineDistanceBuffer&&Dt.deleteBuffer(t.__webglLineDistanceBuffer),void 0!==t.__webglCustomAttributesList)for(var e in t.__webglCustomAttributesList)Dt.deleteBuffer(t.__webglCustomAttributesList[e].buffer);It.info.memory.geometries--},Ne=function(t){if(t.__webglInit=void 0,t instanceof THREE.BufferGeometry){var e=t.attributes;for(var r in e)void 0!==e[r].buffer&&Dt.deleteBuffer(e[r].buffer);It.info.memory.geometries--}else if(void 0!==t.geometryGroups)for(var i=0,n=t.geometryGroupsList.length;i<n;i++){var o=t.geometryGroupsList[i];if(void 0!==o.numMorphTargets)for(var a=0,s=o.numMorphTargets;a<s;a++)Dt.deleteBuffer(o.__webglMorphTargetsBuffers[a]);if(void 0!==o.numMorphNormals)for(var a=0,s=o.numMorphNormals;a<s;a++)Dt.deleteBuffer(o.__webglMorphNormalsBuffers[a]);ke(o)}else ke(t)},Oe=function(t){if(t.image&&t.image.__webglTextureCube)Dt.deleteTexture(t.image.__webglTextureCube);else{if(!t.__webglInit)return;t.__webglInit=!1,Dt.deleteTexture(t.__webglTexture)}},Ie=function(t){if(t&&t.__webglTexture)if(Dt.deleteTexture(t.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var e=0;e<6;e++)Dt.deleteFramebuffer(t.__webglFramebuffer[e]),Dt.deleteRenderbuffer(t.__webglRenderbuffer[e]);else Dt.deleteFramebuffer(t.__webglFramebuffer),Dt.deleteRenderbuffer(t.__webglRenderbuffer)},Ge=function(t){var e=t.program.program;if(void 0!==e){t.program=void 0;var r,i,n,o=!1;for(r=0,i=Gt.length;r<i;r++)if(n=Gt[r],n.program===e){n.usedTimes--,0===n.usedTimes&&(o=!0);break}if(o===!0){var a=[];for(r=0,i=Gt.length;r<i;r++)n=Gt[r],n.program!==e&&a.push(n);Gt=a,Dt.deleteProgram(e),It.info.memory.programs--}}};this.renderBufferImmediate=function(t,e,r){if(T(),t.hasPositions&&!t.__webglVertexBuffer&&(t.__webglVertexBuffer=Dt.createBuffer()),t.hasNormals&&!t.__webglNormalBuffer&&(t.__webglNormalBuffer=Dt.createBuffer()),t.hasUvs&&!t.__webglUvBuffer&&(t.__webglUvBuffer=Dt.createBuffer()),t.hasColors&&!t.__webglColorBuffer&&(t.__webglColorBuffer=Dt.createBuffer()),t.hasPositions&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglVertexBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,t.positionArray,Dt.DYNAMIC_DRAW),y(e.attributes.position),Dt.vertexAttribPointer(e.attributes.position,3,Dt.FLOAT,!1,0,0)),t.hasNormals){if(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,o,a,s,h,l,c,u,f,E,p,d,m,g=3*t.count;for(m=0;m<g;m+=9)d=t.normalArray,a=d[m],l=d[m+1],f=d[m+2],s=d[m+3],c=d[m+4],E=d[m+5],h=d[m+6],u=d[m+7],p=d[m+8],i=(a+s+h)/3,n=(l+c+u)/3,o=(f+E+p)/3,d[m]=i,d[m+1]=n,d[m+2]=o,d[m+3]=i,d[m+4]=n,d[m+5]=o,d[m+6]=i,d[m+7]=n,d[m+8]=o}Dt.bufferData(Dt.ARRAY_BUFFER,t.normalArray,Dt.DYNAMIC_DRAW),y(e.attributes.normal),Dt.vertexAttribPointer(e.attributes.normal,3,Dt.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglUvBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,t.uvArray,Dt.DYNAMIC_DRAW),y(e.attributes.uv),Dt.vertexAttribPointer(e.attributes.uv,2,Dt.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,t.__webglColorBuffer),Dt.bufferData(Dt.ARRAY_BUFFER,t.colorArray,Dt.DYNAMIC_DRAW),y(e.attributes.color),Dt.vertexAttribPointer(e.attributes.color,3,Dt.FLOAT,!1,0,0)),R(),Dt.drawArrays(Dt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,o){if(i.visible!==!1){var a=I(t,e,r,i,o),s=a.attributes,h=n.attributes,l=!1,c=i.wireframe?1:0,u=16777215*n.id+2*a.id+c;if(u!==Yt&&(Yt=u,l=!0),l&&T(),o instanceof THREE.Mesh){var f=h.index;if(f){var E,p;f.array instanceof Uint32Array?(E=Dt.UNSIGNED_INT,p=4):(E=Dt.UNSIGNED_SHORT,p=2);var d=n.offsets;if(0===d.length)l&&(v(i,s,h,0),Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,f.buffer)),Dt.drawElements(Dt.TRIANGLES,f.array.length,E,0),It.info.render.calls++,It.info.render.vertices+=f.array.length,It.info.render.faces+=f.array.length/3;else{l=!0;for(var m=0,g=d.length;m<g;m++){var y=d[m].index;l&&(v(i,s,h,y),Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,f.buffer)),Dt.drawElements(Dt.TRIANGLES,d[m].count,E,d[m].start*p),It.info.render.calls++,It.info.render.vertices+=d[m].count,It.info.render.faces+=d[m].count/3}}}else{l&&v(i,s,h,0);var R=n.attributes.position;Dt.drawArrays(Dt.TRIANGLES,0,R.array.length/3),It.info.render.calls++,It.info.render.vertices+=R.array.length/3,It.info.render.faces+=R.array.length/9}}else if(o instanceof THREE.PointCloud){l&&v(i,s,h,0);var R=h.position;Dt.drawArrays(Dt.POINTS,0,R.array.length/3),It.info.render.calls++,It.info.render.points+=R.array.length/3}else if(o instanceof THREE.Line){var x=o.type===THREE.LineStrip?Dt.LINE_STRIP:Dt.LINES;at(i.linewidth);var f=h.index;if(f){var E,p;f.array instanceof Uint32Array?(E=Dt.UNSIGNED_INT,p=4):(E=Dt.UNSIGNED_SHORT,p=2);var d=n.offsets;if(0===d.length)l&&(v(i,s,h,0),Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,f.buffer)),Dt.drawElements(x,f.array.length,E,0),It.info.render.calls++,It.info.render.vertices+=f.array.length;else{d.length>1&&(l=!0);for(var m=0,g=d.length;m<g;m++){var y=d[m].index;l&&(v(i,s,h,y),Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,f.buffer)),Dt.drawElements(x,d[m].count,E,d[m].start*p),It.info.render.calls++,It.info.render.vertices+=d[m].count}}}else{l&&v(i,s,h,0);var R=h.position;Dt.drawArrays(x,0,R.array.length/3),It.info.render.calls++,It.info.render.points+=R.array.length/3}}}},this.renderBuffer=function(t,e,r,i,n,o){if(i.visible!==!1){var a,s,h,l=I(t,e,r,i,o),c=l.attributes,u=!1,f=i.wireframe?1:0,E=16777215*n.id+2*l.id+f;if(E!==Yt&&(Yt=E,u=!0),u&&T(),!i.morphTargets&&c.position>=0?u&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglVertexBuffer),y(c.position),Dt.vertexAttribPointer(c.position,3,Dt.FLOAT,!1,0,0)):o.morphTargetBase&&x(i,n,o),u){if(n.__webglCustomAttributesList)for(s=0,h=n.__webglCustomAttributesList.length;s<h;s++)a=n.__webglCustomAttributesList[s],c[a.buffer.belongsToAttribute]>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,a.buffer),y(c[a.buffer.belongsToAttribute]),Dt.vertexAttribPointer(c[a.buffer.belongsToAttribute],a.size,Dt.FLOAT,!1,0,0));c.color>=0&&(o.geometry.colors.length>0||o.geometry.faces.length>0?(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglColorBuffer),y(c.color),Dt.vertexAttribPointer(c.color,3,Dt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Dt.vertexAttrib3fv(c.color,i.defaultAttributeValues.color)),c.normal>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglNormalBuffer),y(c.normal),Dt.vertexAttribPointer(c.normal,3,Dt.FLOAT,!1,0,0)),c.tangent>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglTangentBuffer),y(c.tangent),Dt.vertexAttribPointer(c.tangent,4,Dt.FLOAT,!1,0,0)),c.uv>=0&&(o.geometry.faceVertexUvs[0]?(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglUVBuffer),y(c.uv),Dt.vertexAttribPointer(c.uv,2,Dt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Dt.vertexAttrib2fv(c.uv,i.defaultAttributeValues.uv)),c.uv2>=0&&(o.geometry.faceVertexUvs[1]?(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglUV2Buffer),y(c.uv2),Dt.vertexAttribPointer(c.uv2,2,Dt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Dt.vertexAttrib2fv(c.uv2,i.defaultAttributeValues.uv2)),i.skinning&&c.skinIndex>=0&&c.skinWeight>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),y(c.skinIndex),Dt.vertexAttribPointer(c.skinIndex,4,Dt.FLOAT,!1,0,0),Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),y(c.skinWeight),Dt.vertexAttribPointer(c.skinWeight,4,Dt.FLOAT,!1,0,0)),c.lineDistance>=0&&(Dt.bindBuffer(Dt.ARRAY_BUFFER,n.__webglLineDistanceBuffer),y(c.lineDistance),Dt.vertexAttribPointer(c.lineDistance,1,Dt.FLOAT,!1,0,0))}if(R(),o instanceof THREE.Mesh){var p=n.__typeArray===Uint32Array?Dt.UNSIGNED_INT:Dt.UNSIGNED_SHORT;i.wireframe?(at(i.wireframeLinewidth),u&&Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Dt.drawElements(Dt.LINES,n.__webglLineCount,p,0)):(u&&Dt.bindBuffer(Dt.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Dt.drawElements(Dt.TRIANGLES,n.__webglFaceCount,p,0)),It.info.render.calls++,It.info.render.vertices+=n.__webglFaceCount,It.info.render.faces+=n.__webglFaceCount/3}else if(o instanceof THREE.Line){var d=o.type===THREE.LineStrip?Dt.LINE_STRIP:Dt.LINES;at(i.linewidth),Dt.drawArrays(d,0,n.__webglLineCount),It.info.render.calls++}else o instanceof THREE.PointCloud&&(Dt.drawArrays(Dt.POINTS,0,n.__webglParticleCount),It.info.render.calls++,It.info.render.points+=n.__webglParticleCount)}},this.render=function(t,e,r,i){function n(t){t instanceof THREE.SkinnedMesh&&t.skeleton.update();for(var e=0,r=t.children.length;e<r;e++)n(t.children[e])}if(e instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var o,a,s,h,l,c=t.__lights,u=t.fog;for(Xt=-1,qt=null,Re=!0,t.autoUpdate===!0&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),n(t),e.matrixWorldInverse.getInverse(e.matrixWorld),ge.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),me.setFromMatrix(ge),We(t),Pt.length=0,Ft.length=0,w(t,t,e),It.sortObjects===!0&&(Pt.sort(H),Ft.sort(_)),M(this.renderPluginsPre,t,e),It.info.render.calls=0,It.info.render.vertices=0,It.info.render.faces=0,It.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=t.__webglObjectsImmediate,o=0,a=l.length;o<a;o++)s=l[o],h=s.object,h.visible&&(rt(h,e),A(s));if(t.overrideMaterial){var f=t.overrideMaterial;this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),st(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),S(Pt,e,c,u,!0,f),S(Ft,e,c,u,!0,f),C(t.__webglObjectsImmediate,"",e,c,u,!1,f)}else{var f=null;this.setBlending(THREE.NoBlending),S(Pt,e,c,u,!1,f),C(t.__webglObjectsImmediate,"opaque",e,c,u,!1,f),S(Ft,e,c,u,!0,f),C(t.__webglObjectsImmediate,"transparent",e,c,u,!0,f)}M(this.renderPluginsPost,t,e),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&pt(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(t,e,r,i,n){var o=I(t,e,r,i,n);Yt=-1,It.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,Dt,me):n.render(function(t){It.renderBufferImmediate(t,o,i)})};var We=function(t){for(t.__webglObjects||(t.__webglObjects={},t.__webglObjectsImmediate=[]);t.__objectsAdded.length;)P(t.__objectsAdded[0],t),t.__objectsAdded.splice(0,1);for(;t.__objectsRemoved.length;)k(t.__objectsRemoved[0],t),t.__objectsRemoved.splice(0,1)};this.initMaterial=function(t,e,r,i){t.addEventListener("dispose",Be);var n,o,a,s,h,l,c;if(t instanceof THREE.MeshDepthMaterial?c="depth":t instanceof THREE.MeshNormalMaterial?c="normal":t instanceof THREE.MeshBasicMaterial?c="basic":t instanceof THREE.MeshLambertMaterial?c="lambert":t instanceof THREE.MeshPhongMaterial?c="phong":t instanceof THREE.LineBasicMaterial?c="basic":t instanceof THREE.LineDashedMaterial?c="dashed":t instanceof THREE.PointCloudMaterial&&(c="particle_basic"),c){var u=THREE.ShaderLib[c];t.__webglShader={uniforms:THREE.UniformsUtils.clone(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}}else t.__webglShader={uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};s=vt(e),l=Tt(e),h=gt(i),a={precision:xt,supportsVertexTextures:Me,map:!!t.map,envMap:!!t.envMap,lightMap:!!t.lightMap,bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,vertexColors:t.vertexColors,fog:r,useFog:t.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:Ct,skinning:t.skinning,maxBones:h,useVertexTexture:Se&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&l>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:t.alphaTest,metal:t.metal,wrapAround:t.wrapAround,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide};var f=[];c?f.push(c):(f.push(t.fragmentShader),f.push(t.vertexShader));for(var E in t.defines)f.push(E),f.push(t.defines[E]);for(var p in a)f.push(p),f.push(a[p]);for(var d,m=f.join(),p=0,g=Gt.length;p<g;p++){var v=Gt[p];if(v.code===m){d=v,d.usedTimes++;break}}void 0===d&&(d=new THREE.WebGLProgram(this,m,t,a),Gt.push(d),It.info.memory.programs=Gt.length),t.program=d;var T=t.program.attributes;if(t.morphTargets){t.numSupportedMorphTargets=0;var y,R="morphTarget";for(o=0;o<this.maxMorphTargets;o++)y=R+o,T[y]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;var y,R="morphNormal";for(o=0;o<this.maxMorphNormals;o++)y=R+o,T[y]>=0&&t.numSupportedMorphNormals++}t.uniformsList=[];for(n in t.__webglShader.uniforms){var x=t.program.uniforms[n];x&&t.uniformsList.push([t.__webglShader.uniforms[n],x])}},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?Dt.disable(Dt.CULL_FACE):(e===THREE.FrontFaceDirectionCW?Dt.frontFace(Dt.CW):Dt.frontFace(Dt.CCW),t===THREE.CullFaceBack?Dt.cullFace(Dt.BACK):t===THREE.CullFaceFront?Dt.cullFace(Dt.FRONT):Dt.cullFace(Dt.FRONT_AND_BACK),Dt.enable(Dt.CULL_FACE))},this.setMaterialFaces=function(t){var e=t.side===THREE.DoubleSide,r=t.side===THREE.BackSide;Zt!==e&&(e?Dt.disable(Dt.CULL_FACE):Dt.enable(Dt.CULL_FACE),Zt=e),Qt!==r&&(r?Dt.frontFace(Dt.CW):Dt.frontFace(Dt.CCW),Qt=r)},this.setDepthTest=function(t){re!==t&&(t?Dt.enable(Dt.DEPTH_TEST):Dt.disable(Dt.DEPTH_TEST),re=t)},this.setDepthWrite=function(t){ie!==t&&(Dt.depthMask(t),ie=t)},this.setBlending=function(t,e,r,i){t!==Jt&&(t===THREE.NoBlending?Dt.disable(Dt.BLEND):t===THREE.AdditiveBlending?(Dt.enable(Dt.BLEND),Dt.blendEquation(Dt.FUNC_ADD),Dt.blendFunc(Dt.SRC_ALPHA,Dt.ONE)):t===THREE.SubtractiveBlending?(Dt.enable(Dt.BLEND),Dt.blendEquation(Dt.FUNC_ADD),Dt.blendFunc(Dt.ZERO,Dt.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(Dt.enable(Dt.BLEND),Dt.blendEquation(Dt.FUNC_ADD),Dt.blendFunc(Dt.ZERO,Dt.SRC_COLOR)):t===THREE.CustomBlending?Dt.enable(Dt.BLEND):(Dt.enable(Dt.BLEND),Dt.blendEquationSeparate(Dt.FUNC_ADD,Dt.FUNC_ADD),Dt.blendFuncSeparate(Dt.SRC_ALPHA,Dt.ONE_MINUS_SRC_ALPHA,Dt.ONE,Dt.ONE_MINUS_SRC_ALPHA)),Jt=t),t===THREE.CustomBlending?(e!==$t&&(Dt.blendEquation(mt(e)),$t=e),r===te&&i===ee||(Dt.blendFunc(mt(r),mt(i)),te=r,ee=i)):($t=null,te=null,ee=null)},this.setTexture=function(t,e){if(t.needsUpdate){t.__webglInit||(t.__webglInit=!0,t.addEventListener("dispose",Ve),t.__webglTexture=Dt.createTexture(),It.info.memory.textures++),Dt.activeTexture(Dt.TEXTURE0+e),
Dt.bindTexture(Dt.TEXTURE_2D,t.__webglTexture),Dt.pixelStorei(Dt.UNPACK_FLIP_Y_WEBGL,t.flipY),Dt.pixelStorei(Dt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Dt.pixelStorei(Dt.UNPACK_ALIGNMENT,t.unpackAlignment);var r=t.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=mt(t.format),o=mt(t.type);ht(Dt.TEXTURE_2D,t,i);var a,s=t.mipmaps;if(t instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)a=s[h],Dt.texImage2D(Dt.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);t.generateMipmaps=!1}else Dt.texImage2D(Dt.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);else if(t instanceof THREE.CompressedTexture)for(var h=0,l=s.length;h<l;h++)a=s[h],t.format!==THREE.RGBAFormat?Dt.compressedTexImage2D(Dt.TEXTURE_2D,h,n,a.width,a.height,0,a.data):Dt.texImage2D(Dt.TEXTURE_2D,h,n,a.width,a.height,0,n,o,a.data);else if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)a=s[h],Dt.texImage2D(Dt.TEXTURE_2D,h,n,n,o,a);t.generateMipmaps=!1}else Dt.texImage2D(Dt.TEXTURE_2D,0,n,n,o,t.image);t.generateMipmaps&&i&&Dt.generateMipmap(Dt.TEXTURE_2D),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Dt.activeTexture(Dt.TEXTURE0+e),Dt.bindTexture(Dt.TEXTURE_2D,t.__webglTexture)},this.setRenderTarget=function(t){var e=t instanceof THREE.WebGLRenderTargetCube;if(t&&!t.__webglFramebuffer){void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",ze),t.__webglTexture=Dt.createTexture(),It.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),i=mt(t.format),n=mt(t.type);if(e){t.__webglFramebuffer=[],t.__webglRenderbuffer=[],Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,t.__webglTexture),ht(Dt.TEXTURE_CUBE_MAP,t,r);for(var o=0;o<6;o++)t.__webglFramebuffer[o]=Dt.createFramebuffer(),t.__webglRenderbuffer[o]=Dt.createRenderbuffer(),Dt.texImage2D(Dt.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,t.width,t.height,0,i,n,null),ft(t.__webglFramebuffer[o],t,Dt.TEXTURE_CUBE_MAP_POSITIVE_X+o),Et(t.__webglRenderbuffer[o],t);r&&Dt.generateMipmap(Dt.TEXTURE_CUBE_MAP)}else t.__webglFramebuffer=Dt.createFramebuffer(),t.shareDepthFrom?t.__webglRenderbuffer=t.shareDepthFrom.__webglRenderbuffer:t.__webglRenderbuffer=Dt.createRenderbuffer(),Dt.bindTexture(Dt.TEXTURE_2D,t.__webglTexture),ht(Dt.TEXTURE_2D,t,r),Dt.texImage2D(Dt.TEXTURE_2D,0,i,t.width,t.height,0,i,n,null),ft(t.__webglFramebuffer,t,Dt.TEXTURE_2D),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?Dt.framebufferRenderbuffer(Dt.FRAMEBUFFER,Dt.DEPTH_ATTACHMENT,Dt.RENDERBUFFER,t.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&Dt.framebufferRenderbuffer(Dt.FRAMEBUFFER,Dt.DEPTH_STENCIL_ATTACHMENT,Dt.RENDERBUFFER,t.__webglRenderbuffer):Et(t.__webglRenderbuffer,t),r&&Dt.generateMipmap(Dt.TEXTURE_2D);e?Dt.bindTexture(Dt.TEXTURE_CUBE_MAP,null):Dt.bindTexture(Dt.TEXTURE_2D,null),Dt.bindRenderbuffer(Dt.RENDERBUFFER,null),Dt.bindFramebuffer(Dt.FRAMEBUFFER,null)}var a,s,h,l,c;t?(a=e?t.__webglFramebuffer[t.activeCubeFace]:t.__webglFramebuffer,s=t.width,h=t.height,l=0,c=0):(a=null,s=ce,h=ue,l=he,c=le),a!==jt&&(Dt.bindFramebuffer(Dt.FRAMEBUFFER,a),Dt.viewport(l,c,s,h),jt=a),fe=s,Ee=h},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(t,e,r){this.width=t,this.height=e,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width=t,this.height=e},clone:function(){var t=new THREE.WebGLRenderTarget(this.width,this.height);return t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.format=this.format,t.type=this.type,t.depthBuffer=this.depthBuffer,t.stencilBuffer=this.stencilBuffer,t.generateMipmaps=this.generateMipmaps,t.shareDepthFrom=this.shareDepthFrom,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var t=0,e=function(t){var e,r,i=[];for(var n in t)(e=t[n])!==!1&&(r="#define "+n+" "+e,i.push(r));return i.join("\n")},r=function(t,e,r){for(var i={},n=0,o=r.length;n<o;n++){var a=r[n];i[a]=t.getUniformLocation(e,a)}return i},i=function(t,e,r){for(var i={},n=0,o=r.length;n<o;n++){var a=r[n];i[a]=t.getAttribLocation(e,a)}return i};return function(n,o,a,s){var h=n,l=h.context,c=a.defines,u=a.__webglShader.uniforms,f=a.attributes,E=a.__webglShader.vertexShader,p=a.__webglShader.fragmentShader,d=a.index0AttributeName;void 0===d&&s.morphTargets===!0&&(d="position");var m="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var g,v,T=e(c),y=l.createProgram();a instanceof THREE.RawShaderMaterial?(g="",v=""):(g=["precision "+s.precision+" float;","precision "+s.precision+" int;",T,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",T,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var R=new THREE.WebGLShader(l,l.VERTEX_SHADER,g+E),x=new THREE.WebGLShader(l,l.FRAGMENT_SHADER,v+p);l.attachShader(y,R),l.attachShader(y,x),void 0!==d&&l.bindAttribLocation(y,0,d),l.linkProgram(y),l.getProgramParameter(y,l.LINK_STATUS)===!1&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",l.getProgramParameter(y,l.VALIDATE_STATUS)),console.error("gl.getError()",l.getError())),""!==l.getProgramInfoLog(y)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",l.getProgramInfoLog(y)),l.deleteShader(R),l.deleteShader(x);var H=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];s.useVertexTexture?(H.push("boneTexture"),H.push("boneTextureWidth"),H.push("boneTextureHeight")):H.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&H.push("logDepthBufFC");for(var _ in u)H.push(_);this.uniforms=r(l,y,H),H=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var b=0;b<s.maxMorphTargets;b++)H.push("morphTarget"+b);for(var b=0;b<s.maxMorphNormals;b++)H.push("morphNormal"+b);for(var w in f)H.push(w);return this.attributes=i(l,y,H),this.id=t++,this.code=o,this.usedTimes=1,this.program=y,this.vertexShader=R,this.fragmentShader=x,this}}(),THREE.WebGLShader=function(){var t=function(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")};return function(e,r,i){var n=e.createShader(r);return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(n)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e.getShaderInfoLog(n)),console.warn(t(i))),n}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(t){this.positionWorld.copy(t.positionWorld),this.positionScreen.copy(t.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0};THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(t,e,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,e);return n.load(t,function(t){o.image=t,o.needsUpdate=!0,r&&r(o)},void 0,function(t){i&&i(t)}),o.sourceFile=t,o},loadTextureCube:function(t,e,r,i){var n=[],o=new THREE.ImageLoader;o.crossOrigin=this.crossOrigin;var a=new THREE.CubeTexture(n,e);a.flipY=!1;for(var s=0,h=0,l=t.length;h<l;++h)!function(e){o.load(t[e],function(t){a.images[e]=t,6===(s+=1)&&(a.needsUpdate=!0,r&&r(a))})}(h);return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(t,e){var r=function(t,e){return[t[0]-e[0],t[1]-e[1],t[2]-e[2]]};e|=1;var i=t.width,n=t.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(t,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;c<i;c++)for(var u=0;u<n;u++){var f=u-1<0?0:u-1,E=u+1>n-1?n-1:u+1,p=c-1<0?0:c-1,d=c+1>i-1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*e];m.push([-1,0,s[4*(u*i+p)]/255*e]),m.push([-1,-1,s[4*(f*i+p)]/255*e]),m.push([0,-1,s[4*(f*i+c)]/255*e]),m.push([1,-1,s[4*(f*i+d)]/255*e]),m.push([1,0,s[4*(u*i+d)]/255*e]),m.push([1,1,s[4*(E*i+d)]/255*e]),m.push([0,1,s[4*(E*i+c)]/255*e]),m.push([-1,1,s[4*(E*i+p)]/255*e]);for(var v=[],T=m.length,y=0;y<T;y++){var R=m[y],x=m[(y+1)%T];R=r(R,g),x=r(x,g),v.push(function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]}(function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}(R,x)))}for(var H=[0,0,0],y=0;y<v.length;y++)H[0]+=v[y][0],H[1]+=v[y][1],H[2]+=v[y][2];H[0]/=v.length,H[1]/=v.length,H[2]/=v.length;var _=4*(u*i+c);l[_]=(H[0]+1)/2*255|0,l[_+1]=(H[1]+1)/2*255|0,l[_+2]=255*H[2]|0,l[_+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(t,e,r){for(var i=t*e,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;h<i;h++)n[3*h]=o,n[3*h+1]=a,n[3*h+2]=s;var l=new THREE.DataTexture(n,t,e,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Object3D,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(t){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(t){var e=t.familyName.toLowerCase(),r=this;r.faces[e]=r.faces[e]||{},r.faces[e][t.cssFontWeight]=r.faces[e][t.cssFontWeight]||{},r.faces[e][t.cssFontWeight][t.cssFontStyle]=t;r.faces[e][t.cssFontWeight][t.cssFontStyle]=t;return t},drawText:function(t){var e,r=this.getFace(),i=this.size/r.resolution,n=0,o=String(t).split(""),a=o.length,s=[];for(e=0;e<a;e++){var h=new THREE.Path,l=this.extractGlyphPoints(o[e],r,i,n,h);n+=l.offset,s.push(l.path)}return{paths:s,offset:n/2}},extractGlyphPoints:function(t,e,r,i,n){var o,a,s,h,l,c,u,f,E,p,d,m,g,v,T,y,R,x,H=[],_=e.glyphs[t]||e.glyphs["?"];if(_){if(_.o)for(h=_._cachedOutline||(_._cachedOutline=_.o.split(" ")),l=h.length,c=r,u=r,o=0;o<l;)switch(h[o++]){case"m":f=h[o++]*c+i,E=h[o++]*u,n.moveTo(f,E);break;case"l":f=h[o++]*c+i,E=h[o++]*u,n.lineTo(f,E);break;case"q":if(p=h[o++]*c+i,d=h[o++]*u,v=h[o++]*c+i,T=h[o++]*u,n.quadraticCurveTo(v,T,p,d),x=H[H.length-1])for(m=x.x,g=x.y,a=1,s=this.divisions;a<=s;a++){var b=a/s;THREE.Shape.Utils.b2(b,m,v,p),THREE.Shape.Utils.b2(b,g,T,d)}break;case"b":if(p=h[o++]*c+i,d=h[o++]*u,v=h[o++]*c+i,T=h[o++]*u,y=h[o++]*c+i,R=h[o++]*u,n.bezierCurveTo(v,T,y,R,p,d),x=H[H.length-1])for(m=x.x,g=x.y,a=1,s=this.divisions;a<=s;a++){var b=a/s;THREE.Shape.Utils.b3(b,m,v,y,p),THREE.Shape.Utils.b3(b,g,T,R,d)}}return{offset:_.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(t,e){e=e||{};var r=void 0!==e.size?e.size:100,i=void 0!==e.curveSegments?e.curveSegments:4,n=void 0!==e.font?e.font:"helvetiker",o=void 0!==e.weight?e.weight:"normal",a=void 0!==e.style?e.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=o,THREE.FontUtils.style=a;for(var s=THREE.FontUtils.drawText(t),h=s.paths,l=[],c=0,u=h.length;c<u;c++)Array.prototype.push.apply(l,h[c].toShapes());return l},function(t){var e=function(t,e){var n=t.length;if(n<3)return null;var o,a,s,h=[],l=[],c=[];if(r(t)>0)for(a=0;a<n;a++)l[a]=a;else for(a=0;a<n;a++)l[a]=n-1-a;var u=n,f=2*u;for(a=u-1;u>2;){if(f--<=0)return console.log("Warning, unable to triangulate polygon!"),e?c:h;if(o=a,u<=o&&(o=0),a=o+1,u<=a&&(a=0),s=a+1,u<=s&&(s=0),i(t,o,a,s,u,l)){var E,p,d,m,g;for(E=l[o],p=l[a],d=l[s],h.push([t[E],t[p],t[d]]),c.push([l[o],l[a],l[s]]),m=a,g=a+1;g<u;m++,g++)l[m]=l[g];u--,f=2*u}}return e?c:h},r=function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r},i=function(t,e,r,i,n,o){var a,s,h,l,c,u,f,E,p;if(s=t[o[e]].x,h=t[o[e]].y,l=t[o[r]].x,c=t[o[r]].y,u=t[o[i]].x,f=t[o[i]].y,1e-10>(l-s)*(f-h)-(c-h)*(u-s))return!1;var d,m,g,v,T,y,R,x,H,_,b,w,M,S,C;for(d=u-l,m=f-c,g=s-u,v=h-f,T=l-s,y=c-h,a=0;a<n;a++)if(E=t[o[a]].x,p=t[o[a]].y,!(E===s&&p===h||E===l&&p===c||E===u&&p===f)&&(R=E-s,x=p-h,H=E-l,_=p-c,b=E-u,w=p-f,C=d*_-m*H,M=T*x-y*R,S=g*w-v*b,C>=-1e-10&&S>=-1e-10&&M>=-1e-10))return!1;return!0};t.Triangulate=e,t.Triangulate.area=r}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(t){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(t){var e=this.getUtoTmapping(t);return this.getPoint(e)},THREE.Curve.prototype.getPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPoint(e/t));return r},THREE.Curve.prototype.getSpacedPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r},THREE.Curve.prototype.getLength=function(){var t=this.getLengths();return t[t.length-1]},THREE.Curve.prototype.getLengths=function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)e=this.getPoint(r/t),o+=e.distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(t,e){var r,i=this.getLengths(),n=0,o=i.length;r=e||t*i[o-1];for(var a,s=0,h=o-1;s<=h;)if(n=Math.floor(s+(h-s)/2),(a=i[n]-r)<0)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}if(n=h,i[n]==r){var l=n/(o-1);return l}var c=i[n],u=i[n+1],f=u-c,E=(r-c)/f,l=(n+E)/(o-1);return l},THREE.Curve.prototype.getTangent=function(t){var e=t-1e-4,r=t+1e-4;e<0&&(e=0),r>1&&(r=1);var i=this.getPoint(e);return this.getPoint(r).clone().sub(i).normalize()},THREE.Curve.prototype.getTangentAt=function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t,e,r,i,n){return 6*t*t-6*t+(3*t*t-4*t+1)+(-6*t*t+6*t)+(3*t*t-2*t)},interpolate:function(t,e,r,i,n){var o=.5*(r-t),a=.5*(i-e),s=n*n;return(2*e-2*r+o+a)*(n*s)+(-3*e+3*r-2*o-a)*s+o*n+e}},THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),t.prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){for(var e,r,i=t*this.getLength(),n=this.getCurveLengths(),o=0;o<n.length;){if(n[o]>=i){e=n[o]-i,r=this.curves[o];var a=1-e/r.getLength();return r.getPointAt(a)}o++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var t,e=[],r=0,i=this.curves.length;for(t=0;t<i;t++)r+=this.curves[t].getLength(),e.push(r);return this.cacheLengths=e,e},THREE.CurvePath.prototype.getBoundingBox=function(){var t,e,r,i,n,o,a=this.getPoints();t=e=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;h<l;h++)s=a[h],s.x>t?t=s.x:s.x<i&&(i=s.x),s.y>e?e=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<o&&(o=s.z)),c.add(s);var f={minX:i,minY:n,maxX:t,maxY:e};return u&&(f.maxZ=r,f.minZ=o),f},THREE.CurvePath.prototype.createPointsGeometry=function(t){var e=this.getPoints(t,!0);return this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){var e=this.getSpacedPoints(t,!0);return this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0;r<t.length;r++)e.vertices.push(new THREE.Vector3(t[r].x,t[r].y,t[r].z||0));return e},THREE.CurvePath.prototype.addWrapPath=function(t){this.bends.push(t)},THREE.CurvePath.prototype.getTransformedPoints=function(t,e){var r,i,n=this.getPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(t,e){var r,i,n=this.getSpacedPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(t,e){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=t.length;r<i;r++){n=t[r],o=n.x,a=n.y,s=o/h.maxX,s=e.getUtoTmapping(s,o);var l=e.getPoint(s),c=e.getTangent(s);c.set(-c.y,c.x).multiplyScalar(a),n.x=l.x+c.x,n.y=l.y+c.y}return t},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(t,e){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(t,e){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],o=i[i.length-1],a=new THREE.LineCurve(new THREE.Vector2(n,o),new THREE.Vector2(t,e));this.curves.push(a),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,a=o[o.length-2],s=o[o.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,s),new THREE.Vector2(t,e),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],o=[new THREE.Vector2(i,n)];Array.prototype.push.apply(o,t);var a=new THREE.SplineCurve(o);this.curves.push(a),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],h=a[a.length-1];this.absarc(t+s,e+h,r,i,n,o)},THREE.Path.prototype.absarc=function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,o,a){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(t+h,e+l,r,i,n,o,a)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(t,e,r,i,n,o,a);this.curves.push(h);var l=h.getPoint(1);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(t,e){t||(t=40);for(var r=[],i=0;i<t;i++)r.push(this.getPoint(i/t));return r},THREE.Path.prototype.getPoints=function(t,e){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(t,e);t=t||12;var r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g,v,T,y=[];for(r=0,i=this.actions.length;r<i;r++)switch(n=this.actions[r],o=n.action,a=n.args,o){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:y.push(new THREE.Vector2(a[0],a[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=a[2],h=a[3],u=a[0],f=a[1],y.length>0?(d=y[y.length-1],E=d.x,p=d.y):(d=this.actions[r-1].args,E=d[d.length-2],p=d[d.length-1]),m=1;m<=t;m++)g=m/t,v=THREE.Shape.Utils.b2(g,E,u,s),T=THREE.Shape.Utils.b2(g,p,f,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=a[4],h=a[5],u=a[0],f=a[1],l=a[2],c=a[3],y.length>0?(d=y[y.length-1],E=d.x,p=d.y):(d=this.actions[r-1].args,E=d[d.length-2],p=d[d.length-1]),m=1;m<=t;m++)g=m/t,v=THREE.Shape.Utils.b3(g,E,u,l,s),T=THREE.Shape.Utils.b3(g,p,f,c,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.CSPLINE_THRU:d=this.actions[r-1].args;var R=new THREE.Vector2(d[d.length-2],d[d.length-1]),x=[R],H=t*a[0].length;x=x.concat(a[0]);var _=new THREE.SplineCurve(x);for(m=1;m<=H;m++)y.push(_.getPointAt(m/H));break;case THREE.PathActions.ARC:var b,w=a[0],M=a[1],S=a[2],C=a[3],A=a[4],L=!!a[5],P=A-C,F=2*t;for(m=1;m<=F;m++)g=m/F,L||(g=1-g),b=C+g*P,v=w+S*Math.cos(b),T=M+S*Math.sin(b),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.ELLIPSE:var b,w=a[0],M=a[1],D=a[2],U=a[3],C=a[4],A=a[5],L=!!a[6],P=A-C,F=2*t;for(m=1;m<=F;m++)g=m/F,L||(g=1-g),b=C+g*P,v=w+D*Math.cos(b),T=M+U*Math.sin(b),y.push(new THREE.Vector2(v,T))}var V=y[y.length-1];return Math.abs(V.x-y[0].x)<1e-10&&Math.abs(V.y-y[0].y)<1e-10&&y.splice(y.length-1,1),e&&y.push(y[0]),y},THREE.Path.prototype.toShapes=function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,e.push(o)}return e}var i=function(t){var e,r,i,n,o,a=[],s=new THREE.Path;for(e=0,r=t.length;e<r;e++)i=t[e],o=i.args,n=i.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(a.push(s),s=new THREE.Path),s[n].apply(s,o);return 0!=s.actions.length&&a.push(s),a}(this.actions);if(0==i.length)return[];if(e===!0)return r(i);var n,o,a,s=[];if(1==i.length)return o=i[0],a=new THREE.Shape,a.actions=o.actions,a.curves=o.curves,s.push(a),s;var h=!THREE.Shape.Utils.isClockWise(i[0].getPoints());h=t?!h:h;var l,c=[],u=[],f=[],E=0;u[E]=void 0,f[E]=[];var p,d;for(p=0,d=i.length;p<d;p++)o=i[p],l=o.getPoints(),n=THREE.Shape.Utils.isClockWise(l),n=t?!n:n,n?(!h&&u[E]&&E++,u[E]={s:new THREE.Shape,p:l},u[E].s.actions=o.actions,u[E].s.curves=o.curves,h&&E++,f[E]=[]):f[E].push({h:o,p:l[0]});if(!u[0])return r(i);if(u.length>1){for(var m=!1,g=[],v=0,T=u.length;v<T;v++)c[v]=[];for(var v=0,T=u.length;v<T;v++)for(var y=(u[v],f[v]),R=0;R<y.length;R++){for(var x=y[R],H=!0,_=0;_<u.length;_++)(function(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],h=s.x-a.x,l=s.y-a.y;if(Math.abs(l)>1e-10){if(l<0&&(a=e[o],h=-h,s=e[n],l=-l),t.y<a.y||t.y>s.y)continue;if(t.y==a.y){if(t.x==a.x)return!0}else{var c=l*(t.x-a.x)-h*(t.y-a.y);if(0==c)return!0;if(c<0)continue;i=!i}}else{if(t.y!=a.y)continue;if(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x)return!0}}return i})(x.p,u[_].p)&&(v!=_&&g.push({froms:v,tos:_,hole:R}),H?(H=!1,c[_].push(x)):m=!0);H&&c[v].push(x)}g.length>0&&(m||(f=c))}var b,w,M;for(p=0,d=u.length;p<d;p++)for(a=u[p].s,s.push(a),b=f[p],w=0,M=b.length;w<M;w++)a.holes.push(b[w].h);return s},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(t){return new THREE.ExtrudeGeometry(this,t)},THREE.Shape.prototype.makeGeometry=function(t){return new THREE.ShapeGeometry(this,t)},THREE.Shape.prototype.getPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedPoints(t,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedSpacedPoints(t,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getTransformedPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.useSpacedPoints?this.extractAllSpacedPoints(t):this.extractAllPoints(t)},THREE.Shape.prototype.extractAllSpacedPoints=function(t){return{shape:this.getTransformedSpacedPoints(t),holes:this.getSpacedPointsHoles(t)}},THREE.Shape.Utils={triangulateShape:function(t,e){function r(t,e,r){
return t.x!=e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function i(t,e,i,n,o){var a=e.x-t.x,s=e.y-t.y,h=n.x-i.x,l=n.y-i.y,c=t.x-i.x,u=t.y-i.y,f=s*h-a*l,E=s*c-a*u;if(Math.abs(f)>1e-10){var p;if(f>0){if(E<0||E>f)return[];if((p=l*c-h*u)<0||p>f)return[]}else{if(E>0||E<f)return[];if((p=l*c-h*u)>0||p<f)return[]}if(0==p)return!o||0!=E&&E!=f?[t]:[];if(p==f)return!o||0!=E&&E!=f?[e]:[];if(0==E)return[i];if(E==f)return[n];var d=p/f;return[{x:t.x+d*a,y:t.y+d*s}]}if(0!=E||l*c!=h*u)return[];var m=0==a&&0==s,g=0==h&&0==l;if(m&&g)return t.x!=i.x||t.y!=i.y?[]:[t];if(m)return r(i,n,t)?[t]:[];if(g)return r(t,e,i)?[i]:[];var v,T,y,R,x,H,_,b;return 0!=a?(t.x<e.x?(v=t,y=t.x,T=e,R=e.x):(v=e,y=e.x,T=t,R=t.x),i.x<n.x?(x=i,_=i.x,H=n,b=n.x):(x=n,_=n.x,H=i,b=i.x)):(t.y<e.y?(v=t,y=t.y,T=e,R=e.y):(v=e,y=e.y,T=t,R=t.y),i.y<n.y?(x=i,_=i.y,H=n,b=n.y):(x=n,_=n.y,H=i,b=i.y)),y<=_?R<_?[]:R==_?o?[]:[x]:R<=b?[x,T]:[x,H]:y>b?[]:y==b?o?[]:[v]:R<=b?[v,T]:[v,H]}function n(t,e,r,i){var n=e.x-t.x,o=e.y-t.y,a=r.x-t.x,s=r.y-t.y,h=i.x-t.x,l=i.y-t.y,c=n*s-o*a,u=n*l-o*h;if(Math.abs(c)>1e-10){var f=h*s-l*a;return c>0?u>=0&&f>=0:u>=0||f>=0}return u>0}for(var o,a,s,h,l,c,u={},f=t.concat(),E=0,p=e.length;E<p;E++)Array.prototype.push.apply(f,e[E]);for(o=0,a=f.length;o<a;o++)l=f[o].x+":"+f[o].y,void 0!==u[l]&&console.log("Duplicate point",l),u[l]=o;var d=function(t,e){for(var r,o,a,s,h,l,c,u,f,E,p,d=t.concat(),m=[],g=[],v=0,T=e.length;v<T;v++)m.push(v);for(var y=0,R=2*m.length;m.length>0;){if(--R<0){console.log("Infinite Loop! Holes left:"+m.length+", Probably Hole outside Shape!");break}for(a=y;a<d.length;a++){s=d[a],o=-1;for(var v=0;v<m.length;v++)if(l=m[v],c=s.x+":"+s.y+":"+l,void 0===g[c]){r=e[l];for(var x=0;x<r.length;x++)if(h=r[x],function(t,e){var i=d.length-1,o=t-1;o<0&&(o=i);var a=t+1;a>i&&(a=0);var s=n(d[t],d[o],d[a],r[e]);if(!s)return!1;var h=r.length-1,l=e-1;l<0&&(l=h);var c=e+1;return c>h&&(c=0),!!(s=n(r[e],r[l],r[c],d[t]))}(a,x)&&!function(t,e){var r,n,o;for(r=0;r<d.length;r++)if(n=r+1,n%=d.length,o=i(t,e,d[r],d[n],!0),o.length>0)return!0;return!1}(s,h)&&!function(t,r){var n,o,a,s,h;for(n=0;n<m.length;n++)for(o=e[m[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,h=i(t,r,o[a],o[s],!0),h.length>0)return!0;return!1}(s,h)){o=x,m.splice(v,1),u=d.slice(0,a+1),f=d.slice(a),E=r.slice(o),p=r.slice(0,o+1),d=u.concat(E).concat(p).concat(f),y=a;break}if(o>=0)break;g[c]=!0}if(o>=0)break}}return d}(t,e),m=THREE.FontUtils.Triangulate(d,!1);for(o=0,a=m.length;o<a;o++)for(h=m[o],s=0;s<3;s++)l=h[s].x+":"+h[s].y,void 0!==(c=u[l])&&(h[s]=c);return m.concat()},isClockWise:function(t){return THREE.FontUtils.Triangulate.area(t)<0},b2p0:function(t,e){var r=1-t;return r*r*e},b2p1:function(t,e){return 2*(1-t)*t*e},b2p2:function(t,e){return t*t*e},b2:function(t,e,r,i){return this.b2p0(t,e)+this.b2p1(t,r)+this.b2p2(t,i)},b3p0:function(t,e){var r=1-t;return r*r*r*e},b3p1:function(t,e){var r=1-t;return 3*r*r*t*e},b3p2:function(t,e){return 3*(1-t)*t*t*e},b3p3:function(t,e){return t*t*t*e},b3:function(t,e,r,i,n){return this.b3p0(t,e)+this.b3p1(t,r)+this.b3p2(t,i)+this.b3p3(t,n)}},THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(t){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e,r;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(e,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e,r;e=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(e,r);return i.normalize(),i},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(t){var e,r;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(e,r)},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e,r;e=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(e,r);return i.normalize(),i},THREE.SplineCurve=function(t){this.points=void 0==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(t){var e,r,i,n=new THREE.Vector2,o=[],a=this.points;return e=(a.length-1)*t,r=Math.floor(e),i=e-r,o[0]=0==r?r:r-1,o[1]=r,o[2]=r>a.length-2?a.length-1:r+1,o[3]=r>a.length-3?a.length-1:r+2,n.x=THREE.Curve.Utils.interpolate(a[o[0]].x,a[o[1]].x,a[o[2]].x,a[o[3]].x,i),n.y=THREE.Curve.Utils.interpolate(a[o[0]].y,a[o[1]].y,a[o[2]].y,a[o[3]].y,i),n},THREE.EllipseCurve=function(t,e,r,i,n,o,a){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(t){var e,r=this.aEndAngle-this.aStartAngle;r<0&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),e=this.aClockwise===!0?this.aEndAngle+(1-t)*(2*Math.PI-r):this.aStartAngle+t*r;var i=this.aX+this.xRadius*Math.cos(e),n=this.aY+this.yRadius*Math.sin(e);return new THREE.Vector2(i,n)},THREE.ArcCurve=function(t,e,r,i,n,o){THREE.EllipseCurve.call(this,t,e,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(t,e){this.v1=t,this.v2=e},function(t){var e=new THREE.Vector3;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(t,e,r){this.v0=t,this.v1=e,this.v2=r},function(t){var e,r,i;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(e,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},function(t){var e,r,i;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(e,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r,i,n=new THREE.Vector3,o=[],a=this.points;e=(a.length-1)*t,r=Math.floor(e),i=e-r,o[0]=0==r?r:r-1,o[1]=r,o[2]=r>a.length-2?a.length-1:r+1,o[3]=r>a.length-3?a.length-1:r+2;var s=a[o[0]],h=a[o[1]],l=a[o[2]],c=a[o[3]];return n.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,i),n.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,i),n.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,i),n}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r,i,n=new THREE.Vector3,o=[],a=this.points;return e=(a.length-0)*t,r=Math.floor(e),i=e-r,r+=r>0?0:(Math.floor(Math.abs(r)/a.length)+1)*a.length,o[0]=(r-1)%a.length,o[1]=r%a.length,o[2]=(r+1)%a.length,o[3]=(r+2)%a.length,n.x=THREE.Curve.Utils.interpolate(a[o[0]].x,a[o[1]].x,a[o[2]].x,a[o[3]].x,i),n.y=THREE.Curve.Utils.interpolate(a[o[0]].y,a[o[1]].y,a[o[2]].y,a[o[3]].y,i),n.z=THREE.Curve.Utils.interpolate(a[o[0]].z,a[o[1]].z,a[o[2]].z,a[o[3]].z,i),n}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(t){if(t.initialized!==!0){for(var e=0;e<t.hierarchy.length;e++){for(var r=0;r<t.hierarchy[e].keys.length;r++)if(t.hierarchy[e].keys[r].time<0&&(t.hierarchy[e].keys[r].time=0),void 0!==t.hierarchy[e].keys[r].rot&&!(t.hierarchy[e].keys[r].rot instanceof THREE.Quaternion)){var i=t.hierarchy[e].keys[r].rot;t.hierarchy[e].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(t.hierarchy[e].keys.length&&void 0!==t.hierarchy[e].keys[0].morphTargets){for(var n={},r=0;r<t.hierarchy[e].keys.length;r++)for(var o=0;o<t.hierarchy[e].keys[r].morphTargets.length;o++){var a=t.hierarchy[e].keys[r].morphTargets[o];n[a]=-1}t.hierarchy[e].usedMorphTargets=n;for(var r=0;r<t.hierarchy[e].keys.length;r++){var s={};for(var a in n){for(var o=0;o<t.hierarchy[e].keys[r].morphTargets.length;o++)if(t.hierarchy[e].keys[r].morphTargets[o]===a){s[a]=t.hierarchy[e].keys[r].morphTargetsInfluences[o];break}o===t.hierarchy[e].keys[r].morphTargets.length&&(s[a]=0)}t.hierarchy[e].keys[r].morphTargetsInfluences=s}}for(var r=1;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].time===t.hierarchy[e].keys[r-1].time&&(t.hierarchy[e].keys.splice(r,1),r--);for(var r=0;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].index=r}return t.initialized=!0,t}},parse:function(t){var e=function(t,r){r.push(t);for(var i=0;i<t.children.length;i++)e(t.children[i],r)},r=[];if(t instanceof THREE.SkinnedMesh)for(var i=0;i<t.skeleton.bones.length;i++)r.push(t.skeleton.bones[i]);else e(t,r);return r},play:function(t){this.animations.indexOf(t)===-1&&this.animations.push(t)},stop:function(t){var e=this.animations.indexOf(t);e!==-1&&this.animations.splice(e,1)},update:function(t){for(var e=0;e<this.animations.length;e++)this.animations[e].update(t)}},THREE.Animation=function(t,e){this.root=t,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(t),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(t,e){this.currentTime=void 0!==t?t:0,this.weight=void 0!==e?e:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},THREE.Animation.prototype.reset=function(){for(var t=0,e=this.hierarchy.length;t<e;t++){var r=this.hierarchy[t];r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix);for(var i=r.animationCache[this.data.name],n=0;n<3;n++){for(var o=this.keyTypes[n],a=this.data.hierarchy[t].keys[0],s=this.getNextKeyWith(o,t,1);s.time<this.currentTime&&s.index>a.index;)a=s,s=this.getNextKeyWith(o,t,s.index+1);i.prevKey[o]=a,i.nextKey[o]=s}}},THREE.Animation.prototype.update=function(){var t=[],e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(t,e){var r,i,n,a,s,h,l,c,u,f=[],E=[];return r=(t.length-1)*e,i=Math.floor(r),n=r-i,f[0]=0===i?i:i-1,f[1]=i,f[2]=i>t.length-2?i:i+1,f[3]=i>t.length-3?i:i+2,h=t[f[0]],l=t[f[1]],c=t[f[2]],u=t[f[3]],a=n*n,s=n*a,E[0]=o(h[0],l[0],c[0],u[0],n,a,s),E[1]=o(h[1],l[1],c[1],u[1],n,a,s),E[2]=o(h[2],l[2],c[2],u[2],n,a,s),E},o=function(t,e,r,i,n,o,a){var s=.5*(r-t),h=.5*(i-e);return(2*(e-r)+s+h)*a+(-3*(e-r)-2*s-h)*o+s*n+e};return function(o){if(this.isPlaying!==!1&&(this.currentTime+=o*this.timeScale,0!==this.weight)){var a=this.data.length;if(this.loop===!0&&this.currentTime>a)this.currentTime%=a,this.reset();else if(this.loop===!1&&this.currentTime>a)return void this.stop();for(var s=0,h=this.hierarchy.length;s<h;s++)for(var l=this.hierarchy[s],c=l.animationCache[this.data.name],u=0;u<3;u++){var f=this.keyTypes[u],E=c.prevKey[f],p=c.nextKey[f];if(p.time<=this.currentTime){for(E=this.data.hierarchy[s].keys[0],p=this.getNextKeyWith(f,s,1);p.time<this.currentTime&&p.index>E.index;)E=p,p=this.getNextKeyWith(f,s,p.index+1);c.prevKey[f]=E,c.nextKey[f]=p}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0;var d=(this.currentTime-E.time)/(p.time-E.time),m=E[f],g=p[f];if(d<0&&(d=0),d>1&&(d=1),"pos"===f){if(this.interpolationType===THREE.AnimationHandler.LINEAR)if(r.x=m[0]+(g[0]-m[0])*d,r.y=m[1]+(g[1]-m[1])*d,r.z=m[2]+(g[2]-m[2])*d,l instanceof THREE.Bone){var v=this.weight/(this.weight+l.accumulatedPosWeight);l.position.lerp(r,v),l.accumulatedPosWeight+=this.weight}else l.position.copy(r);else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){t[0]=this.getPrevKeyWith("pos",s,E.index-1).pos,t[1]=m,t[2]=g,t[3]=this.getNextKeyWith("pos",s,p.index+1).pos,d=.33*d+.33;var T=n(t,d),v=1;l instanceof THREE.Bone&&(v=this.weight/(this.weight+l.accumulatedPosWeight),l.accumulatedPosWeight+=this.weight);var y=l.position;if(y.x=y.x+(T[0]-y.x)*v,y.y=y.y+(T[1]-y.y)*v,y.z=y.z+(T[2]-y.z)*v,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var R=n(t,1.01*d);e.set(R[0],R[1],R[2]),e.sub(y),e.y=0,e.normalize();var x=Math.atan2(e.x,e.z);l.rotation.set(0,x,0)}}}else if("rot"===f)if(THREE.Quaternion.slerp(m,g,i,d),l instanceof THREE.Bone)if(0===l.accumulatedRotWeight)l.quaternion.copy(i),l.accumulatedRotWeight=this.weight;else{var v=this.weight/(this.weight+l.accumulatedRotWeight);THREE.Quaternion.slerp(l.quaternion,i,l.quaternion,v),l.accumulatedRotWeight+=this.weight}else l.quaternion.copy(i);else if("scl"===f)if(r.x=m[0]+(g[0]-m[0])*d,r.y=m[1]+(g[1]-m[1])*d,r.z=m[2]+(g[2]-m[2])*d,l instanceof THREE.Bone){var v=this.weight/(this.weight+l.accumulatedSclWeight);l.scale.lerp(r,v),l.accumulatedSclWeight+=this.weight}else l.scale.copy(r)}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[i.length-1]},THREE.KeyFrameAnimation=function(t){this.root=t.node,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var e=0,r=this.hierarchy.length;e<r;e++){var i=this.data.hierarchy[e].keys,n=this.data.hierarchy[e].sids,o=this.hierarchy[e];if(i.length&&n){for(var a=0;a<n.length;a++){var s=n[a],h=this.getNextKeyWith(s,e,0);h&&h.apply(s)}o.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(t){if(this.currentTime=void 0!==t?t:0,this.isPlaying===!1){this.isPlaying=!0;var e,r,i,n=this.hierarchy.length;for(e=0;e<n;e++){r=this.hierarchy[e],i=this.data.hierarchy[e],void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=r.matrix);var o=this.data.hierarchy[e].keys;o.length&&(i.animationCache.prevKey=o[0],i.animationCache.nextKey=o[1],this.startTime=Math.min(o[0].time,this.startTime),this.endTime=Math.max(o[o.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this);for(var t=0;t<this.data.hierarchy.length;t++){var e=this.hierarchy[t],r=this.data.hierarchy[t];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(e.matrix),e.matrix=i,delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(t){if(this.isPlaying!==!1){this.currentTime+=t*this.timeScale;var e=this.data.length;this.loop===!0&&this.currentTime>e&&(this.currentTime%=e),this.currentTime=Math.min(this.currentTime,e);for(var r=0,i=this.hierarchy.length;r<i;r++){var n=this.hierarchy[r],o=this.data.hierarchy[r],a=o.keys,s=o.animationCache;if(a.length){var h=s.prevKey,l=s.nextKey;if(l.time<=this.currentTime){for(;l.time<this.currentTime&&l.index>h.index;)h=l,l=a[h.index+1];s.prevKey=h,s.nextKey=l}l.time>=this.currentTime?h.interpolate(l,this.currentTime):h.interpolate(l,l.time),this.data.hierarchy[r].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(t))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(t))return i[r];return i[i.length-1]},THREE.MorphAnimation=function(t){this.mesh=t,this.frames=t.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var t=0,e=0;return function(r){if(this.isPlaying!==!1){this.currentTime+=r,this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var i=this.duration/this.frames,n=Math.floor(this.currentTime/i);n!=e&&(this.mesh.morphTargetInfluences[t]=0,this.mesh.morphTargetInfluences[e]=1,this.mesh.morphTargetInfluences[n]=0,t=e,e=n),this.mesh.morphTargetInfluences[n]=this.currentTime%i/i,this.mesh.morphTargetInfluences[t]=1-this.mesh.morphTargetInfluences[n]}}}()},THREE.BoxGeometry=function(t,e,r,i,n,o){function a(t,e,r,i,n,o,a,h){var l,c,u,f=s.widthSegments,E=s.heightSegments,p=n/2,d=o/2,m=s.vertices.length;"x"===t&&"y"===e||"y"===t&&"x"===e?l="z":"x"===t&&"z"===e||"z"===t&&"x"===e?(l="y",E=s.depthSegments):("z"===t&&"y"===e||"y"===t&&"z"===e)&&(l="x",f=s.depthSegments);var g=f+1,v=E+1,T=n/f,y=o/E,R=new THREE.Vector3;for(R[l]=a>0?1:-1,u=0;u<v;u++)for(c=0;c<g;c++){var x=new THREE.Vector3;x[t]=(c*T-p)*r,x[e]=(u*y-d)*i,x[l]=a,s.vertices.push(x)}for(u=0;u<E;u++)for(c=0;c<f;c++){var H=c+g*u,_=c+g*(u+1),b=c+1+g*(u+1),w=c+1+g*u,M=new THREE.Vector2(c/f,1-u/E),S=new THREE.Vector2(c/f,1-(u+1)/E),C=new THREE.Vector2((c+1)/f,1-(u+1)/E),A=new THREE.Vector2((c+1)/f,1-u/E),L=new THREE.Face3(H+m,_+m,w+m);L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([M,S,A]),L=new THREE.Face3(_+m,b+m,w+m),L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([S.clone(),C,A.clone()])}}THREE.Geometry.call(this),this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var s=this,h=t/2,l=e/2,c=r/2;a("z","y",-1,-1,r,e,h,0),a("z","y",1,-1,r,e,-h,1),a("x","z",1,1,t,r,l,2),a("x","z",1,-1,t,r,-l,3),a("x","y",1,-1,t,e,c,4),a("x","y",-1,-1,t,e,-c,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[],a=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(a),o.push(s),n=0;n<=e;n++){var h=new THREE.Vector3,l=r+n/e*i;h.x=t*Math.cos(l),h.y=t*Math.sin(l),this.vertices.push(h),o.push(new THREE.Vector2((h.x/t+1)/2,(h.y/t+1)/2))}var c=new THREE.Vector3(0,0,1);for(n=1;n<=e;n++)this.faces.push(new THREE.Face3(n,n+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),s.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(t,e,r,i,n,o){return console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(t,e,r,i,n,o)},THREE.CylinderGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o},t=void 0!==t?t:20,e=void 0!==e?e:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o&&o;var a,s,h=r/2,l=[],c=[];for(s=0;s<=n;s++){var u=[],f=[],E=s/n,p=E*(e-t)+t;for(a=0;a<=i;a++){var d=a/i,m=new THREE.Vector3;m.x=p*Math.sin(d*Math.PI*2),m.y=-E*r+h,m.z=p*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-E))}l.push(u),c.push(f)}var g,v,T=(e-t)/r;for(a=0;a<i;a++)for(0!==t?(g=this.vertices[l[0][a]].clone(),v=this.vertices[l[0][a+1]].clone()):(g=this.vertices[l[1][a]].clone(),v=this.vertices[l[1][a+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*T).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*T).normalize(),s=0;s<n;s++){var y=l[s][a],R=l[s+1][a],x=l[s+1][a+1],H=l[s][a+1],_=g.clone(),b=g.clone(),w=v.clone(),M=v.clone(),S=c[s][a].clone(),C=c[s+1][a].clone(),A=c[s+1][a+1].clone(),L=c[s][a+1].clone();this.faces.push(new THREE.Face3(y,R,H,[_,b,M])),this.faceVertexUvs[0].push([S,C,L]),this.faces.push(new THREE.Face3(R,x,H,[b.clone(),w,M.clone()])),this.faceVertexUvs[0].push([C.clone(),A,L.clone()])}if(o===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;a<i;a++){var y=l[0][a],R=l[0][a+1],x=this.vertices.length-1,_=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),S=c[0][a].clone(),C=c[0][a+1].clone(),A=new THREE.Vector2(C.x,0);this.faces.push(new THREE.Face3(y,R,x,[_,b,w])),this.faceVertexUvs[0].push([S,C,A])}if(o===!1&&e>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;a<i;a++){var y=l[s][a+1],R=l[s][a],x=this.vertices.length-1,_=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),S=c[s][a+1].clone(),C=c[s][a].clone(),A=new THREE.Vector2(C.x,1);this.faces.push(new THREE.Face3(y,R,x,[_,b,w])),this.faceVertexUvs[0].push([S,C,A])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(t,e){if(void 0===t)return void(t=[]);THREE.Geometry.call(this),t=t instanceof Array?t:[t],this.addShapeList(t,e),this.computeFaceNormals()},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++){var n=t[i];this.addShape(n,e)}},THREE.ExtrudeGeometry.prototype.addShape=function(t,e){function r(t,e,r){return e||console.log("die"),e.clone().multiplyScalar(r).add(t)}function i(t,e,r){var i,n,o=THREE.Math.sign,a=1,s=t.x-e.x,h=t.y-e.y,l=r.x-t.x,c=r.y-t.y,u=s*s+h*h,f=s*c-h*l;if(Math.abs(f)>1e-10){var E=Math.sqrt(u),p=Math.sqrt(l*l+c*c),d=e.x-h/E,m=e.y+s/E,g=r.x-c/p,v=r.y+l/p,T=((g-d)*c-(v-m)*l)/(s*c-h*l);i=d+s*T-t.x,n=m+h*T-t.y;var y=i*i+n*n;if(y<=2)return new THREE.Vector2(i,n);a=Math.sqrt(y/2)}else{var R=!1;s>1e-10?l>1e-10&&(R=!0):s<-1e-10?l<-1e-10&&(R=!0):o(h)==o(c)&&(R=!0),R?(i=-h,n=s,a=Math.sqrt(u)):(i=s,n=h,a=Math.sqrt(u/2))}return new THREE.Vector2(i/a,n/a)}function n(t,e){var r,i;for(j=t.length;--j>=0;){r=j,i=j-1,i<0&&(i=t.length-1);var n=0,o=T+2*m;for(n=0;n<o;n++){var a=I*n,h=I*(n+1);s(e+r+a,e+i+a,e+i+h,e+r+h,t,n,o,r,i)}}}function o(t,e,r){S.vertices.push(new THREE.Vector3(t,e,r))}function a(r,i,n,o){r+=C,i+=C,n+=C,S.faces.push(new THREE.Face3(r,i,n,null,null,x));var a=o?_.generateBottomUV(S,t,e,r,i,n):_.generateTopUV(S,t,e,r,i,n);S.faceVertexUvs[0].push(a)}function s(r,i,n,o,a,s,h,l,c){r+=C,i+=C,n+=C,o+=C,S.faces.push(new THREE.Face3(r,i,o,null,null,H)),S.faces.push(new THREE.Face3(i,n,o,null,null,H));var u=_.generateSideWallUV(S,t,a,e,r,i,n,o,s,h,l,c);S.faceVertexUvs[0].push([u[0],u[1],u[3]]),S.faceVertexUvs[0].push([u[1],u[2],u[3]])}var h,l,c,u,f,E=void 0!==e.amount?e.amount:100,p=void 0!==e.bevelThickness?e.bevelThickness:6,d=void 0!==e.bevelSize?e.bevelSize:p-2,m=void 0!==e.bevelSegments?e.bevelSegments:3,g=void 0===e.bevelEnabled||e.bevelEnabled,v=void 0!==e.curveSegments?e.curveSegments:12,T=void 0!==e.steps?e.steps:1,y=e.extrudePath,R=!1,x=e.material,H=e.extrudeMaterial,_=void 0!==e.UVGenerator?e.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;y&&(h=y.getSpacedPoints(T),R=!0,g=!1,l=void 0!==e.frames?e.frames:new THREE.TubeGeometry.FrenetFrames(y,T,!1),c=new THREE.Vector3,u=new THREE.Vector3,f=new THREE.Vector3),g||(m=0,p=0,d=0);var b,w,M,S=this,C=this.vertices.length,A=t.extractPoints(v),L=A.shape,P=A.holes,F=!THREE.Shape.Utils.isClockWise(L);if(F){for(L=L.reverse(),w=0,M=P.length;w<M;w++)b=P[w],THREE.Shape.Utils.isClockWise(b)&&(P[w]=b.reverse());F=!1}var D=THREE.Shape.Utils.triangulateShape(L,P),U=L;for(w=0,M=P.length;w<M;w++)b=P[w],L=L.concat(b);for(var V,z,B,k,N,O,I=L.length,G=D.length,W=(U.length,Math.PI,[]),j=0,X=U.length,Y=X-1,q=j+1;j<X;j++,Y++,q++){Y===X&&(Y=0),q===X&&(q=0);U[j],U[Y],U[q];W[j]=i(U[j],U[Y],U[q])}var K,Z=[],Q=W.concat();for(w=0,M=P.length;w<M;w++){for(b=P[w],K=[],j=0,X=b.length,Y=X-1,q=j+1;j<X;j++,Y++,q++)Y===X&&(Y=0),q===X&&(q=0),K[j]=i(b[j],b[Y],b[q]);Z.push(K),Q=Q.concat(K)}for(V=0;V<m;V++){for(B=V/m,k=p*(1-B),z=d*Math.sin(B*Math.PI/2),j=0,X=U.length;j<X;j++)N=r(U[j],W[j],z),o(N.x,N.y,-k);for(w=0,M=P.length;w<M;w++)for(b=P[w],K=Z[w],j=0,X=b.length;j<X;j++)N=r(b[j],K[j],z),o(N.x,N.y,-k)}for(z=d,j=0;j<I;j++)N=g?r(L[j],Q[j],z):L[j],R?(u.copy(l.normals[0]).multiplyScalar(N.x),c.copy(l.binormals[0]).multiplyScalar(N.y),f.copy(h[0]).add(u).add(c),o(f.x,f.y,f.z)):o(N.x,N.y,0);var J;for(J=1;J<=T;J++)for(j=0;j<I;j++)N=g?r(L[j],Q[j],z):L[j],R?(u.copy(l.normals[J]).multiplyScalar(N.x),c.copy(l.binormals[J]).multiplyScalar(N.y),f.copy(h[J]).add(u).add(c),o(f.x,f.y,f.z)):o(N.x,N.y,E/T*J);for(V=m-1;V>=0;V--){for(B=V/m,k=p*(1-B),z=d*Math.sin(B*Math.PI/2),j=0,X=U.length;j<X;j++)N=r(U[j],W[j],z),o(N.x,N.y,E+k);for(w=0,M=P.length;w<M;w++)for(b=P[w],K=Z[w],j=0,X=b.length;j<X;j++)N=r(b[j],K[j],z),R?o(N.x,N.y+h[T-1].y,h[T-1].x+k):o(N.x,N.y,E+k)}!function(){if(g){var t=0,e=I*t;for(j=0;j<G;j++)O=D[j],a(O[2]+e,O[1]+e,O[0]+e,!0);for(t=T+2*m,e=I*t,j=0;j<G;j++)O=D[j],a(O[0]+e,O[1]+e,O[2]+e,!1)}else{for(j=0;j<G;j++)O=D[j],a(O[2],O[1],O[0],!0);for(j=0;j<G;j++)O=D[j],a(O[0]+I*T,O[1]+I*T,O[2]+I*T,!1)}}(),function(){var t=0;for(n(U,t),t+=U.length,w=0,M=P.length;w<M;w++)b=P[w],n(b,t),t+=b.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i,n,o){var a=t.vertices[i].x,s=t.vertices[i].y,h=t.vertices[n].x,l=t.vertices[n].y,c=t.vertices[o].x,u=t.vertices[o].y;return[new THREE.Vector2(a,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(t,e,r,i,n,o){return this.generateTopUV(t,e,r,i,n,o)},generateSideWallUV:function(t,e,r,i,n,o,a,s,h,l,c,u){var f=t.vertices[n].x,E=t.vertices[n].y,p=t.vertices[n].z,d=t.vertices[o].x,m=t.vertices[o].y,g=t.vertices[o].z,v=t.vertices[a].x,T=t.vertices[a].y,y=t.vertices[a].z,R=t.vertices[s].x,x=t.vertices[s].y,H=t.vertices[s].z;return Math.abs(E-m)<.01?[new THREE.Vector2(f,1-p),new THREE.Vector2(d,1-g),new THREE.Vector2(v,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(E,1-p),new THREE.Vector2(m,1-g),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),t instanceof Array==!1&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e);return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){void 0===e&&(e={});var r,i,n,o=void 0!==e.curveSegments?e.curveSegments:12,a=e.material,s=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,h=this.vertices.length,l=t.extractPoints(o),c=l.shape,u=l.holes,f=!THREE.Shape.Utils.isClockWise(c);if(f){for(c=c.reverse(),r=0,i=u.length;r<i;r++)n=u[r],THREE.Shape.Utils.isClockWise(n)&&(u[r]=n.reverse());f=!1}var E=THREE.Shape.Utils.triangulateShape(c,u),p=c;for(r=0,i=u.length;r<i;r++)n=u[r],c=c.concat(n);var d,m,g=c.length,v=E.length;p.length;for(r=0;r<g;r++)d=c[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(r=0;r<v;r++){m=E[r];var T=m[0]+h,y=m[1]+h,R=m[2]+h;this.faces.push(new THREE.Face3(T,y,R,null,null,a)),this.faceVertexUvs[0].push(s.generateBottomUV(this,t,e,T,y,R))}},THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),e=e||12,r=r||0,i=i||2*Math.PI;for(var n=1/(t.length-1),o=1/e,a=0,s=e;a<=s;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),u=0,f=t.length;u<f;u++){var E=t[u],p=new THREE.Vector3;p.x=l*E.x-c*E.y,p.y=c*E.x+l*E.y,p.z=E.z,this.vertices.push(p)}for(var d=t.length,a=0,s=e;a<s;a++)for(var u=0,f=t.length-1;u<f;u++){var m=u+d*a,g=m,v=m+d,l=m+1+d,T=m+1,y=a*o,R=u*n,x=y+o,H=R+n;this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(v,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};var n,o,a=t/2,s=e/2,h=r||1,l=i||1,c=h+1,u=l+1,f=t/h,E=e/l,p=new THREE.Vector3(0,0,1);for(o=0;o<u;o++){var d=o*E-s;for(n=0;n<c;n++){var m=n*f-a;this.vertices.push(new THREE.Vector3(m,-d,0))}}for(o=0;o<l;o++)for(n=0;n<h;n++){var g=n+c*o,v=n+c*(o+1),T=n+1+c*(o+1),y=n+1+c*o,R=new THREE.Vector2(n/h,1-o/l),x=new THREE.Vector2(n/h,1-(o+1)/l),H=new THREE.Vector2((n+1)/h,1-(o+1)/l),_=new THREE.Vector2((n+1)/h,1-o/l),b=new THREE.Face3(g,v,y);b.normal.copy(p),b.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(b),this.faceVertexUvs[0].push([R,x,_]),b=new THREE.Face3(v,T,y),b.normal.copy(p),b.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(b),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),t=t||0,e=e||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(1,i):8;var a,s,h=[],l=t,c=(e-t)/i;for(a=0;a<i+1;a++){for(s=0;s<r+1;s++){var u=new THREE.Vector3,f=n+s/r*o;u.x=l*Math.cos(f),u.y=l*Math.sin(f),this.vertices.push(u),h.push(new THREE.Vector2((u.x/e+1)/2,(u.y/e+1)/2))}l+=c}var E=new THREE.Vector3(0,0,1);for(a=0;a<i;a++){var p=a*(r+1);for(s=0;s<r;s++){var f=s+p,d=f,m=f+r+1,g=f+r+2;this.faces.push(new THREE.Face3(d,m,g,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[g].clone()]),d=f,m=f+r+2,g=f+1,this.faces.push(new THREE.Face3(d,m,g,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[g].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),
THREE.SphereGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],f=[];for(s=0;s<=e;s++){var E=s/e,p=h/r,d=new THREE.Vector3;d.x=-t*Math.cos(i+E*n)*Math.sin(o+p*a),d.y=t*Math.cos(o+p*a),d.z=t*Math.sin(i+E*n)*Math.sin(o+p*a),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(E,1-p))}l.push(u),c.push(f)}for(h=0;h<r;h++)for(s=0;s<e;s++){var m=l[h][s+1],g=l[h][s],v=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[T].clone().normalize(),_=c[h][s+1].clone(),b=c[h][s].clone(),w=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===t?(_.x=(_.x+b.x)/2,this.faces.push(new THREE.Face3(m,v,T,[y,x,H])),this.faceVertexUvs[0].push([_,w,M])):Math.abs(this.vertices[v].y)===t?(w.x=(w.x+M.x)/2,this.faces.push(new THREE.Face3(m,g,v,[y,R,x])),this.faceVertexUvs[0].push([_,b,w])):(this.faces.push(new THREE.Face3(m,g,T,[y,R,H])),this.faceVertexUvs[0].push([_,b,M]),this.faces.push(new THREE.Face3(g,v,T,[R.clone(),x,H.clone()])),this.faceVertexUvs[0].push([b.clone(),w,M.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(t,e){e=e||{};var r=THREE.FontUtils.generateShapes(t,e);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,e)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=t*Math.cos(c),o.y=t*Math.sin(c);var f=new THREE.Vector3;f.x=(t+e*Math.cos(u))*Math.cos(c),f.y=(t+e*Math.cos(u))*Math.sin(c),f.z=e*Math.sin(u),this.vertices.push(f),a.push(new THREE.Vector2(l/i,h/r)),s.push(f.clone().sub(o).normalize())}for(var h=1;h<=r;h++)for(var l=1;l<=i;l++){var E=(i+1)*h+l-1,p=(i+1)*(h-1)+l-1,d=(i+1)*(h-1)+l,m=(i+1)*h+l,g=new THREE.Face3(E,p,m,[s[E].clone(),s[p].clone(),s[m].clone()]);this.faces.push(g),this.faceVertexUvs[0].push([a[E].clone(),a[p].clone(),a[m].clone()]),g=new THREE.Face3(p,d,m,[s[p].clone(),s[d].clone(),s[m].clone()]),this.faces.push(g),this.faceVertexUvs[0].push([a[p].clone(),a[d].clone(),a[m].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(t,e,r,i,n,o,a){function s(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t),s=e/r*t,h=Math.cos(s),l=i*(2+h)*.5*o,c=i*(2+h)*a*.5,u=n*i*Math.sin(s)*.5;return new THREE.Vector3(l,c,u)}THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},t=t||100,e=e||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var h=new Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;f<r;++f){h[f]=new Array(i);var E=f/r*2*n*Math.PI,p=s(E,o,n,t,a),d=s(E+.01,o,n,t,a);l.subVectors(d,p),c.addVectors(d,p),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize();for(var m=0;m<i;++m){var g=m/i*2*Math.PI,v=-e*Math.cos(g),T=e*Math.sin(g),y=new THREE.Vector3;y.x=p.x+v*c.x+T*u.x,y.y=p.y+v*c.y+T*u.y,y.z=p.z+v*c.z+T*u.z,h[f][m]=this.vertices.push(y)-1}}for(var f=0;f<r;++f)for(var m=0;m<i;++m){var R=(f+1)%r,x=(m+1)%i,H=h[f][m],_=h[R][m],b=h[R][x],w=h[f][x],M=new THREE.Vector2(f/r,m/i),S=new THREE.Vector2((f+1)/r,m/i),C=new THREE.Vector2((f+1)/r,(m+1)/i),A=new THREE.Vector2(f/r,(m+1)/i);this.faces.push(new THREE.Face3(H,_,w)),this.faceVertexUvs[0].push([M,S,A]),this.faces.push(new THREE.Face3(_,b,w)),this.faceVertexUvs[0].push([S.clone(),C,A.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n},e=e||64,r=r||1,i=i||8,n=n||!1;var o,a,s,h,l,c,u,f,E,p,d,m,g,v,T,y,R,x,H,_=[],b=this,w=e+1,M=new THREE.Vector3,S=new THREE.TubeGeometry.FrenetFrames(t,e,n),C=S.tangents,A=S.normals,L=S.binormals;for(this.tangents=C,this.normals=A,this.binormals=L,f=0;f<w;f++)for(_[f]=[],s=f/(w-1),u=t.getPointAt(s),C[f],o=A[f],a=L[f],E=0;E<i;E++)h=E/i*2*Math.PI,l=-r*Math.cos(h),c=r*Math.sin(h),M.copy(u),M.x+=l*o.x+c*a.x,M.y+=l*o.y+c*a.y,M.z+=l*o.z+c*a.z,_[f][E]=function(t,e,r){return b.vertices.push(new THREE.Vector3(t,e,r))-1}(M.x,M.y,M.z);for(f=0;f<e;f++)for(E=0;E<i;E++)p=n?(f+1)%e:f+1,d=(E+1)%i,m=_[f][E],g=_[p][E],v=_[p][d],T=_[f][d],y=new THREE.Vector2(f/e,E/i),R=new THREE.Vector2((f+1)/e,E/i),x=new THREE.Vector2((f+1)/e,(E+1)/i),H=new THREE.Vector2(f/e,(E+1)/i),this.faces.push(new THREE.Face3(m,g,T)),this.faceVertexUvs[0].push([y,R,H]),this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([R.clone(),x,H.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(t,e,r){var i,n,o,a,s,h,l,c=(new THREE.Vector3,new THREE.Vector3),u=(new THREE.Vector3,[]),f=[],E=[],p=new THREE.Vector3,d=new THREE.Matrix4,m=e+1;for(this.tangents=u,this.normals=f,this.binormals=E,h=0;h<m;h++)l=h/(m-1),u[h]=t.getTangentAt(l),u[h].normalize();for(function(){f[0]=new THREE.Vector3,E[0]=new THREE.Vector3,n=Number.MAX_VALUE,o=Math.abs(u[0].x),a=Math.abs(u[0].y),s=Math.abs(u[0].z),o<=n&&(n=o,c.set(1,0,0)),a<=n&&(n=a,c.set(0,1,0)),s<=n&&c.set(0,0,1),p.crossVectors(u[0],c).normalize(),f[0].crossVectors(u[0],p),E[0].crossVectors(u[0],f[0])}(),h=1;h<m;h++)f[h]=f[h-1].clone(),E[h]=E[h-1].clone(),p.crossVectors(u[h-1],u[h]),p.length()>1e-4&&(p.normalize(),i=Math.acos(THREE.Math.clamp(u[h-1].dot(u[h]),-1,1)),f[h].applyMatrix4(d.makeRotationAxis(p,i))),E[h].crossVectors(u[h],f[h]);if(r)for(i=Math.acos(THREE.Math.clamp(f[0].dot(f[m-1]),-1,1)),i/=m-1,u[0].dot(p.crossVectors(f[0],f[m-1]))>0&&(i=-i),h=1;h<m;h++)f[h].applyMatrix4(d.makeRotationAxis(u[h],i*h)),E[h].crossVectors(u[h],f[h])},THREE.PolyhedronGeometry=function(t,e,r,i){function n(t){var e=t.normalize().clone();e.index=l.vertices.push(e)-1;var r=a(t)/2/Math.PI+.5,i=s(t)/Math.PI+.5;return e.uv=new THREE.Vector2(r,1-i),e}function o(t,e,r){var i=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()]);l.faces.push(i),v.copy(t).add(e).add(r).divideScalar(3);var n=a(v);l.faceVertexUvs[0].push([h(t.uv,t,n),h(e.uv,e,n),h(r.uv,r,n)])}function a(t){return Math.atan2(t.z,-t.x)}function s(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}function h(t,e,r){return r<0&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),0===e.x&&0===e.z&&(t=new THREE.Vector2(r/2/Math.PI+.5,t.y)),t.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var l=this,c=0,u=t.length;c<u;c+=3)n(new THREE.Vector3(t[c],t[c+1],t[c+2]));for(var f=this.vertices,E=[],c=0,p=0,u=e.length;c<u;c+=3,p++){var d=f[e[c]],m=f[e[c+1]],g=f[e[c+2]];E[p]=new THREE.Face3(d.index,m.index,g.index,[d.clone(),m.clone(),g.clone()])}for(var v=new THREE.Vector3,c=0,u=E.length;c<u;c++)!function(t,e){for(var r=Math.pow(2,e),i=(Math.pow(4,e),n(l.vertices[t.a])),a=n(l.vertices[t.b]),s=n(l.vertices[t.c]),h=[],c=0;c<=r;c++){h[c]=[];for(var u=n(i.clone().lerp(s,c/r)),f=n(a.clone().lerp(s,c/r)),E=r-c,p=0;p<=E;p++)h[c][p]=0==p&&c==r?u:n(u.clone().lerp(f,p/E))}for(var c=0;c<r;c++)for(var p=0;p<2*(r-c)-1;p++){var d=Math.floor(p/2);p%2==0?o(h[c][d+1],h[c+1][d],h[c][d]):o(h[c][d+1],h[c+1][d+1],h[c+1][d])}}(E[c],i);for(var c=0,u=this.faceVertexUvs[0].length;c<u;c++){var T=this.faceVertexUvs[0][c],y=T[0].x,R=T[1].x,x=T[2].x,H=Math.max(y,Math.max(R,x)),_=Math.min(y,Math.min(R,x));H>.9&&_<.1&&(y<.2&&(T[0].x+=1),R<.2&&(T[1].x+=1),x<.2&&(T[2].x+=1))}for(var c=0,u=this.vertices.length;c<u;c++)this.vertices[c].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(t,e){this.parameters={radius:t,detail:e};var r=(1+Math.sqrt(5))/2,i=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,i,n,t,e)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(t,e){this.parameters={radius:t,detail:e};var r=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,r,i,t,e)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(t,e){var r=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,r,i,t,e)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this);var i,n,o,a,s,h=this.vertices,l=this.faces,c=this.faceVertexUvs[0],u=e+1;for(i=0;i<=r;i++)for(s=i/r,n=0;n<=e;n++)a=n/e,o=t(a,s),h.push(o);var f,E,p,d,m,g,v,T;for(i=0;i<r;i++)for(n=0;n<e;n++)f=i*u+n,E=i*u+n+1,p=(i+1)*u+n+1,d=(i+1)*u+n,m=new THREE.Vector2(n/e,i/r),g=new THREE.Vector2((n+1)/e,i/r),v=new THREE.Vector2((n+1)/e,(i+1)/r),T=new THREE.Vector2(n/e,(i+1)/r),l.push(new THREE.Face3(f,E,d)),c.push([m,g,T]),l.push(new THREE.Face3(E,p,d)),c.push([g.clone(),v,T.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(t){t=t||1;var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.BufferAttribute(e,3)),i.addAttribute("color",new THREE.BufferAttribute(r,3));var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,i,n,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var e=new THREE.CylinderGeometry(0,.5,1,5,1);return e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(r,i,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(i),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var t,e=new THREE.Vector3;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,t,1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(t){var e=t.geometry;null===e.boundingBox&&e.computeBoundingBox();var r=e.boundingBox.min,i=e.boundingBox.max,n=this.geometry.attributes.position.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=r.x,n[4]=i.y,n[5]=i.z,n[6]=r.x,n[7]=i.y,n[8]=i.z,n[9]=r.x,n[10]=r.y,n[11]=i.z,n[12]=r.x,n[13]=r.y,n[14]=i.z,n[15]=i.x,n[16]=r.y,n[17]=i.z,n[18]=i.x,n[19]=r.y,n[20]=i.z,n[21]=i.x,n[22]=i.y,n[23]=i.z,n[24]=i.x,n[25]=i.y,n[26]=r.z,n[27]=r.x,n[28]=i.y,n[29]=r.z,n[30]=r.x,n[31]=i.y,n[32]=r.z,n[33]=r.x,n[34]=r.y,n[35]=r.z,n[36]=r.x,n[37]=r.y,n[38]=r.z,n[39]=i.x,n[40]=r.y,n[41]=r.z,n[42]=i.x,n[43]=r.y,n[44]=r.z,n[45]=i.x,n[46]=i.y,n[47]=r.z,n[48]=i.x,n[49]=i.y,n[50]=i.z,n[51]=i.x,n[52]=i.y,n[53]=r.z,n[54]=r.x,n[55]=i.y,n[56]=i.z,n[57]=r.x,n[58]=i.y,n[59]=r.z,n[60]=r.x,n[61]=r.y,n[62]=i.z,n[63]=r.x,n[64]=r.y,n[65]=r.z,n[66]=i.x,n[67]=r.y,n[68]=i.z,n[69]=i.x,n[70]=r.y,n[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.BoundingBoxHelper=function(t,e){var r=void 0!==e?e:8947848;this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){function e(t,e,i){r(t,i),r(e,i)}function r(t,e){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(e)),void 0===o[t]&&(o[t]=[]),o[t].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};e("n1","n2",16755200),e("n2","n4",16755200),e("n4","n3",16755200),e("n3","n1",16755200),e("f1","f2",16755200),e("f2","f4",16755200),e("f4","f3",16755200),e("f3","f1",16755200),e("n1","f1",16755200),e("n2","f2",16755200),e("n3","f3",16755200),e("n4","f4",16755200),e("p","n1",16711680),e("p","n2",16711680),e("p","n3",16711680),e("p","n4",16711680),e("u1","u2",43775),e("u2","u3",43775),e("u3","u1",43775),e("c","t",16777215),e("p","c",3355443),e("cn1","cn2",3355443),e("cn3","cn4",3355443),e("cf1","cf2",3355443),e("cf3","cf4",3355443),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,o,a,s){t.set(o,a,s),r.unprojectVector(t,e);var h=n.pointMap[i];if(void 0!==h)for(var l=0,c=h.length;l<c;l++)n.geometry.vertices[h[l]].copy(t)}var n=this;e.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-1,-1,-1),i("n2",1,-1,-1),i("n3",-1,1,-1),i("n4",1,1,-1),i("f1",-1,-1,1),i("f2",1,-1,1),i("f3",-1,1,1),i("f4",1,1,1),i("u1",.7,1.1,-1),i("u2",-.7,1.1,-1),i("u3",0,2,-1),i("cf1",-1,0,1),i("cf2",1,0,1),i("cf3",0,-1,1),i("cf4",0,1,1),i("cn1",-1,0,-1),i("cn2",1,0,-1),i("cn3",0,-1,-1),i("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry,h=t.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,c=h.faces,u=0,f=0,E=c.length;f<E;f++)for(var p=c[f],d=0;d<3;d++){i[0]=p[a[d]],i[1]=p[a[(d+1)%3]],i.sort(o);var m=i.toString();void 0===n[m]?(n[m]={vert1:i[0],vert2:i[1],face1:f,face2:void 0},u++):n[m].face2=f}s.addAttribute("position",new THREE.Float32Attribute(2*u*3,3));var g=s.attributes.position.array,v=0;for(var m in n){var T=n[m];if(void 0===T.face2||c[T.face1].normal.dot(c[T.face2].normal)<.9999){var y=l[T.vert1];g[v++]=y.x,g[v++]=y.y,g[v++]=y.z,y=l[T.vert2],g[v++]=y.x,g[v++]=y.y,g[v++]=y.z}}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;for(var n=void 0!==r?r:16776960,o=void 0!==i?i:1,a=new THREE.Geometry,s=this.object.geometry.faces,h=0,l=s.length;h<l;h++)a.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:n,linewidth:o}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var t=this.geometry.vertices,e=this.object,r=e.geometry.vertices,i=e.geometry.faces,n=e.matrixWorld;e.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=0,a=0,s=i.length;o<s;o++,a+=2){var h=i[o];t[a].copy(r[h.a]).add(r[h.b]).add(r[h.c]).divideScalar(3).applyMatrix4(n),t[a+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(t[a])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3(-t,0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,-t),new THREE.Vector3(n,0,t));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e,r,i){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var n=new THREE.SphereGeometry(e,4,2);n.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var o=0;o<8;o++)n.faces[o].color=this.colors[o<4?0:1];var a=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(n,a),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(e,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t);for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++){this.bones[r].parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)))}var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,e,i,THREE.LinePieces),this.root=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[];t instanceof THREE.Bone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]));return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,o.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,o.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1;var e=new THREE.CylinderGeometry(0,1,1,8,1,!0);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;for(var n=void 0!==r?r:16711680,o=void 0!==i?i:1,a=new THREE.Geometry,s=(t.geometry.vertices,t.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=s[h],u=0,f=c.vertexNormals.length;u<f;u++)a.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:n,linewidth:o}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(t){var e=new THREE.Vector3;return function(t){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,o=this.object.geometry.faces,a=this.object.matrixWorld,s=0,h=0,l=o.length;h<l;h++)for(var c=o[h],u=0,f=c.vertexNormals.length;u<f;u++){var E=c[r[u]],p=n[E],d=c.vertexNormals[u];i[s].copy(p).applyMatrix4(a),e.copy(d).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),e.add(i[s]),s+=1,i[s].copy(e),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;for(var n=void 0!==r?r:255,o=void 0!==i?i:1,a=new THREE.Geometry,s=(t.geometry.vertices,t.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=s[h],u=0,f=c.vertexTangents.length;u<f;u++)a.vertices.push(new THREE.Vector3),a.vertices.push(new THREE.Vector3);THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:n,linewidth:o}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(t){var e=new THREE.Vector3;return function(t){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,o=this.object.geometry.faces,a=this.object.matrixWorld,s=0,h=0,l=o.length;h<l;h++)for(var c=o[h],u=0,f=c.vertexTangents.length;u<f;u++){var E=c[r[u]],p=n[E],d=c.vertexTangents[u];i[s].copy(p).applyMatrix4(a),e.copy(d).transformDirection(a).multiplyScalar(this.size),e.add(i[s]),s+=1,i[s].copy(e),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry;if(t.geometry instanceof THREE.Geometry){for(var h=t.geometry.vertices,l=t.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;f<E;f++)for(var p=l[f],d=0;d<3;d++){i[0]=p[a[d]],i[1]=p[a[(d+1)%3]],i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var g=new Float32Array(2*c*3),f=0,E=c;f<E;f++)for(var d=0;d<2;d++){var v=h[u[2*f+d]],T=6*f+3*d;g[T+0]=v.x,g[T+1]=v.y,g[T+2]=v.z}s.addAttribute("position",new THREE.BufferAttribute(g,3))}else if(t.geometry instanceof THREE.BufferGeometry)if(void 0!==t.geometry.attributes.index){for(var h=t.geometry.attributes.position.array,y=t.geometry.attributes.index.array,R=t.geometry.offsets,c=0,u=new Uint32Array(2*y.length),x=0,H=R.length;x<H;++x)for(var _=R[x].start,b=R[x].count,T=R[x].index,f=_,w=_+b;f<w;f+=3)for(var d=0;d<3;d++){i[0]=T+y[f+d],i[1]=T+y[f+(d+1)%3],i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var g=new Float32Array(2*c*3),f=0,E=c;f<E;f++)for(var d=0;d<2;d++){var T=6*f+3*d,M=3*u[2*f+d];g[T+0]=h[M],g[T+1]=h[M+1],g[T+2]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(g,3))}else{for(var h=t.geometry.attributes.position.array,c=h.length/3,S=c/3,g=new Float32Array(2*c*3),f=0,E=S;f<E;f++)for(var d=0;d<3;d++){var T=18*f+6*d,C=9*f+3*d;g[T+0]=h[C],g[T+1]=h[C+1],g[T+2]=h[C+2];var M=9*f+(d+1)%3*3;g[T+3]=h[M],g[T+4]=h[M+1],g[T+5]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(g,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(t){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<r;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i=r-1,n=r/1;this.createAnimation("__default",0,i,n),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){var n={startFrame:e,endFrame:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r={},i=this.geometry,n=0,o=i.morphTargets.length;n<o;n++){var a=i.morphTargets[n],s=a.name.match(/([a-z]+)_?(\d+)/);if(s&&s.length>1){var h=s[1];s[2];r[h]||(r[h]={start:1/0,end:-1/0});var l=r[h];n<l.start&&(l.start=n),n>l.end&&(l.end=n),e||(e=h)}}for(var h in r){var l=r[h];this.createAnimation(h,l.start,l.end,t)}this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){var e=this.animationsMap[t];e&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){var e=this.animationsMap[t];e&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){var r=this.animationsMap[t];r&&(r.fps=e,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){var r=this.animationsMap[t];r&&(r.duration=e,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){var r=this.animationsMap[t];r&&(r.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){var r=this.animationsMap[t];r&&(r.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0,r=this.animationsMap[t];return r&&(e=r.time),e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1,r=this.animationsMap[t];return r&&(e=r.duration),e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("animation["+t+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){var e=this.animationsMap[t];e&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i=this.animationsList[e];if(i.active){var n=i.duration/i.length;i.time+=i.direction*t,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o)
;var s=i.time%n/n;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*a,this.morphTargetInfluences[i.lastFrame]=(1-s)*a}}},THREE.LensFlarePlugin=function(){function t(t,r){var i=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),o=e.createShader(e.VERTEX_SHADER),a="precision "+r+" float;\n";return e.shaderSource(n,a+t.fragmentShader),e.shaderSource(o,a+t.vertexShader),e.compileShader(n),e.compileShader(o),e.attachShader(i,n),e.attachShader(i,o),e.linkProgram(i),i}var e,r,i,n=[],o={};this.init=function(n){e=n.context,r=n,i=n.getPrecision(),o.vertices=new Float32Array(16),o.faces=new Uint16Array(6);var a=0;o.vertices[a++]=-1,o.vertices[a++]=-1,o.vertices[a++]=0,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,a=0,o.faces[a++]=0,o.faces[a++]=1,o.faces[a++]=2,o.faces[a++]=0,o.faces[a++]=2,o.faces[a++]=3,o.vertexBuffer=e.createBuffer(),o.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,o.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,o.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,o.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,o.faces,e.STATIC_DRAW),o.tempTexture=e.createTexture(),o.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,o.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,o.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(o.hasVertexTexture=!1,o.program=t(THREE.ShaderFlares.lensFlare,i)):(o.hasVertexTexture=!0,o.program=t(THREE.ShaderFlares.lensFlareVertexTexture,i)),o.attributes={},o.uniforms={},o.attributes.vertex=e.getAttribLocation(o.program,"position"),o.attributes.uv=e.getAttribLocation(o.program,"uv"),o.uniforms.renderType=e.getUniformLocation(o.program,"renderType"),o.uniforms.map=e.getUniformLocation(o.program,"map"),o.uniforms.occlusionMap=e.getUniformLocation(o.program,"occlusionMap"),o.uniforms.opacity=e.getUniformLocation(o.program,"opacity"),o.uniforms.color=e.getUniformLocation(o.program,"color"),o.uniforms.scale=e.getUniformLocation(o.program,"scale"),o.uniforms.rotation=e.getUniformLocation(o.program,"rotation"),o.uniforms.screenPosition=e.getUniformLocation(o.program,"screenPosition")},this.render=function(t,i,a,s){if(n.length=0,t.traverseVisible(function(t){t instanceof THREE.LensFlare&&n.push(t)}),0!==n.length){var h=new THREE.Vector3,l=s/a,c=.5*a,u=.5*s,f=16/s,E=new THREE.Vector2(f*l,f),p=new THREE.Vector3(1,1,0),d=new THREE.Vector2(1,1),m=o.uniforms,g=o.attributes;e.useProgram(o.program),e.enableVertexAttribArray(o.attributes.vertex),e.enableVertexAttribArray(o.attributes.uv),e.uniform1i(m.occlusionMap,0),e.uniform1i(m.map,1),e.bindBuffer(e.ARRAY_BUFFER,o.vertexBuffer),e.vertexAttribPointer(g.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(g.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,o.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1);for(var v=0,T=n.length;v<T;v++){f=16/s,E.set(f*l,f);var y=n[v];if(h.set(y.matrixWorld.elements[12],y.matrixWorld.elements[13],y.matrixWorld.elements[14]),h.applyMatrix4(i.matrixWorldInverse),h.applyProjection(i.projectionMatrix),p.copy(h),d.x=p.x*c+c,d.y=p.y*u+u,o.hasVertexTexture||d.x>0&&d.x<a&&d.y>0&&d.y<s){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,o.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,d.x-8,d.y-8,16,16,0),e.uniform1i(m.renderType,0),e.uniform2f(m.scale,E.x,E.y),e.uniform3f(m.screenPosition,p.x,p.y,p.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,o.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,d.x-8,d.y-8,16,16,0),e.uniform1i(m.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,o.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),y.positionScreen.copy(p),y.customUpdateCallback?y.customUpdateCallback(y):y.updateLensFlares(),e.uniform1i(m.renderType,2),e.enable(e.BLEND);for(var R=0,x=y.lensFlares.length;R<x;R++){var H=y.lensFlares[R];H.opacity>.001&&H.scale>.001&&(p.x=H.x,p.y=H.y,p.z=H.z,f=H.size*H.scale/s,E.x=f*l,E.y=f,e.uniform3f(m.screenPosition,p.x,p.y,p.z),e.uniform2f(m.scale,E.x,E.y),e.uniform1f(m.rotation,H.rotation),e.uniform1f(m.opacity,H.opacity),e.uniform3f(m.color,H.color.r,H.color.g,H.color.b),r.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),r.setTexture(H.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id];if(n&&r.castShadow&&(r.frustumCulled===!1||u.intersectsObject(r)===!0))for(var o=0,a=n.length;o<a;o++){var s=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),m.push(s)}for(var o=0,a=r.children.length;o<a;o++)t(e,r.children[o],i)}}function e(t,e){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=t.shadowCameraNear,r.shadowCameraFar=t.shadowCameraFar,r.shadowCameraLeft=t.shadowCameraLeft,r.shadowCameraRight=t.shadowCameraRight,r.shadowCameraBottom=t.shadowCameraBottom,r.shadowCameraTop=t.shadowCameraTop,r.shadowCameraVisible=t.shadowCameraVisible,r.shadowDarkness=t.shadowDarkness,r.shadowBias=t.shadowCascadeBias[e],r.shadowMapWidth=t.shadowCascadeWidth[e],r.shadowMapHeight=t.shadowCascadeHeight[e],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,n=r.pointsFrustum,o=0;o<8;o++)i[o]=new THREE.Vector3,n[o]=new THREE.Vector3;var a=t.shadowCascadeNearZ[e],s=t.shadowCascadeFarZ[e];return n[0].set(-1,-1,a),n[1].set(1,-1,a),n[2].set(-1,1,a),n[3].set(1,1,a),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function r(t,e){var r=t.shadowCascadeArray[e];r.position.copy(t.position),r.target.position.copy(t.target.position),r.lookAt(r.target),r.shadowCameraVisible=t.shadowCameraVisible,r.shadowDarkness=t.shadowDarkness,r.shadowBias=t.shadowCascadeBias[e];var i=t.shadowCascadeNearZ[e],n=t.shadowCascadeFarZ[e],o=r.pointsFrustum;o[0].z=i,o[1].z=i,o[2].z=i,o[3].z=i,o[4].z=n,o[5].z=n,o[6].z=n,o[7].z=n}function i(t,e){var r=e.shadowCamera,i=e.pointsFrustum,n=e.pointsWorld;E.set(1/0,1/0,1/0),p.set(-1/0,-1/0,-1/0);for(var o=0;o<8;o++){var a=n[o];a.copy(i[o]),THREE.ShadowMapPlugin.__projector.unprojectVector(a,t),a.applyMatrix4(r.matrixWorldInverse),a.x<E.x&&(E.x=a.x),a.x>p.x&&(p.x=a.x),a.y<E.y&&(E.y=a.y),a.y>p.y&&(p.y=a.y),a.z<E.z&&(E.z=a.z),a.z>p.z&&(p.z=a.z)}r.left=E.x,r.right=p.x,r.top=p.y,r.bottom=E.y,r.updateProjectionMatrix()}function n(t){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material}var o,a,s,h,l,c,u=new THREE.Frustum,f=new THREE.Matrix4,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=[];this.init=function(t){o=t.context,a=t;var e=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(e.uniforms);s=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r}),h=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,skinning:!0}),c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),s._shadowPass=!0,h._shadowPass=!0,l._shadowPass=!0,c._shadowPass=!0},this.render=function(t,e){a.shadowMapEnabled&&a.shadowMapAutoUpdate&&this.update(t,e)},this.update=function(E,p){var g,v,T,y,R,x,H,_,b,w,M,S,C,A=[],L=0;for(o.clearColor(1,1,1,1),o.disable(o.BLEND),o.enable(o.CULL_FACE),o.frontFace(o.CCW),a.shadowMapCullFace===THREE.CullFaceFront?o.cullFace(o.FRONT):o.cullFace(o.BACK),a.setDepthTest(!0),g=0,v=E.__lights.length;g<v;g++)if(C=E.__lights[g],C.castShadow)if(C instanceof THREE.DirectionalLight&&C.shadowCascade)for(R=0;R<C.shadowCascadeCount;R++){var P;if(C.shadowCascadeArray[R])P=C.shadowCascadeArray[R];else{P=e(C,R),P.originalCamera=p;var F=new THREE.Gyroscope;F.position.copy(C.shadowCascadeOffset),F.add(P),F.add(P.target),p.add(F),C.shadowCascadeArray[R]=P,console.log("Created virtualLight",P)}r(C,R),A[L]=P,L++}else A[L]=C,L++;for(g=0,v=A.length;g<v;g++){if(C=A[g],!C.shadowMap){var D=THREE.LinearFilter;a.shadowMapType===THREE.PCFSoftShadowMap&&(D=THREE.NearestFilter);var U={minFilter:D,magFilter:D,format:THREE.RGBAFormat};C.shadowMap=new THREE.WebGLRenderTarget(C.shadowMapWidth,C.shadowMapHeight,U),C.shadowMapSize=new THREE.Vector2(C.shadowMapWidth,C.shadowMapHeight),C.shadowMatrix=new THREE.Matrix4}if(!C.shadowCamera){if(C instanceof THREE.SpotLight)C.shadowCamera=new THREE.PerspectiveCamera(C.shadowCameraFov,C.shadowMapWidth/C.shadowMapHeight,C.shadowCameraNear,C.shadowCameraFar);else{if(!(C instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}C.shadowCamera=new THREE.OrthographicCamera(C.shadowCameraLeft,C.shadowCameraRight,C.shadowCameraTop,C.shadowCameraBottom,C.shadowCameraNear,C.shadowCameraFar)}E.add(C.shadowCamera),E.autoUpdate===!0&&E.updateMatrixWorld()}C.shadowCameraVisible&&!C.cameraHelper&&(C.cameraHelper=new THREE.CameraHelper(C.shadowCamera),C.shadowCamera.add(C.cameraHelper)),C.isVirtual&&P.originalCamera==p&&i(p,C),x=C.shadowMap,H=C.shadowMatrix,_=C.shadowCamera,_.position.setFromMatrixPosition(C.matrixWorld),d.setFromMatrixPosition(C.target.matrixWorld),_.lookAt(d),_.updateMatrixWorld(),_.matrixWorldInverse.getInverse(_.matrixWorld),C.cameraHelper&&(C.cameraHelper.visible=C.shadowCameraVisible),C.shadowCameraVisible&&C.cameraHelper.update(),H.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),H.multiply(_.projectionMatrix),H.multiply(_.matrixWorldInverse),f.multiplyMatrices(_.projectionMatrix,_.matrixWorldInverse),u.setFromMatrix(f),a.setRenderTarget(x),a.clear(),m.length=0,t(E,E,_);var V,z,B;for(T=0,y=m.length;T<y;T++)M=m[T],S=M.object,b=M.buffer,V=n(S),z=void 0!==S.geometry.morphTargets&&S.geometry.morphTargets.length>0&&V.morphTargets,B=S instanceof THREE.SkinnedMesh&&V.skinning,w=S.customDepthMaterial?S.customDepthMaterial:B?z?c:l:z?h:s,a.setMaterialFaces(V),b instanceof THREE.BufferGeometry?a.renderBufferDirect(_,E.__lights,null,w,b,S):a.renderBuffer(_,E.__lights,null,w,b,S);var k=E.__webglObjectsImmediate;for(T=0,y=k.length;T<y;T++)M=k[T],S=M.object,S.visible&&S.castShadow&&(S._modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,S.matrixWorld),a.renderImmediateObject(_,E.__lights,null,s,S))}var N=a.getClearColor(),O=a.getClearAlpha();o.clearColor(N.r,N.g,N.b,O),o.enable(o.BLEND),a.shadowMapCullFace===THREE.CullFaceFront&&o.cullFace(o.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function t(){var t=r.createProgram(),e=r.createShader(r.VERTEX_SHADER),n=r.createShader(r.FRAGMENT_SHADER);return r.shaderSource(e,["precision "+i.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),r.shaderSource(n,["precision "+i.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),r.compileShader(e),r.compileShader(n),r.attachShader(t,e),r.attachShader(t,n),r.linkProgram(t),t}function e(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}var r,i,n,o,a,s,h,l,c,u,f=[];this.init=function(e){r=e.context,i=e,o=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),a=new Uint16Array([0,1,2,0,2,3]),s=r.createBuffer(),h=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,s),r.bufferData(r.ARRAY_BUFFER,o,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h),r.bufferData(r.ELEMENT_ARRAY_BUFFER,a,r.STATIC_DRAW),l=t(),c={position:r.getAttribLocation(l,"position"),uv:r.getAttribLocation(l,"uv")},u={uvOffset:r.getUniformLocation(l,"uvOffset"),uvScale:r.getUniformLocation(l,"uvScale"),rotation:r.getUniformLocation(l,"rotation"),scale:r.getUniformLocation(l,"scale"),color:r.getUniformLocation(l,"color"),map:r.getUniformLocation(l,"map"),opacity:r.getUniformLocation(l,"opacity"),modelViewMatrix:r.getUniformLocation(l,"modelViewMatrix"),projectionMatrix:r.getUniformLocation(l,"projectionMatrix"),fogType:r.getUniformLocation(l,"fogType"),fogDensity:r.getUniformLocation(l,"fogDensity"),fogNear:r.getUniformLocation(l,"fogNear"),fogFar:r.getUniformLocation(l,"fogFar"),fogColor:r.getUniformLocation(l,"fogColor"),alphaTest:r.getUniformLocation(l,"alphaTest")};var f=document.createElement("canvas");f.width=8,f.height=8;var E=f.getContext("2d");E.fillStyle="white",E.fillRect(0,0,8,8),n=new THREE.Texture(f),n.needsUpdate=!0},this.render=function(t,o,a,E){if(f.length=0,t.traverseVisible(function(t){t instanceof THREE.Sprite&&f.push(t)}),0!==f.length){r.useProgram(l),r.enableVertexAttribArray(c.position),r.enableVertexAttribArray(c.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,s),r.vertexAttribPointer(c.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(c.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h),r.uniformMatrix4fv(u.projectionMatrix,!1,o.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(u.map,0);var p=0,d=0,m=t.fog;m?(r.uniform3f(u.fogColor,m.color.r,m.color.g,m.color.b),m instanceof THREE.Fog?(r.uniform1f(u.fogNear,m.near),r.uniform1f(u.fogFar,m.far),r.uniform1i(u.fogType,1),p=1,d=1):m instanceof THREE.FogExp2&&(r.uniform1f(u.fogDensity,m.density),r.uniform1i(u.fogType,2),p=2,d=2)):(r.uniform1i(u.fogType,0),p=0,d=0);for(var g=0,v=f.length;g<v;g++){var T=f[g],y=T.material;T._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]}f.sort(e);for(var R=[],g=0,v=f.length;g<v;g++){var T=f[g],y=T.material;r.uniform1f(u.alphaTest,y.alphaTest),r.uniformMatrix4fv(u.modelViewMatrix,!1,T._modelViewMatrix.elements),R[0]=T.scale.x,R[1]=T.scale.y;var x=0;t.fog&&y.fog&&(x=d),p!==x&&(r.uniform1i(u.fogType,x),p=x),null!==y.map?(r.uniform2f(u.uvOffset,y.map.offset.x,y.map.offset.y),r.uniform2f(u.uvScale,y.map.repeat.x,y.map.repeat.y)):(r.uniform2f(u.uvOffset,0,0),r.uniform2f(u.uvScale,1,1)),r.uniform1f(u.opacity,y.opacity),r.uniform3f(u.color,y.color.r,y.color.g,y.color.b),r.uniform1f(u.rotation,y.rotation),r.uniform2fv(u.scale,R),i.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),i.setDepthTest(y.depthTest),i.setDepthWrite(y.depthWrite),y.map&&y.map.image&&y.map.image.width?i.setTexture(y.map,0):i.setTexture(n,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id];if(n&&(r.frustumCulled===!1||h.intersectsObject(r)===!0))for(var o=0,a=n.length;o<a;o++){var s=n[o];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),c.push(s)}for(var o=0,a=r.children.length;o<a;o++)t(e,r.children[o],i)}}function e(t){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material}this.enabled=!1,this.renderTarget=null;var r,i,n,o,a,s,h=new THREE.Frustum,l=new THREE.Matrix4,c=[];this.init=function(t){r=t.context,i=t;var e=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(e.uniforms);n=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h}),o=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,morphTargets:!0}),a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),n._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0,s._shadowPass=!0},this.render=function(t,e){this.enabled&&this.update(t,e)},this.update=function(u,f){var E,p,d,m,g,v,T;r.clearColor(1,1,1,1),r.disable(r.BLEND),i.setDepthTest(!0),u.autoUpdate===!0&&u.updateMatrixWorld(),f.matrixWorldInverse.getInverse(f.matrixWorld),l.multiplyMatrices(f.projectionMatrix,f.matrixWorldInverse),h.setFromMatrix(l),i.setRenderTarget(this.renderTarget),i.clear(),c.length=0,t(u,u,f);var y,R,x;for(E=0,p=c.length;E<p;E++)g=c[E],v=g.object,d=g.buffer,v instanceof THREE.PointCloud&&!v.customDepthMaterial||(y=e(v),y&&i.setMaterialFaces(v.material),R=void 0!==v.geometry.morphTargets&&v.geometry.morphTargets.length>0&&y.morphTargets,x=v instanceof THREE.SkinnedMesh&&y.skinning,m=v.customDepthMaterial?v.customDepthMaterial:x?R?s:a:R?o:n,d instanceof THREE.BufferGeometry?i.renderBufferDirect(f,u.__lights,null,m,d,v):i.renderBuffer(f,u.__lights,null,m,d,v));for(T=u.__webglObjectsImmediate,E=0,p=T.length;E<p;E++)g=T[E],v=g.object,v.visible&&(v._modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,v.matrixWorld),i.renderImmediateObject(f,u.__lights,null,n,v));var H=i.getClearColor(),_=i.getClearAlpha();r.clearColor(H.r,H.g,H.b,_),r.enable(r.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};